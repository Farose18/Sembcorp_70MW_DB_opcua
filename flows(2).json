[
    {
        "id": "289f75d22904c270",
        "type": "tab",
        "label": "Block_Inverters",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "083ef892380dfa86",
        "type": "tab",
        "label": "CR_PQM",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4171233ca3258c9e",
        "type": "tab",
        "label": "Block_Inverters",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "86416c6eee9a17b3",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B01_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "93fe77299674c753",
            "e74f4aadbee8e557",
            "663522c9b11a5aa9",
            "982fea38a1693f00",
            "4ff9561706269629",
            "c5cf18d1075c1e33",
            "f7a2c7fa3a0191e8",
            "0b34cf0c4d419255",
            "59d0cab1d16496a1",
            "3d682bfbf434632f",
            "a8d2a1f0c4321c06",
            "4cdcf874acd65aa2",
            "54e0c7956b3ef08b",
            "36bcbedd8d89764a",
            "64752a462630f2c2",
            "d8819a9f85bbb98e",
            "c7e43c858a89c3e2",
            "3a37e5521b89ca21"
        ],
        "x": 154,
        "y": 199,
        "w": 1712,
        "h": 182
    },
    {
        "id": "8746acf6e799cbbe",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B01_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "11af398be8ada449",
            "4ac8dde4de3349e4",
            "6daebb55c5799f05",
            "149c31f58152284f",
            "3cae114bfcc24cea",
            "a4f20e5e06f08f80",
            "4947be5638efa024",
            "1643230ddf6f3bbb",
            "53bb7f8e4d4af2b3",
            "8e7a03beca917ce6",
            "82f0b0c3c002fe6e",
            "25cbaa31bcd79bcf",
            "23637dacc2a13533",
            "230f85707f470ccf",
            "2e923499ea50b4f2",
            "e5b7b3c6973ee330",
            "db35c30f69bdd96e",
            "e40a8df8b33acd8b"
        ],
        "x": 2054,
        "y": 159,
        "w": 1752,
        "h": 182
    },
    {
        "id": "39922fd762cbcd34",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B02_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "67a2a1d4a02061b1",
            "bcfecaedef101f3f",
            "4018e2b9a47d2fea",
            "5467c45395660d11",
            "dc735b9f8d529963",
            "029b5f547a31a742",
            "833678172759d3f6",
            "f0c12e4a844940fe",
            "11c6cca9c184c0e4",
            "9a2268e84dd375dc",
            "905a226faaa769bd",
            "b0fa25456d3e43bf",
            "d38122725f4d4047",
            "89405c68dff14e61",
            "b6500be51aa81737",
            "4cb6398b47225742",
            "f4ddac8896b78f70",
            "2aa3d281253a9c0b"
        ],
        "x": 144,
        "y": 459,
        "w": 1752,
        "h": 182
    },
    {
        "id": "880e34c5bcbd1dda",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B02_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "db6ebdafccd82fe2",
            "596789c353869fbd",
            "7dc980fe6e1fdd70",
            "f29415fce1963906",
            "d9fdbdfddb0a9988",
            "e7340ba1ae4ac71f",
            "ff2475ea23c04cb8",
            "391303bb26a0964b",
            "fac05f885ad5ba03",
            "fbed19f1d8bf9e39",
            "b30c52c3c012c3ef",
            "a2dfb5dd75243b08",
            "749031ba157a88de",
            "c47dfb7d71293930",
            "3090e7539909af52",
            "24e824f3fad5e83c",
            "d4fd99fc1db4d27c",
            "88c5d8abbb0c15c2"
        ],
        "x": 2064,
        "y": 459,
        "w": 1752,
        "h": 182
    },
    {
        "id": "d8b7187f3a6051c1",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B03_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d56f4b698cb0f009",
            "8520d02861d01394",
            "230130216fad6393",
            "f62e583e67cc97de",
            "f8ed27c42f58523a",
            "3da6ca2651e297d9",
            "a39087c04afc34bc",
            "9e890307094162e1",
            "b45bdc5a671805d4",
            "becde0935587b21a",
            "135f309e7e084825",
            "f9fb5f03899418c2",
            "ce0d191bbe6dca95",
            "14f07045c0327a58",
            "fd70427c518e8d05",
            "a638699ead986bbd",
            "9a87145face75812",
            "5c6e319b455867d2"
        ],
        "x": 144,
        "y": 739,
        "w": 1752,
        "h": 182
    },
    {
        "id": "50ab137ea16a4761",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B03_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e5dabde7c2429212",
            "c55896d746337a0e",
            "01d5b2e838b2008e",
            "3aee4d2b38c6becb",
            "815cb936b6499289",
            "4bc4c70cd91b8e1d",
            "ca86a732d491c8a7",
            "998e097c05574fbe",
            "2e81a5c247138e78",
            "168e9664dd792f0e",
            "1c068410551f6784",
            "a7daf0ea94a0c7ed",
            "2ddaf2767d880425",
            "dd5f3a0def9c2e38",
            "bda0354b403c9973",
            "0414f42b3836939c",
            "e976e75b9acc88ee",
            "52d7fb341248091d"
        ],
        "x": 2064,
        "y": 739,
        "w": 1752,
        "h": 182
    },
    {
        "id": "26f381d4b23d2e0a",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B04_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3e73c2224a0af366",
            "5a93bf9d7108f161",
            "27a80b198b75455d",
            "bd719e35c7c2918c",
            "73d53379c02250c4",
            "fcb69dce390c08d3",
            "b442c6706c029b10",
            "3c512819a7343b6e",
            "e39df8cc83910e02",
            "7ffecbbcf678a91a",
            "6d505fd24edbab1a",
            "a2c91939118b9670",
            "17e17cbf9e9f9a53",
            "0936767f42e8e996",
            "b1733d35408158a0",
            "ad0c4f7dfad9b195",
            "927b4af62340a71f",
            "8dc4beeecaabb96f"
        ],
        "x": 144,
        "y": 1019,
        "w": 1752,
        "h": 182
    },
    {
        "id": "246ab91d2503143d",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B04_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "511938ad262111e9",
            "1ff1f2c75695b28e",
            "09c036d6441a8379",
            "583ab7b7bcfd0b16",
            "adf2db3208ee0d5b",
            "b4dd1539b2507cfa",
            "b19ebdf3d1699704",
            "5b6e26dd9a1cf1e7",
            "88a00ff4a69d2fce",
            "c83fc4b214fb375d",
            "7d3e5a06b1821c81",
            "e51b54c88498e322",
            "2b69c8218520a5e7",
            "a65cd0031d0c73e0",
            "dabfc6f977f29c88",
            "45ff94049fe384e6",
            "72d93269bf08e5a9",
            "4dfefc6810454909"
        ],
        "x": 2064,
        "y": 1019,
        "w": 1752,
        "h": 182
    },
    {
        "id": "ebd5024463bcbe9b",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B05_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "03fde93c2d7cd2ca",
            "ba9d60a56c950269",
            "adb4ee6339ebe84c",
            "733ecc878ceebdea",
            "4efaefe17bd95715",
            "ec62215c85436b01",
            "378e82852b81f5db",
            "03b1ae42c0d6c54f",
            "266bd453ee0f4599",
            "5ec02b4f407d40dd",
            "b32b828777429438",
            "8c851aa04eedc59c",
            "88c82990778a8e8e",
            "5119caf01d275eaa",
            "0c45d5ad25720385",
            "07abe8b4e7553697",
            "9b37535bdac38a6b",
            "72727c36ae499f25"
        ],
        "x": 144,
        "y": 1259,
        "w": 1752,
        "h": 182
    },
    {
        "id": "ea9f71f62510e4d6",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B05_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "77d435cd0606ad08",
            "bfa8738050919973",
            "b412b2be93c759cb",
            "090267161dd86a27",
            "45de8a34168697b6",
            "f486f21c1bdc8ae8",
            "380b3dddc45ae0f5",
            "6e1d2df1c90d214b",
            "642b0cd5c35fdb9f",
            "438e94216dc4859f",
            "7ca106946c65fd6e",
            "dd23a07aa873d4b5",
            "59e4e7fd43922a13",
            "4011da45981926b3",
            "354decd118cb6ad0",
            "3076417047a4a73b",
            "446edcf43f4f9c6e",
            "07644f19c6d5f309"
        ],
        "x": 2064,
        "y": 1279,
        "w": 1752,
        "h": 182
    },
    {
        "id": "3a1d6e612c7a6e21",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B06_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "64ad267ea88452f3",
            "b59545861404b887",
            "f522b2aa71b047b0",
            "ac9b2857b8edc21a",
            "489b0ac5a4a295ab",
            "04f5d150ea9c1ddc",
            "756eb2521d0b2c2e",
            "8b48317c8a468dcc",
            "cb627d7721d6c8ef",
            "0820f73ea45c569f",
            "326dc1cbba4de540",
            "e4e7e0376ac9c0af",
            "d9ab2058fcb2794a",
            "9e6ef1cd245900b0",
            "4c08e5ea1363485a",
            "6822182767447edc",
            "6f612e8514deb9fb",
            "2198e5297ea54bee"
        ],
        "x": 144,
        "y": 1539,
        "w": 1752,
        "h": 182
    },
    {
        "id": "73f3b667d8900621",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B07_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "9ed26046060c30d3",
            "1813bc082fe9aae5",
            "0a27c59201595d11",
            "e04802ea36f7e778",
            "bd0feb3982cb510f",
            "fccfd3a3f1afdab7",
            "012a018bd31caaa1",
            "baf06a9966ddd87c",
            "481b3b333c3a641d",
            "d9806b94d27dc237",
            "da72964645983cbd",
            "a8921d19ba46694e",
            "62a3003bcc2b8a0c",
            "909370aaf40601ed",
            "6cd7782a5dc40b6d",
            "bc444c9a2a6403c6",
            "882776f0f937db29",
            "2c32c32966ca9422"
        ],
        "x": 144,
        "y": 1799,
        "w": 1752,
        "h": 182
    },
    {
        "id": "8ac8a2d9666a1663",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B06_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b7ccd2f155460db3",
            "0a4594cfca2118be",
            "db0595d03a3f2f28",
            "3dce431f49a1eec9",
            "184a26c858a75624",
            "88a593f013f6af67",
            "cc724ca53994a08b",
            "d2391fe37bcc0b17",
            "e5585ca073817c7a",
            "8916789fdf4af413",
            "2a8fceb67cbae578",
            "129ef1ee51889630",
            "19e5df24d5c3f3bb",
            "a02bcdcd68083822",
            "101958ea1f411948",
            "93b88dbdd3f1620e",
            "c1fb6fe96a313967",
            "7de23cd1ead958a7"
        ],
        "x": 2064,
        "y": 1539,
        "w": 1752,
        "h": 182
    },
    {
        "id": "5b9ba306a94729a6",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B07_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "bd047cc1ade2a01e",
            "0d4e08635d400ce8",
            "7a53c746c5ca0f29",
            "f72b1b2ac664edce",
            "f4b83de50f633429",
            "7d8d712b38775fa4",
            "7b644381f3ccb9d4",
            "861c8b038a660a31",
            "6ecec77f4824bc59",
            "6020c7739c7b1fa6",
            "20e9300afb6e0f89",
            "378f65d1db6494cf",
            "06666396545f395d",
            "dbe1d0c821b8b4b7",
            "2ad427d0abbac4ea",
            "acafaa0a4eb41897",
            "fa88837ace21dd88",
            "7f06612f4b7eda5b"
        ],
        "x": 2064,
        "y": 1799,
        "w": 1752,
        "h": 182
    },
    {
        "id": "01a8c5ecc3f69454",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B08_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c7f74f526df12eff",
            "ea0f5a3f21320de3",
            "c6523ea601f5ce6d",
            "c636b7daa4f979c2",
            "fc4213ad9721526c",
            "fd5ad8d017b567e8",
            "f02f549d3b1b6f2c",
            "db1972400988dc1f",
            "333766481fe88586",
            "11d9d6f2eff8ad04",
            "ea14fac4eebfdcf5",
            "fcd8625b71094a6a",
            "8cf48a7c839abf87",
            "83a740bc132428ef",
            "131fa6782f98d395",
            "2cc4ec6ae958096a",
            "51c6698a7e9e3056",
            "2350debf349ffd91"
        ],
        "x": 144,
        "y": 2079,
        "w": 1752,
        "h": 182
    },
    {
        "id": "83c8dd0d554cbfa3",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B09_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "04f821df58fb4b97",
            "8f6d95f376d7c39b",
            "56e6ab52ab1d07f0",
            "685afef51d080ef6",
            "b9d43dda13bd2e6c",
            "0d112481f32ce893",
            "37747cc47e38ed84",
            "589ec4e98b4f2e7b",
            "62d920f3ab1f03fb",
            "e2654a2161038136",
            "6029b915863260fa",
            "493b36cf23ba00a9",
            "f1f614f2a1982cfe",
            "8f86b51f1c94b4a2",
            "c32ad74e2c0ffa8f",
            "39962b02bb2353d8",
            "ab39930e284802b7",
            "badbfc42ce5d0606"
        ],
        "x": 144,
        "y": 2359,
        "w": 1752,
        "h": 182
    },
    {
        "id": "2cd1ad89dd0bb077",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B10_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ba77e5a4a8d11473",
            "e89d1c241b29c441",
            "736a44af70531efa",
            "d01e2c299e21309c",
            "52dc55f809fee3ea",
            "0aef205083f16992",
            "0f2c4187b56cb9fd",
            "dd4ee79480daeda4",
            "74e009a22dc2da22",
            "83a9d6bc033bbaa5",
            "2d4e65788e2fb71c",
            "ce18e41bc827dc09",
            "d5113be061e46c08",
            "2fe09bfd8cae48cc",
            "5040bfc2b429dd77",
            "75978bad1c3d5a40",
            "e3b2e329644f36c0",
            "5dca67b848a17ed7"
        ],
        "x": 144,
        "y": 2619,
        "w": 1752,
        "h": 182
    },
    {
        "id": "7ce4ec8e25c2e692",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B08_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "93f7fa1bc5b37f6a",
            "167e6e04d35d6d1e",
            "cece9bc87406f95b",
            "80944a5e0bb1a81d",
            "dcb0adab6cb69fa1",
            "366b87a9f5e2cbbe",
            "fa8668e9f6875db6",
            "e9b4602475a881ab",
            "3756736f8819bf68",
            "121cabd784edd888",
            "d32be14e443cc8f6",
            "8e110f16f36de8ed",
            "afd9cf5ad2a42d3e",
            "07591cc453d27506",
            "17a0f41a61d290d7",
            "a13053d328937814",
            "6178a406edc072f9",
            "64a0725681f8cf11"
        ],
        "x": 2064,
        "y": 2079,
        "w": 1752,
        "h": 182
    },
    {
        "id": "eb615727977e94bc",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B09_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d2532f553e791e49",
            "0f355e056ea79869",
            "1cc0d7f8f1e1ef0f",
            "98270aa0e9285ae6",
            "95de3935b157c9f3",
            "d6f709ed9af6a8c6",
            "9e1c058410bed4eb",
            "13c10db811be34cf",
            "5590ba28fd314ecb",
            "a6164ec0a0626401",
            "a1d423baa49fabcc",
            "5d2749a536dfb3eb",
            "464ebd10968da40c",
            "827e85ce303438e1",
            "925419eb644e9fe3",
            "1e1bbbf17f24394e",
            "83bc4b1b790585df",
            "f047c34dd4214995"
        ],
        "x": 2064,
        "y": 2359,
        "w": 1752,
        "h": 182
    },
    {
        "id": "1c4f18f0cc60db76",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B10_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5196d91cb742616c",
            "1fb244791e4f7c18",
            "5fd93f7ded5e3d0c",
            "9caf1b62bce6a88a",
            "5fd5b13ab347cd48",
            "384b0551d76bad9d",
            "9d1d5809031bf05e",
            "296fe9d230071584",
            "9a16fd7927442c24",
            "1c93f7c6e7c00612",
            "3357d32a96b51464",
            "dc4fb6f74fd7d916",
            "a0f02b8e8126b850",
            "13e5c569d8dfbabc",
            "12020b270bfe5e12",
            "b48d7e018f9fbf65",
            "c145e7da1be57c01",
            "0a6fba2751137e96"
        ],
        "x": 2064,
        "y": 2619,
        "w": 1752,
        "h": 182
    },
    {
        "id": "b309e545f1b0665e",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B11_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2d030e5070ee7042",
            "b828e02a294bebb4",
            "e33feee819b4c5b4",
            "b6a6aadc84f02441",
            "d15afc614d40d166",
            "8776da04e844a84b",
            "c8ba776c78604979",
            "edf8a3522ac78768",
            "f687db1db0d00b7c",
            "0e15fc81f4306d89",
            "d658a089bed10698",
            "c2ce9d8ed10acb63",
            "19cef9b62bc303bd",
            "1233561228891b30",
            "38ece06d48c5ff26",
            "b665e60e743b990f",
            "9905cd1f7b6382a0",
            "1979687533d5df32"
        ],
        "x": 144,
        "y": 2879,
        "w": 1752,
        "h": 182
    },
    {
        "id": "251b597c536fecbf",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B12_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2b273da9ec61fc4c",
            "fadaf3de5a4f6da9",
            "df566932110fb184",
            "dfe6edaaacd8d35d",
            "47b16082be70f6a9",
            "42224733723521cc",
            "739e94c03115454d",
            "24cbbba86634b019",
            "7b15b8c0df4234a0",
            "449d621330c4b8ee",
            "f9512b00b2b5274f",
            "69a5ef58686162ab",
            "7e2dbcfdc1a1a0a7",
            "4f1a66833a5a1cdd",
            "83dfaea6644e0c85",
            "8d2b9d7a1d37c469",
            "f057791f1e11d05c",
            "74b3892b10bc5197"
        ],
        "x": 144,
        "y": 3139,
        "w": 1752,
        "h": 182
    },
    {
        "id": "8cc88c548dc0ef0c",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B13_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "55b9d639d2018f53",
            "ebbc412301eab999",
            "7855bcb8e4b68283",
            "04db09391290a64c",
            "97ce6c29b8c77f34",
            "c29d4015187ad907",
            "3d8fce1220439932",
            "573a46bbdbb1af22",
            "ccf8b35d3dfba7a6",
            "21e6fe18a8dba89b",
            "719bed06eb3b3a24",
            "6913cd91a2375689",
            "36c5e018ccc8f413",
            "d7f59c7d975bdba6",
            "aff7e6c0a0ab11f5",
            "78b3be087c62dca3",
            "8110f1adf9f18134",
            "42ecec766a24f749"
        ],
        "x": 144,
        "y": 3399,
        "w": 1752,
        "h": 182
    },
    {
        "id": "2902cf6a43a23eb5",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B14_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f3421da7e2e22cf0",
            "1d142d9509e349b9",
            "595d1d0d54edc239",
            "dda9ac4aca3da7af",
            "4d7848bebc4fe130",
            "1ba07cba7b74cefd",
            "61900172e0eb9871",
            "f38ec58c41533c62",
            "da123e45a77344bb",
            "19771ecef5378c93",
            "57bd2d4b2e7e3d67",
            "f6eeea30dacfd450",
            "acdee29c47b65039",
            "41877984d151c136",
            "41b04304c6cede79",
            "a11ece3484e0ac96",
            "15ba865590e47f7f",
            "398fc2893044bf9e"
        ],
        "x": 144,
        "y": 3659,
        "w": 1752,
        "h": 182
    },
    {
        "id": "b6e586115dab6ac8",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B11_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c6ede6ac01df3401",
            "5b6486fbd4a22c5a",
            "20cc8b75a51f1008",
            "c4086795a6c08cfa",
            "1b241ce5cd2275cf",
            "be554fcb31c82e99",
            "3426e77b4334316f",
            "57c03c08dc36510c",
            "1010923c6d727ba0",
            "80deff43d2867c1c",
            "920b077c5db2d9d6",
            "7acdc6bbd4db4b99",
            "ebc29ae7a9898db5",
            "4ce79766f72ac11d",
            "c967c70e85e5c8ec",
            "cb88124fd6ef0dac",
            "faa67365af17034c",
            "4641daeba99bba29"
        ],
        "x": 2064,
        "y": 2879,
        "w": 1752,
        "h": 182
    },
    {
        "id": "1779146863e5e870",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B12_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "792e295a737d62c3",
            "8e9cdc54a6dea09c",
            "1bcf17622142349d",
            "a72c42e8de6514aa",
            "37830b7186df3c87",
            "60fe33f254b70e44",
            "85127280ad5e7be6",
            "eb3d985d8c5f6253",
            "efb5010e6e897ade",
            "34187721e218daa4",
            "4a8114af375535b2",
            "c73b891e7f61b43a",
            "c0b6863642e1a2c1",
            "381ff485e8878663",
            "0cb6b3f85f07446f",
            "97a4b8cd50e818bd",
            "26451aad6e03cc06",
            "1a21c18845bb4d39"
        ],
        "x": 2064,
        "y": 3139,
        "w": 1752,
        "h": 182
    },
    {
        "id": "398635643efa7b42",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B13_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4b34faf7af1aa9c1",
            "dcc5f66b08f25597",
            "93f25e0e3d4c1dda",
            "be285964159c3aea",
            "29091654843ffc30",
            "b13d22cfae2aefe4",
            "e3892ac2c245bec6",
            "bb8cc69ac38cb146",
            "297465d88d859656",
            "73c2482a76967aef",
            "b204a8bd7fde5682",
            "99c48ecf0b94b9cd",
            "68b24706976a77e7",
            "d063a1970b855e90",
            "6d1ff6b713dda002",
            "b5c0cc9b653f1ec5",
            "ad62f299555b88d0",
            "51b2588ad88b5a5b"
        ],
        "x": 2064,
        "y": 3399,
        "w": 1752,
        "h": 182
    },
    {
        "id": "e1b698cedf15233f",
        "type": "group",
        "z": "289f75d22904c270",
        "name": "B14_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2977a2254415558e",
            "3db6e7cb23a55678",
            "8b5a7bb4c688f167",
            "97b196834f7a20e2",
            "019824c50d1c2cab",
            "7719f81750340840",
            "b255efb04b65a00d",
            "cd285eb3d216439f",
            "a85e89abd1e36b5d",
            "06ecbacebca00096",
            "9f9d07daf3105e03",
            "a932c0fc8c57e00f",
            "eec960963d4bced5",
            "f561aa06163516b4",
            "224f404fe04a09cb",
            "6aa7d26c651febcc",
            "28c228906cdf667e",
            "8b233734d13715c7"
        ],
        "x": 2064,
        "y": 3659,
        "w": 1752,
        "h": 182
    },
    {
        "id": "c8286b87f807512d",
        "type": "group",
        "z": "083ef892380dfa86",
        "name": "CR_EM01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e45e7ff7976df1d6",
            "4059e1b6aad3e1f0",
            "4be09d1b2306aa46",
            "e662771e5c28fd5b",
            "a5e5818770f72a1c",
            "6b49464bb670f241",
            "0cd8da4173f68b13",
            "d4c17d1fcd991109",
            "30b27fa4e79b6a6c",
            "04368354e7908190",
            "519a2663273b400e",
            "880ff98a7698fb85",
            "969254ad191890bd",
            "667d3c6325c45351",
            "430086946f54239a",
            "81fec1626bdad468",
            "4ac35fc64e122951",
            "4666dd0d7df91edc"
        ],
        "x": 104,
        "y": 199,
        "w": 1752,
        "h": 182
    },
    {
        "id": "faf96fddf28ed077",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B01_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c53eddc0180ffccd",
            "47a0362a87a7e98c",
            "bf3b03fa1efcaf54",
            "43762f7e9248cfc6",
            "ad4f543892f8753e",
            "56e25cdc3f3c2637",
            "212b076681213d32",
            "8345fee165ae85fe",
            "fa12ba5e8c6e9171",
            "fec4080ec6ba377a",
            "9057ca438977e6b8",
            "7a6f7bb927c98396",
            "55a223fbc981d9cf",
            "230e9a6b46e6f9b9",
            "335e4cac628f56f7",
            "912ab04701cc8429",
            "66102ca0abe6fadd",
            "dff7f0c45a52553a"
        ],
        "x": 154,
        "y": 199,
        "w": 1712,
        "h": 182
    },
    {
        "id": "29b9dd85ba1c5c7c",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B01_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6a7c05f7a0ab2f42",
            "525b5f296e84b597",
            "ece2105cac7dd3a7",
            "074af537df189ee1",
            "f212f964c72abc75",
            "dec8c9432a10e60a",
            "ace9efd01ad52765",
            "33c1fbf5b4ddb7d7",
            "b8d1a7e2a271db9b",
            "f19d1b5b2bdded4e",
            "3d0168addc534bb3",
            "e9f1429211640c4c",
            "beeddfbfa9e94371",
            "456ba412490113c1",
            "46d05ffcf0910c57",
            "8825b4315cb10f03",
            "9d9df4e2c593e8ad",
            "65c8e3d43f66e86c"
        ],
        "x": 2054,
        "y": 159,
        "w": 1752,
        "h": 182
    },
    {
        "id": "e4b73ec7fe4b2715",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B02_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7e640368f4e7ca00",
            "1328b7793296b134",
            "7d2411d16164fede",
            "02991445204ac01c",
            "471ec289b77e2524",
            "161ab226f47f876f",
            "c61f0d82a1f69220",
            "c4b7ea22171ce872",
            "a9a4636af7164e0f",
            "a586e2a8f477211a",
            "db3caf3c26eca37e",
            "f59e1c20fe004568",
            "436cb609509903e1",
            "965e2aaad6cdb8e7",
            "1bde784161a63291",
            "a19037f73279e9b6",
            "28f05bfc6d2a0aad",
            "254a23aa58c1a6fa"
        ],
        "x": 144,
        "y": 459,
        "w": 1752,
        "h": 182
    },
    {
        "id": "2694b9b19f707930",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B02_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0b3285a55b4d9edc",
            "1876e46d1b6b8297",
            "7c291b68ddd0b130",
            "bd6f3f08b7c66749",
            "eaef0538ebdb24a8",
            "24ff2d9e0899b3af",
            "18298042ad9ca546",
            "78eb7d617306917e",
            "d7f35e6e8ecd0534",
            "57f4caced6b925d0",
            "c6f6707efcef3df1",
            "6adc9461db8122cf",
            "9660103f113555aa",
            "5ebcf09ab7552e21",
            "c07083f0fc28f113",
            "fca4d95b32959e19",
            "c7762fc6f9285a86",
            "7b674c4e025a92bc"
        ],
        "x": 2064,
        "y": 459,
        "w": 1752,
        "h": 182
    },
    {
        "id": "2c2f3612f1dd190a",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B03_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "51d02bfb3b796e71",
            "461083e4b98a0fee",
            "32d333d0f827ea71",
            "f8a0199fc4d66012",
            "f52e4f2a27c6274c",
            "f538e17fe1e313b7",
            "258439a3ab087066",
            "ce2823f70626ad69",
            "20e00d5344ff85b3",
            "610fa6c0f47240e4",
            "de887157b6c1771a",
            "1b7af73404b3fbc9",
            "b2e85c659199806d",
            "7e280a4af0f5c287",
            "6843b4aaba1f0dd9",
            "b22f722a8710a3fd",
            "b2a0295a58e7933f",
            "93354b8a38a2e3ea"
        ],
        "x": 144,
        "y": 739,
        "w": 1752,
        "h": 182
    },
    {
        "id": "905835c414715862",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B03_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "11edf91376937f20",
            "cb483d5c4aaac286",
            "fa2b2568ec86a96f",
            "1711f998e24dfe7b",
            "1d2720aedee9a1a3",
            "ed25fb12cfb9acfe",
            "df41923a67b24452",
            "93c2934ec32e5ebc",
            "a95f4b560a536432",
            "b51ad9456126d306",
            "f29b51d4e8956865",
            "1bce7ef3a77625e9",
            "97eab1db7da6e7eb",
            "88d6e33a258535ba",
            "94d0ea3a5ba62f5c",
            "0674e8643f04eb7a",
            "fbcac71f0c457234",
            "914583796d628a11"
        ],
        "x": 2064,
        "y": 739,
        "w": 1752,
        "h": 182
    },
    {
        "id": "0a3c10ba1b70cefe",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B04_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4d7a387f097a42d2",
            "a6601bfe9b098bb1",
            "9c90aa1ee8de4ebd",
            "a9d21b5634b57f0f",
            "bf8ce05b7faaf9e9",
            "79ecbc807d476d14",
            "eda27881e168b7d4",
            "06c421d49d72ef34",
            "b70a77e297d6654f",
            "0d251572e94a30f5",
            "65edd3b5e223579c",
            "1e0865e5282f2781",
            "07ef396c6f6f3f86",
            "8f90979b2bc92577",
            "9928a5cec8123a62",
            "183d135d367f5395",
            "cfefa743f0c898c8",
            "8177b293b0f3663e"
        ],
        "x": 144,
        "y": 1019,
        "w": 1752,
        "h": 182
    },
    {
        "id": "fef319342109c4af",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B04_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fbe0489ccee98f21",
            "1de7994c42909792",
            "3952e8024eb198da",
            "0c4c8d9cf4196f5b",
            "1885368f8f02f154",
            "0df73b040d180f6b",
            "cd99b2cca3822690",
            "bf0c4f4eff8ea2fd",
            "b15104aaa671598c",
            "3d62a6fc103ff83b",
            "8d6cd6eb8452f4f7",
            "ddc8449a36df726d",
            "a62778f28673d111",
            "f8a7373ed005c0c1",
            "11391eac344137b0",
            "57868cafdf16d380",
            "60d97915f65660a6",
            "f65abd77c466b628"
        ],
        "x": 2064,
        "y": 1019,
        "w": 1752,
        "h": 182
    },
    {
        "id": "7abf5f544fdc8dcf",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B05_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f5d1200273821a74",
            "45e651cebde690f2",
            "f6e09623b6043212",
            "f8412949758f562b",
            "ccc4dceeb76c8ed8",
            "1e64cc5fbdb44dd9",
            "79a93bb64b38a06f",
            "1f536786daf01f98",
            "8ed56f2abb6ff367",
            "b8ce7e047befebee",
            "8aada38f764f6a50",
            "ad44885459d5d460",
            "b2e2e7f0ce6ae65e",
            "d78c822f0af83e9a",
            "aa1c3bcc483eef1a",
            "85553ab902d523c5",
            "0231d9688d3c52d9",
            "5d1dec6d0835fe35"
        ],
        "x": 144,
        "y": 1259,
        "w": 1752,
        "h": 182
    },
    {
        "id": "017f95d1bbe133a2",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B05_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "336e10a91ee5ebf9",
            "b8aec4395d459ebd",
            "8e7422c9ce57175b",
            "47b3de71e7188b20",
            "c29b5722c3cbcef3",
            "f33fbc0790f8d72b",
            "7bfde72897716cd3",
            "f6c626e1982fdff0",
            "54f4bcb31aa09890",
            "a9c2dc806195784c",
            "0a24a9c8ac3351cc",
            "f7421f0bcf58f61d",
            "9c4a56dc9d71952d",
            "da749119c6556d64",
            "a887565950b77df1",
            "c35fc88b81741bbc",
            "4ae5cd7f75e03b9f",
            "f92df9e0d8dc7123"
        ],
        "x": 2064,
        "y": 1279,
        "w": 1752,
        "h": 182
    },
    {
        "id": "e27f7c649b3997ad",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B06_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "deb47e9c85da8973",
            "8f25700f0685948e",
            "696085092efe97a1",
            "0b8299abcb8b18e0",
            "8e4d4ad0d50ffd26",
            "aae40d2a3e360afd",
            "8d14e482e0bda1a8",
            "e92fe109864ccf9f",
            "70c28ed5ea013e46",
            "2498b04960d87fe1",
            "7eda0887957f452c",
            "951e7ffc53388083",
            "e2bd7d7a9e9ed8ab",
            "10066210709e2916",
            "652d2088670e05a1",
            "5fdfa73a364f3ae3",
            "d4b20107ca46dcc0",
            "115a93f567342908"
        ],
        "x": 144,
        "y": 1539,
        "w": 1752,
        "h": 182
    },
    {
        "id": "2677d83cef7780ae",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B07_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "82be2ac5ca9a6e45",
            "bd9cbadbd5b20792",
            "49fed0ebc7e42a89",
            "b3057f5565e13447",
            "4a2e25b49628efab",
            "7f4ba06881d00b3b",
            "a6d15e729a96c539",
            "528e3018cff2528b",
            "e80f614194de664d",
            "219d0de782b684d4",
            "e044ac79f637a7ad",
            "3459cad05c685f8b",
            "62262c01b1113f9a",
            "2ca073b082409bdc",
            "37b26f2a1d232e13",
            "9e80756220dbb29f",
            "911ee122590839aa",
            "17e54136194ca770"
        ],
        "x": 144,
        "y": 1799,
        "w": 1752,
        "h": 182
    },
    {
        "id": "6ba15adf5b216135",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B06_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "72cc3528d4f620e0",
            "519f066b435ab0b1",
            "044aa5413a04f7c9",
            "f186e37f66d1217c",
            "656abd104653c00e",
            "32726f5f6d5f5aa6",
            "d51334a0ed0fae91",
            "f8459c82d205ac6f",
            "96e4c553373beeea",
            "a8cfa06f41cbcd3b",
            "f525be14684562e1",
            "160fdd6794fc741d",
            "37b2a57c8ad50507",
            "7d5f7d757569e31e",
            "2903b3b096601c9c",
            "2cd82e06d121e805",
            "247be10f755644ff",
            "15cbbfa8fb6b7cf0"
        ],
        "x": 2064,
        "y": 1539,
        "w": 1752,
        "h": 182
    },
    {
        "id": "a4c4dfbfcb048e32",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B07_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f0f4f5ffd36e3281",
            "072693aef0603598",
            "43898db883dff027",
            "26f13a2ffe7a1634",
            "ce06ad95c28e1793",
            "1fb237ec6a58eb4f",
            "11c86ee9c495502d",
            "c6a822fbe7613634",
            "526f0c45afb5e465",
            "ce80ee2725f16121",
            "b705338c383fefe6",
            "55784be2f824b9e8",
            "ef88cbcf4c5f0e18",
            "64d42dfc6e941963",
            "a046fec323061c52",
            "539822eab91abfc7",
            "c80a294655dc71fd",
            "546a73ba1804a68c"
        ],
        "x": 2064,
        "y": 1799,
        "w": 1752,
        "h": 182
    },
    {
        "id": "c3e5bda187368712",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B08_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "96ece2a762611f9f",
            "62f12d9a2ee12977",
            "31fa47cfed0295b6",
            "ae424a22ddabbba5",
            "7ae3ffb9ed634387",
            "eb881ab24a2ffea8",
            "0c7b3007972cd2dc",
            "ccba58e84e468be3",
            "0a1baa06ec912d7b",
            "a7f7f3e294d474dc",
            "d578796d43644375",
            "3eb16c48762de84f",
            "0dfe168a03fd906e",
            "6858e4b21fd6dd19",
            "480405eeeeb8a6d3",
            "4075c19e52981575",
            "2da51c91ab374fa3",
            "25618c367135a7a0"
        ],
        "x": 144,
        "y": 2079,
        "w": 1752,
        "h": 182
    },
    {
        "id": "8763dc98577cbe6f",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B09_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f1770f79cec11369",
            "8e5a07f962d7ac8c",
            "3ed265d215c7f4cc",
            "5f7ec6a6fd2e5b5d",
            "8127995eb5020426",
            "72601310b7341f42",
            "281ee9f452aed59c",
            "f6072c8e5766a5c6",
            "5556da9d885a98c6",
            "3b54a80f96e8dd94",
            "2c8e20532548a576",
            "24f8be4ff26a15ee",
            "55c363fdbed542e6",
            "d23582f31f652551",
            "7587faf6f0e19a57",
            "de88480f4c9ee54a",
            "55d63a154d59e4d1",
            "b6d80790f0a46f01"
        ],
        "x": 144,
        "y": 2359,
        "w": 1752,
        "h": 182
    },
    {
        "id": "8a3086e5865552d3",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B10_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "51fe9a4e933e75ec",
            "d18c71bf3dd7f77f",
            "fd463177f63fef6e",
            "608be71a5e851e89",
            "65c9f892ea58f690",
            "38869970e28972db",
            "478288df55465803",
            "af3e0910c5d68ed8",
            "61bd13d6c676a006",
            "1906aab191795180",
            "92fa99039455fee6",
            "4cf20448473cbada",
            "8ef343b2d2eb8d4d",
            "34bc8be8ad3f1f27",
            "164605bb290818ea",
            "7a9bb30281b4e8d3",
            "d5fd1b100dce5d0d",
            "01e22be31f834506"
        ],
        "x": 144,
        "y": 2619,
        "w": 1752,
        "h": 182
    },
    {
        "id": "5ad83fd57591cc2e",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B08_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "81123f8eecaa7931",
            "7c5c4a8dbf7a3a01",
            "5a5c05215c7cf746",
            "e6b2ce92227d578d",
            "a35816484e815a2b",
            "b8a518b7f98b7037",
            "5867432f18b55d01",
            "e1d5c2e782885c18",
            "59086ea07a4cc7e1",
            "f372b35bb7fe5fe3",
            "1b2d741a2661d8c6",
            "2385f599174530b2",
            "52eff12db8f61758",
            "7b144e8af9e76b98",
            "4b7b0af4703aac44",
            "80f32774a8b913e0",
            "acb010922867f772",
            "d3c9b654aa2239eb"
        ],
        "x": 2064,
        "y": 2079,
        "w": 1752,
        "h": 182
    },
    {
        "id": "15532b43432838e1",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B09_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "054f97f3e6d79571",
            "464b30136f8cea4b",
            "88c1df5340f582d9",
            "503359a651d9d1c1",
            "b82ad122e3fe5b51",
            "930d0160ee6ef374",
            "867d895fe54fb4eb",
            "1e5fa87e38594357",
            "e99fafead3480ddd",
            "46f2ce9ce8cb1056",
            "2159b4975add0b9d",
            "7c8deff9c11a1824",
            "e94f36a2b4c19aef",
            "436d168bf1989658",
            "5ffb2c91a9329d72",
            "4ed7992161d80d14",
            "0e88b9af3528f2b4",
            "c96e3ea7727fe46d"
        ],
        "x": 2064,
        "y": 2359,
        "w": 1752,
        "h": 182
    },
    {
        "id": "42ca63693e5208b2",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B10_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "961a520eed163d36",
            "63410da3e01a49ed",
            "6504b60a29150e5e",
            "d13e238c7491b6d4",
            "a93cddadba977dc3",
            "c164285f38778465",
            "80bc7676d55e621e",
            "5df1bade269906fe",
            "6645712de57a470b",
            "524ea431417ac729",
            "de93e9b3eb168796",
            "6c69752191f3f4e4",
            "f444c52607ea807a",
            "79fba018f2a11067",
            "12983f8f93170895",
            "98e2764427f3dece",
            "6398905e45ac1de1",
            "ee0deb50764d923f"
        ],
        "x": 2064,
        "y": 2619,
        "w": 1752,
        "h": 182
    },
    {
        "id": "71550c473d207684",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B11_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "04cd33ad8bb29a91",
            "12143a1d7cb9c37a",
            "e8146d1b63a5ca13",
            "a30560f9af82e301",
            "a91a9e5388da417b",
            "5f582c5acb5635ef",
            "659033bf077afb70",
            "b4602d19e05839cf",
            "cadc971215a7c5f5",
            "f75463670f1806c1",
            "763f3ea5d2ecd37c",
            "f7ec62ea866eac19",
            "ecf82b2978c98832",
            "d3e89e24f4d8c7fb",
            "351003cfa1027eac",
            "75df5901f3904658",
            "646a38d14f3dbdc9",
            "9f345af6a305b209"
        ],
        "x": 144,
        "y": 2879,
        "w": 1752,
        "h": 182
    },
    {
        "id": "dc5907cafc30ec22",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B12_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "9a7b44b5a4a10f2b",
            "54e8dba86592a68d",
            "2fe29784723a0a7c",
            "514bdbed1a83e916",
            "0a60f0b7322c511c",
            "28cea03a502b7933",
            "eb1495a1533db244",
            "210762c701c69ad9",
            "72e93f4e153cd884",
            "373e5a8c1ffe6a39",
            "bec05e42d4ed7830",
            "8cc676cd28fc8e75",
            "4fe0c962d1531e2f",
            "92b03f6222f04709",
            "9d7a75a9399ecbaa",
            "c91c18d77c104213",
            "1cec903c32f5ce91",
            "f278ec56046e5498"
        ],
        "x": 144,
        "y": 3139,
        "w": 1752,
        "h": 182
    },
    {
        "id": "f96687c10a5c49a5",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B13_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "14d95f5e97050aa4",
            "066c0b6d4a5bc33a",
            "47a3e1a074c7c5e4",
            "caac16ecf7fab641",
            "efc8fc96e8c4c1fa",
            "af97db880e9025fe",
            "4d29336ba0552a7a",
            "a8e7bf2ce7e01344",
            "8901b4ec92145cb5",
            "ed6d25f9b0a631fb",
            "83d00d041fbed1bb",
            "8f982a56d3391ddd",
            "ae1c0ed6848dcaef",
            "8c2441d8a04c916b",
            "d56130380abc2105",
            "fb1b2f2ae915fd29",
            "39ee8744e99d6ae6",
            "6ff661db9fa2a407"
        ],
        "x": 144,
        "y": 3399,
        "w": 1752,
        "h": 182
    },
    {
        "id": "f938beec9c2cab05",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B14_INV01",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "582a8c4f48348b98",
            "19a85a1f2554c7a7",
            "f0ed311b4641595d",
            "3e34785b3617e4a5",
            "a537d59c669d34c5",
            "346fa748b0e52b5b",
            "240aaaa17717737a",
            "7c7af81ad2b8c957",
            "1a2fe10978f23e39",
            "111bddb00e5c952b",
            "12417ce357a86e4f",
            "015e9fc7a419db41",
            "b265e75e33620f30",
            "8b05f847458d6a5c",
            "3d4a5f07a879ee44",
            "9a78b5d5e51cc285",
            "38c95ce3c179f9b2",
            "b6ef2dcf4a28b778"
        ],
        "x": 144,
        "y": 3659,
        "w": 1752,
        "h": 182
    },
    {
        "id": "3b7111b25a4f9183",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B11_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "92c577d496b23ee1",
            "b7da19690ed5a57c",
            "1b0e276c115b4231",
            "cdb526a2c858c3cb",
            "26d665a57966a69e",
            "ccad97d483814b86",
            "821993edce1f6c3c",
            "644a527e79724359",
            "58a2f1c62a2bb1b0",
            "7e188b80df59f558",
            "03fa302f15345eb7",
            "cbbdc059d2163bfd",
            "d71edf84607aeae3",
            "402d11c9f554a2c7",
            "7b4c7e57f3c64cbc",
            "f4263c4415843a1e",
            "7516962562a46ca0",
            "c56121a70cf3601b"
        ],
        "x": 2064,
        "y": 2879,
        "w": 1752,
        "h": 182
    },
    {
        "id": "028e90abdbdff6ea",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B12_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f71974ebcf4a8508",
            "27e4a1926f68e1e6",
            "d50d6a87f835034a",
            "2b2c906c862abdf2",
            "a613b942c227eed4",
            "d4388a2e3d920ed3",
            "77bf9490eb997a31",
            "c5ed590f9dd3274c",
            "b2f03a8f52fbd71b",
            "7c3a42379e6d2d99",
            "cb665724b16cd06b",
            "2cc10ce732f6dd1e",
            "56348987186cee4f",
            "1ad62ad8247f9830",
            "5388621900489667",
            "ba125d55bdcf76b2",
            "7eeaf07d8fc7d184",
            "5e5b927fb8d84e7c"
        ],
        "x": 2064,
        "y": 3139,
        "w": 1752,
        "h": 182
    },
    {
        "id": "b41791ebcbbac80d",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B13_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4d0383f3070e8158",
            "4eaaca155c9e949d",
            "b61512b7128bb849",
            "102756701b7efc6b",
            "25a299faf02330b4",
            "2bde4bd8ac315c44",
            "01b19b7af9a81659",
            "765b4996bd90cc05",
            "0edf7d59a5260313",
            "dffd97d703296faa",
            "256b1c5eb1bc52a9",
            "10db0b4a86e5bb04",
            "17e60cb2396a1c26",
            "5a665b8bd2a4c903",
            "24ddf82bd6735161",
            "0804dac5d2d89599",
            "ee08b29a5ce9447c",
            "236638a25156c8b4"
        ],
        "x": 2064,
        "y": 3399,
        "w": 1752,
        "h": 182
    },
    {
        "id": "d1160bedd05ea1c1",
        "type": "group",
        "z": "4171233ca3258c9e",
        "name": "B14_INV02",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d6b497d8e1dd595a",
            "0d975db1246620f4",
            "c3704648449dcf75",
            "1468a5bf37e5d86b",
            "4e630bdfef207da8",
            "cc3c35b897ae9f04",
            "f6ab9b7af7483cb6",
            "786a785fd6c71f4a",
            "ca8f5778b4cf86ea",
            "d969c34cd2efb6e5",
            "6ee0ca3164e2b4d4",
            "8ef60a3a475601ca",
            "927aa72842463b47",
            "b66123dea3997a24",
            "5fc88996b0ee6f41",
            "6014ccec2fff04c1",
            "e48b6945c3e17893",
            "c853994043339e37"
        ],
        "x": 2064,
        "y": 3659,
        "w": 1752,
        "h": 182
    },
    {
        "id": "d85bbcee29cc1f0f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "9f60afb136905ef4",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "3ea78ba576f26c08",
        "type": "amqp-broker",
        "name": "",
        "host": "localhost",
        "port": "5672",
        "vhost": "",
        "tls": false,
        "credsFromSettings": false
    },
    {
        "id": "33f460a4c4855dbc",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "e51f9084c202c559",
        "type": "amqp-broker",
        "name": "",
        "host": "localhost",
        "port": "5672",
        "vhost": "",
        "tls": false,
        "credsFromSettings": false
    },
    {
        "id": "596fb6e3780beca3",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://192.168.88.82:8086/",
        "rejectUnauthorized": true
    },
    {
        "id": "ad8e700af90dda07",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "93fe77299674c753",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "name": "function 8",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 240,
        "wires": [
            [
                "54e0c7956b3ef08b"
            ]
        ]
    },
    {
        "id": "e74f4aadbee8e557",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 550,
        "y": 240,
        "wires": [
            [
                "93fe77299674c753",
                "982fea38a1693f00"
            ]
        ]
    },
    {
        "id": "663522c9b11a5aa9",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B01,B01_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B01,B01_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B01,B01_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B01,B01_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B01,B01_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B01,B01_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B01,B01_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B01,B01_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B01,B01_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B01,B01_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B01,B01_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B01,B01_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B01,B01_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B01,B01_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 400,
        "y": 240,
        "wires": [
            [
                "e74f4aadbee8e557"
            ]
        ]
    },
    {
        "id": "982fea38a1693f00",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 670,
        "y": 300,
        "wires": [
            [
                "f7a2c7fa3a0191e8"
            ]
        ]
    },
    {
        "id": "c5cf18d1075c1e33",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1170,
        "y": 240,
        "wires": [
            [
                "a8d2a1f0c4321c06"
            ]
        ]
    },
    {
        "id": "f7a2c7fa3a0191e8",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 300,
        "wires": [
            [
                "0b34cf0c4d419255",
                "3d682bfbf434632f"
            ]
        ]
    },
    {
        "id": "0b34cf0c4d419255",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 300,
        "wires": [
            [
                "59d0cab1d16496a1"
            ]
        ]
    },
    {
        "id": "59d0cab1d16496a1",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 300,
        "wires": [
            [
                "d8819a9f85bbb98e",
                "c7e43c858a89c3e2"
            ]
        ]
    },
    {
        "id": "3d682bfbf434632f",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "name": "debug 2437",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 340,
        "wires": []
    },
    {
        "id": "a8d2a1f0c4321c06",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 240,
        "wires": [
            [
                "59d0cab1d16496a1",
                "4cdcf874acd65aa2"
            ]
        ]
    },
    {
        "id": "4cdcf874acd65aa2",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "name": "debug 2438",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1690,
        "y": 240,
        "wires": []
    },
    {
        "id": "54e0c7956b3ef08b",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 910,
        "y": 240,
        "wires": [
            [
                "c5cf18d1075c1e33",
                "54db520610340f4a"
            ]
        ]
    },
    {
        "id": "36bcbedd8d89764a",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1780,
        "y": 300,
        "wires": []
    },
    {
        "id": "64752a462630f2c2",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "name": "debug 2439",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 340,
        "wires": []
    },
    {
        "id": "d8819a9f85bbb98e",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1440,
        "y": 300,
        "wires": [
            [
                "4ff9561706269629"
            ]
        ]
    },
    {
        "id": "c7e43c858a89c3e2",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "name": "debug 2440",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 340,
        "wires": []
    },
    {
        "id": "4ff9561706269629",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 300,
        "wires": [
            [
                "36bcbedd8d89764a",
                "64752a462630f2c2"
            ]
        ]
    },
    {
        "id": "11af398be8ada449",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "name": "function 9",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2640,
        "y": 200,
        "wires": [
            [
                "230f85707f470ccf"
            ]
        ]
    },
    {
        "id": "4ac8dde4de3349e4",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2150,
        "y": 200,
        "wires": [
            [
                "149c31f58152284f"
            ]
        ]
    },
    {
        "id": "6daebb55c5799f05",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2490,
        "y": 200,
        "wires": [
            [
                "11af398be8ada449",
                "3cae114bfcc24cea"
            ]
        ]
    },
    {
        "id": "149c31f58152284f",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B01,B01_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B01,B01_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B01,B01_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B01,B01_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B01,B01_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B01,B01_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B01,B01_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B01,B01_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B01,B01_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B01,B01_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B01,B01_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B01,B01_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B01,B01_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B01,B01_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2340,
        "y": 200,
        "wires": [
            [
                "6daebb55c5799f05"
            ]
        ]
    },
    {
        "id": "3cae114bfcc24cea",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2610,
        "y": 260,
        "wires": [
            [
                "1643230ddf6f3bbb"
            ]
        ]
    },
    {
        "id": "a4f20e5e06f08f80",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 260,
        "wires": [
            [
                "2e923499ea50b4f2",
                "e5b7b3c6973ee330"
            ]
        ]
    },
    {
        "id": "4947be5638efa024",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3030,
        "y": 200,
        "wires": [
            [
                "25cbaa31bcd79bcf"
            ]
        ]
    },
    {
        "id": "1643230ddf6f3bbb",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2810,
        "y": 260,
        "wires": [
            [
                "53bb7f8e4d4af2b3",
                "82f0b0c3c002fe6e"
            ]
        ]
    },
    {
        "id": "53bb7f8e4d4af2b3",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3010,
        "y": 260,
        "wires": [
            [
                "8e7a03beca917ce6"
            ]
        ]
    },
    {
        "id": "8e7a03beca917ce6",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3200,
        "y": 260,
        "wires": [
            [
                "db35c30f69bdd96e",
                "e40a8df8b33acd8b"
            ]
        ]
    },
    {
        "id": "82f0b0c3c002fe6e",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "name": "debug 2441",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3030,
        "y": 300,
        "wires": []
    },
    {
        "id": "25cbaa31bcd79bcf",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 200,
        "wires": [
            [
                "8e7a03beca917ce6",
                "23637dacc2a13533"
            ]
        ]
    },
    {
        "id": "23637dacc2a13533",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "name": "debug 2442",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3630,
        "y": 200,
        "wires": []
    },
    {
        "id": "230f85707f470ccf",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2850,
        "y": 200,
        "wires": [
            [
                "4947be5638efa024"
            ]
        ]
    },
    {
        "id": "2e923499ea50b4f2",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3720,
        "y": 260,
        "wires": []
    },
    {
        "id": "e5b7b3c6973ee330",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "name": "debug 2443",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3590,
        "y": 300,
        "wires": []
    },
    {
        "id": "db35c30f69bdd96e",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3380,
        "y": 260,
        "wires": [
            [
                "a4f20e5e06f08f80"
            ]
        ]
    },
    {
        "id": "e40a8df8b33acd8b",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "8746acf6e799cbbe",
        "name": "debug 2444",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3270,
        "y": 300,
        "wires": []
    },
    {
        "id": "67a2a1d4a02061b1",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "name": "function 11",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 500,
        "wires": [
            [
                "89405c68dff14e61"
            ]
        ]
    },
    {
        "id": "bcfecaedef101f3f",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 500,
        "wires": [
            [
                "5467c45395660d11"
            ]
        ]
    },
    {
        "id": "4018e2b9a47d2fea",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 500,
        "wires": [
            [
                "67a2a1d4a02061b1",
                "dc735b9f8d529963"
            ]
        ]
    },
    {
        "id": "5467c45395660d11",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B02,B02_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B02,B02_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B02,B02_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B02,B02_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B02,B02_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B02,B02_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B02,B02_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B02,B02_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B02,B02_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B02,B02_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B02,B02_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B02,B02_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B02,B02_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B02,B02_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 500,
        "wires": [
            [
                "4018e2b9a47d2fea"
            ]
        ]
    },
    {
        "id": "dc735b9f8d529963",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 560,
        "wires": [
            [
                "f0c12e4a844940fe"
            ]
        ]
    },
    {
        "id": "029b5f547a31a742",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 560,
        "wires": [
            [
                "b6500be51aa81737",
                "4cb6398b47225742"
            ]
        ]
    },
    {
        "id": "833678172759d3f6",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 500,
        "wires": [
            [
                "b0fa25456d3e43bf"
            ]
        ]
    },
    {
        "id": "f0c12e4a844940fe",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 560,
        "wires": [
            [
                "11c6cca9c184c0e4",
                "905a226faaa769bd"
            ]
        ]
    },
    {
        "id": "11c6cca9c184c0e4",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 560,
        "wires": [
            [
                "9a2268e84dd375dc"
            ]
        ]
    },
    {
        "id": "9a2268e84dd375dc",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 560,
        "wires": [
            [
                "f4ddac8896b78f70",
                "2aa3d281253a9c0b"
            ]
        ]
    },
    {
        "id": "905a226faaa769bd",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "name": "debug 2449",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 600,
        "wires": []
    },
    {
        "id": "b0fa25456d3e43bf",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 500,
        "wires": [
            [
                "9a2268e84dd375dc",
                "d38122725f4d4047"
            ]
        ]
    },
    {
        "id": "d38122725f4d4047",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "name": "debug 2450",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 500,
        "wires": []
    },
    {
        "id": "89405c68dff14e61",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 500,
        "wires": [
            [
                "833678172759d3f6"
            ]
        ]
    },
    {
        "id": "b6500be51aa81737",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 560,
        "wires": []
    },
    {
        "id": "4cb6398b47225742",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "name": "debug 2451",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 600,
        "wires": []
    },
    {
        "id": "f4ddac8896b78f70",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 560,
        "wires": [
            [
                "029b5f547a31a742"
            ]
        ]
    },
    {
        "id": "2aa3d281253a9c0b",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "39922fd762cbcd34",
        "name": "debug 2452",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 600,
        "wires": []
    },
    {
        "id": "db6ebdafccd82fe2",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "name": "function 12",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 500,
        "wires": [
            [
                "c47dfb7d71293930"
            ]
        ]
    },
    {
        "id": "596789c353869fbd",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 500,
        "wires": [
            [
                "f29415fce1963906"
            ]
        ]
    },
    {
        "id": "7dc980fe6e1fdd70",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 500,
        "wires": [
            [
                "db6ebdafccd82fe2",
                "d9fdbdfddb0a9988"
            ]
        ]
    },
    {
        "id": "f29415fce1963906",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B02,B02_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B02,B02_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B02,B02_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B02,B02_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B02,B02_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B02,B02_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B02,B02_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B02,B02_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B02,B02_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B02,B02_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B02,B02_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B02,B02_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B02,B02_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B02,B02_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 500,
        "wires": [
            [
                "7dc980fe6e1fdd70"
            ]
        ]
    },
    {
        "id": "d9fdbdfddb0a9988",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 560,
        "wires": [
            [
                "391303bb26a0964b"
            ]
        ]
    },
    {
        "id": "e7340ba1ae4ac71f",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 560,
        "wires": [
            [
                "3090e7539909af52",
                "24e824f3fad5e83c"
            ]
        ]
    },
    {
        "id": "ff2475ea23c04cb8",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 500,
        "wires": [
            [
                "a2dfb5dd75243b08"
            ]
        ]
    },
    {
        "id": "391303bb26a0964b",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 560,
        "wires": [
            [
                "fac05f885ad5ba03",
                "b30c52c3c012c3ef"
            ]
        ]
    },
    {
        "id": "fac05f885ad5ba03",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 560,
        "wires": [
            [
                "fbed19f1d8bf9e39"
            ]
        ]
    },
    {
        "id": "fbed19f1d8bf9e39",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 560,
        "wires": [
            [
                "d4fd99fc1db4d27c",
                "88c5d8abbb0c15c2"
            ]
        ]
    },
    {
        "id": "b30c52c3c012c3ef",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "name": "debug 2453",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 600,
        "wires": []
    },
    {
        "id": "a2dfb5dd75243b08",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 500,
        "wires": [
            [
                "fbed19f1d8bf9e39",
                "749031ba157a88de"
            ]
        ]
    },
    {
        "id": "749031ba157a88de",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "name": "debug 2454",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 500,
        "wires": []
    },
    {
        "id": "c47dfb7d71293930",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 500,
        "wires": [
            [
                "ff2475ea23c04cb8"
            ]
        ]
    },
    {
        "id": "3090e7539909af52",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 560,
        "wires": []
    },
    {
        "id": "24e824f3fad5e83c",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "name": "debug 2455",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 600,
        "wires": []
    },
    {
        "id": "d4fd99fc1db4d27c",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 560,
        "wires": [
            [
                "e7340ba1ae4ac71f"
            ]
        ]
    },
    {
        "id": "88c5d8abbb0c15c2",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "880e34c5bcbd1dda",
        "name": "debug 2456",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 600,
        "wires": []
    },
    {
        "id": "d56f4b698cb0f009",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "name": "function 13",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 780,
        "wires": [
            [
                "14f07045c0327a58"
            ]
        ]
    },
    {
        "id": "8520d02861d01394",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 780,
        "wires": [
            [
                "f62e583e67cc97de"
            ]
        ]
    },
    {
        "id": "230130216fad6393",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 780,
        "wires": [
            [
                "d56f4b698cb0f009",
                "f8ed27c42f58523a"
            ]
        ]
    },
    {
        "id": "f62e583e67cc97de",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B03,B03_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B03,B03_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B03,B03_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B03,B03_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B03,B03_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B03,B03_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B03,B03_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B03,B03_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B03,B03_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B03,B03_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B03,B03_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B03,B03_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B03,B03_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B03,B03_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 780,
        "wires": [
            [
                "230130216fad6393"
            ]
        ]
    },
    {
        "id": "f8ed27c42f58523a",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 840,
        "wires": [
            [
                "9e890307094162e1"
            ]
        ]
    },
    {
        "id": "3da6ca2651e297d9",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 840,
        "wires": [
            [
                "fd70427c518e8d05",
                "a638699ead986bbd"
            ]
        ]
    },
    {
        "id": "a39087c04afc34bc",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 780,
        "wires": [
            [
                "f9fb5f03899418c2"
            ]
        ]
    },
    {
        "id": "9e890307094162e1",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 840,
        "wires": [
            [
                "b45bdc5a671805d4",
                "135f309e7e084825"
            ]
        ]
    },
    {
        "id": "b45bdc5a671805d4",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 840,
        "wires": [
            [
                "becde0935587b21a"
            ]
        ]
    },
    {
        "id": "becde0935587b21a",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 840,
        "wires": [
            [
                "9a87145face75812",
                "5c6e319b455867d2"
            ]
        ]
    },
    {
        "id": "135f309e7e084825",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "name": "debug 2457",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 880,
        "wires": []
    },
    {
        "id": "f9fb5f03899418c2",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 780,
        "wires": [
            [
                "becde0935587b21a",
                "ce0d191bbe6dca95"
            ]
        ]
    },
    {
        "id": "ce0d191bbe6dca95",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "name": "debug 2458",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 780,
        "wires": []
    },
    {
        "id": "14f07045c0327a58",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 780,
        "wires": [
            [
                "a39087c04afc34bc"
            ]
        ]
    },
    {
        "id": "fd70427c518e8d05",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 840,
        "wires": []
    },
    {
        "id": "a638699ead986bbd",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "name": "debug 2459",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 880,
        "wires": []
    },
    {
        "id": "9a87145face75812",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 840,
        "wires": [
            [
                "3da6ca2651e297d9"
            ]
        ]
    },
    {
        "id": "5c6e319b455867d2",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "d8b7187f3a6051c1",
        "name": "debug 2460",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 880,
        "wires": []
    },
    {
        "id": "e5dabde7c2429212",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "name": "function 14",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 780,
        "wires": [
            [
                "dd5f3a0def9c2e38"
            ]
        ]
    },
    {
        "id": "c55896d746337a0e",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 780,
        "wires": [
            [
                "3aee4d2b38c6becb"
            ]
        ]
    },
    {
        "id": "01d5b2e838b2008e",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 780,
        "wires": [
            [
                "e5dabde7c2429212",
                "815cb936b6499289"
            ]
        ]
    },
    {
        "id": "3aee4d2b38c6becb",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B03,B03_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B03,B03_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B03,B03_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B03,B03_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B03,B03_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B03,B03_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B03,B03_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B03,B03_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B03,B03_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B03,B03_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B03,B03_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B03,B03_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B03,B03_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B03,B03_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 780,
        "wires": [
            [
                "01d5b2e838b2008e"
            ]
        ]
    },
    {
        "id": "815cb936b6499289",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 840,
        "wires": [
            [
                "998e097c05574fbe"
            ]
        ]
    },
    {
        "id": "4bc4c70cd91b8e1d",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 840,
        "wires": [
            [
                "bda0354b403c9973",
                "0414f42b3836939c"
            ]
        ]
    },
    {
        "id": "ca86a732d491c8a7",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 780,
        "wires": [
            [
                "a7daf0ea94a0c7ed"
            ]
        ]
    },
    {
        "id": "998e097c05574fbe",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 840,
        "wires": [
            [
                "2e81a5c247138e78",
                "1c068410551f6784"
            ]
        ]
    },
    {
        "id": "2e81a5c247138e78",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 840,
        "wires": [
            [
                "168e9664dd792f0e"
            ]
        ]
    },
    {
        "id": "168e9664dd792f0e",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 840,
        "wires": [
            [
                "e976e75b9acc88ee",
                "52d7fb341248091d"
            ]
        ]
    },
    {
        "id": "1c068410551f6784",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "name": "debug 2461",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 880,
        "wires": []
    },
    {
        "id": "a7daf0ea94a0c7ed",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 780,
        "wires": [
            [
                "168e9664dd792f0e",
                "2ddaf2767d880425"
            ]
        ]
    },
    {
        "id": "2ddaf2767d880425",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "name": "debug 2462",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 780,
        "wires": []
    },
    {
        "id": "dd5f3a0def9c2e38",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 780,
        "wires": [
            [
                "ca86a732d491c8a7"
            ]
        ]
    },
    {
        "id": "bda0354b403c9973",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 840,
        "wires": []
    },
    {
        "id": "0414f42b3836939c",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "name": "debug 2463",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 880,
        "wires": []
    },
    {
        "id": "e976e75b9acc88ee",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 840,
        "wires": [
            [
                "4bc4c70cd91b8e1d"
            ]
        ]
    },
    {
        "id": "52d7fb341248091d",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "50ab137ea16a4761",
        "name": "debug 2464",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 880,
        "wires": []
    },
    {
        "id": "3e73c2224a0af366",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "name": "function 15",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1060,
        "wires": [
            [
                "0936767f42e8e996"
            ]
        ]
    },
    {
        "id": "5a93bf9d7108f161",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 1060,
        "wires": [
            [
                "bd719e35c7c2918c"
            ]
        ]
    },
    {
        "id": "27a80b198b75455d",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 1060,
        "wires": [
            [
                "3e73c2224a0af366",
                "73d53379c02250c4"
            ]
        ]
    },
    {
        "id": "bd719e35c7c2918c",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B04,B04_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B04,B04_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B04,B04_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B04,B04_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B04,B04_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B04,B04_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B04,B04_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B04,B04_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B04,B04_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B04,B04_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B04,B04_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B04,B04_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B04,B04_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B04,B04_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 1060,
        "wires": [
            [
                "27a80b198b75455d"
            ]
        ]
    },
    {
        "id": "73d53379c02250c4",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 1120,
        "wires": [
            [
                "3c512819a7343b6e"
            ]
        ]
    },
    {
        "id": "fcb69dce390c08d3",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1120,
        "wires": [
            [
                "b1733d35408158a0",
                "ad0c4f7dfad9b195"
            ]
        ]
    },
    {
        "id": "b442c6706c029b10",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 1060,
        "wires": [
            [
                "a2c91939118b9670"
            ]
        ]
    },
    {
        "id": "3c512819a7343b6e",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1120,
        "wires": [
            [
                "e39df8cc83910e02",
                "6d505fd24edbab1a"
            ]
        ]
    },
    {
        "id": "e39df8cc83910e02",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1120,
        "wires": [
            [
                "7ffecbbcf678a91a"
            ]
        ]
    },
    {
        "id": "7ffecbbcf678a91a",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1120,
        "wires": [
            [
                "927b4af62340a71f",
                "8dc4beeecaabb96f"
            ]
        ]
    },
    {
        "id": "6d505fd24edbab1a",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "name": "debug 2465",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1160,
        "wires": []
    },
    {
        "id": "a2c91939118b9670",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1060,
        "wires": [
            [
                "7ffecbbcf678a91a",
                "17e17cbf9e9f9a53"
            ]
        ]
    },
    {
        "id": "17e17cbf9e9f9a53",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "name": "debug 2466",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 1060,
        "wires": []
    },
    {
        "id": "0936767f42e8e996",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 1060,
        "wires": [
            [
                "b442c6706c029b10"
            ]
        ]
    },
    {
        "id": "b1733d35408158a0",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 1120,
        "wires": []
    },
    {
        "id": "ad0c4f7dfad9b195",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "name": "debug 2467",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 1160,
        "wires": []
    },
    {
        "id": "927b4af62340a71f",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 1120,
        "wires": [
            [
                "fcb69dce390c08d3"
            ]
        ]
    },
    {
        "id": "8dc4beeecaabb96f",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "26f381d4b23d2e0a",
        "name": "debug 2468",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1160,
        "wires": []
    },
    {
        "id": "511938ad262111e9",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "name": "function 16",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 1060,
        "wires": [
            [
                "a65cd0031d0c73e0"
            ]
        ]
    },
    {
        "id": "1ff1f2c75695b28e",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 1060,
        "wires": [
            [
                "583ab7b7bcfd0b16"
            ]
        ]
    },
    {
        "id": "09c036d6441a8379",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 1060,
        "wires": [
            [
                "511938ad262111e9",
                "adf2db3208ee0d5b"
            ]
        ]
    },
    {
        "id": "583ab7b7bcfd0b16",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B04,B04_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B04,B04_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B04,B04_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B04,B04_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B04,B04_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B04,B04_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B04,B04_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B04,B04_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B04,B04_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B04,B04_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B04,B04_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B04,B04_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B04,B04_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B04,B04_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 1060,
        "wires": [
            [
                "09c036d6441a8379"
            ]
        ]
    },
    {
        "id": "adf2db3208ee0d5b",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 1120,
        "wires": [
            [
                "5b6e26dd9a1cf1e7"
            ]
        ]
    },
    {
        "id": "b4dd1539b2507cfa",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1120,
        "wires": [
            [
                "dabfc6f977f29c88",
                "45ff94049fe384e6"
            ]
        ]
    },
    {
        "id": "b19ebdf3d1699704",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 1060,
        "wires": [
            [
                "e51b54c88498e322"
            ]
        ]
    },
    {
        "id": "5b6e26dd9a1cf1e7",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 1120,
        "wires": [
            [
                "88a00ff4a69d2fce",
                "7d3e5a06b1821c81"
            ]
        ]
    },
    {
        "id": "88a00ff4a69d2fce",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 1120,
        "wires": [
            [
                "c83fc4b214fb375d"
            ]
        ]
    },
    {
        "id": "c83fc4b214fb375d",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 1120,
        "wires": [
            [
                "72d93269bf08e5a9",
                "4dfefc6810454909"
            ]
        ]
    },
    {
        "id": "7d3e5a06b1821c81",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "name": "debug 2469",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 1160,
        "wires": []
    },
    {
        "id": "e51b54c88498e322",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 1060,
        "wires": [
            [
                "c83fc4b214fb375d",
                "2b69c8218520a5e7"
            ]
        ]
    },
    {
        "id": "2b69c8218520a5e7",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "name": "debug 2470",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 1060,
        "wires": []
    },
    {
        "id": "a65cd0031d0c73e0",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 1060,
        "wires": [
            [
                "b19ebdf3d1699704"
            ]
        ]
    },
    {
        "id": "dabfc6f977f29c88",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 1120,
        "wires": []
    },
    {
        "id": "45ff94049fe384e6",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "name": "debug 2471",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 1160,
        "wires": []
    },
    {
        "id": "72d93269bf08e5a9",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 1120,
        "wires": [
            [
                "b4dd1539b2507cfa"
            ]
        ]
    },
    {
        "id": "4dfefc6810454909",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "246ab91d2503143d",
        "name": "debug 2472",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 1160,
        "wires": []
    },
    {
        "id": "03fde93c2d7cd2ca",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "name": "function 17",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1300,
        "wires": [
            [
                "5119caf01d275eaa"
            ]
        ]
    },
    {
        "id": "ba9d60a56c950269",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 1300,
        "wires": [
            [
                "733ecc878ceebdea"
            ]
        ]
    },
    {
        "id": "adb4ee6339ebe84c",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 1300,
        "wires": [
            [
                "03fde93c2d7cd2ca",
                "4efaefe17bd95715"
            ]
        ]
    },
    {
        "id": "733ecc878ceebdea",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B05,B05_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B05,B05_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B05,B05_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B05,B05_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B05,B05_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B05,B05_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B05,B05_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B05,B05_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B05,B05_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B05,B05_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B05,B05_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B05,B05_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B05,B05_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B05,B05_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 1300,
        "wires": [
            [
                "adb4ee6339ebe84c"
            ]
        ]
    },
    {
        "id": "4efaefe17bd95715",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 1360,
        "wires": [
            [
                "03b1ae42c0d6c54f"
            ]
        ]
    },
    {
        "id": "ec62215c85436b01",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1360,
        "wires": [
            [
                "0c45d5ad25720385",
                "07abe8b4e7553697"
            ]
        ]
    },
    {
        "id": "378e82852b81f5db",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 1300,
        "wires": [
            [
                "8c851aa04eedc59c"
            ]
        ]
    },
    {
        "id": "03b1ae42c0d6c54f",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1360,
        "wires": [
            [
                "266bd453ee0f4599",
                "b32b828777429438"
            ]
        ]
    },
    {
        "id": "266bd453ee0f4599",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1360,
        "wires": [
            [
                "5ec02b4f407d40dd"
            ]
        ]
    },
    {
        "id": "5ec02b4f407d40dd",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1360,
        "wires": [
            [
                "9b37535bdac38a6b",
                "72727c36ae499f25"
            ]
        ]
    },
    {
        "id": "b32b828777429438",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "name": "debug 2473",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1400,
        "wires": []
    },
    {
        "id": "8c851aa04eedc59c",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1300,
        "wires": [
            [
                "5ec02b4f407d40dd",
                "88c82990778a8e8e"
            ]
        ]
    },
    {
        "id": "88c82990778a8e8e",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "name": "debug 2474",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 1300,
        "wires": []
    },
    {
        "id": "5119caf01d275eaa",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 1300,
        "wires": [
            [
                "378e82852b81f5db"
            ]
        ]
    },
    {
        "id": "0c45d5ad25720385",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 1360,
        "wires": []
    },
    {
        "id": "07abe8b4e7553697",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "name": "debug 2475",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 1400,
        "wires": []
    },
    {
        "id": "9b37535bdac38a6b",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 1360,
        "wires": [
            [
                "ec62215c85436b01"
            ]
        ]
    },
    {
        "id": "72727c36ae499f25",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "ebd5024463bcbe9b",
        "name": "debug 2476",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1400,
        "wires": []
    },
    {
        "id": "77d435cd0606ad08",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "name": "function 18",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 1320,
        "wires": [
            [
                "4011da45981926b3"
            ]
        ]
    },
    {
        "id": "bfa8738050919973",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 1320,
        "wires": [
            [
                "090267161dd86a27"
            ]
        ]
    },
    {
        "id": "b412b2be93c759cb",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 1320,
        "wires": [
            [
                "77d435cd0606ad08",
                "45de8a34168697b6"
            ]
        ]
    },
    {
        "id": "090267161dd86a27",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B05,B05_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B05,B05_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B05,B05_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B05,B05_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B05,B05_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B05,B05_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B05,B05_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B05,B05_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B05,B05_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B05,B05_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B05,B05_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B05,B05_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B05,B05_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B05,B05_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 1320,
        "wires": [
            [
                "b412b2be93c759cb"
            ]
        ]
    },
    {
        "id": "45de8a34168697b6",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 1380,
        "wires": [
            [
                "6e1d2df1c90d214b"
            ]
        ]
    },
    {
        "id": "f486f21c1bdc8ae8",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1380,
        "wires": [
            [
                "354decd118cb6ad0",
                "3076417047a4a73b"
            ]
        ]
    },
    {
        "id": "380b3dddc45ae0f5",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 1320,
        "wires": [
            [
                "dd23a07aa873d4b5"
            ]
        ]
    },
    {
        "id": "6e1d2df1c90d214b",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 1380,
        "wires": [
            [
                "642b0cd5c35fdb9f",
                "7ca106946c65fd6e"
            ]
        ]
    },
    {
        "id": "642b0cd5c35fdb9f",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 1380,
        "wires": [
            [
                "438e94216dc4859f"
            ]
        ]
    },
    {
        "id": "438e94216dc4859f",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 1380,
        "wires": [
            [
                "446edcf43f4f9c6e",
                "07644f19c6d5f309"
            ]
        ]
    },
    {
        "id": "7ca106946c65fd6e",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "name": "debug 2477",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 1420,
        "wires": []
    },
    {
        "id": "dd23a07aa873d4b5",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 1320,
        "wires": [
            [
                "438e94216dc4859f",
                "59e4e7fd43922a13"
            ]
        ]
    },
    {
        "id": "59e4e7fd43922a13",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "name": "debug 2478",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 1320,
        "wires": []
    },
    {
        "id": "4011da45981926b3",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 1320,
        "wires": [
            [
                "380b3dddc45ae0f5"
            ]
        ]
    },
    {
        "id": "354decd118cb6ad0",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 1380,
        "wires": []
    },
    {
        "id": "3076417047a4a73b",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "name": "debug 2479",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 1420,
        "wires": []
    },
    {
        "id": "446edcf43f4f9c6e",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 1380,
        "wires": [
            [
                "f486f21c1bdc8ae8"
            ]
        ]
    },
    {
        "id": "07644f19c6d5f309",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "ea9f71f62510e4d6",
        "name": "debug 2480",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 1420,
        "wires": []
    },
    {
        "id": "64ad267ea88452f3",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "name": "function 19",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1580,
        "wires": [
            [
                "9e6ef1cd245900b0"
            ]
        ]
    },
    {
        "id": "b59545861404b887",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 1580,
        "wires": [
            [
                "ac9b2857b8edc21a"
            ]
        ]
    },
    {
        "id": "f522b2aa71b047b0",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 1580,
        "wires": [
            [
                "64ad267ea88452f3",
                "489b0ac5a4a295ab"
            ]
        ]
    },
    {
        "id": "ac9b2857b8edc21a",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B06,B06_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B06,B06_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B06,B06_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B06,B06_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B06,B06_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B06,B06_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B06,B06_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B06,B06_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B06,B06_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B06,B06_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B06,B06_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B06,B06_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B06,B06_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B06,B06_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 1580,
        "wires": [
            [
                "f522b2aa71b047b0"
            ]
        ]
    },
    {
        "id": "489b0ac5a4a295ab",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 1640,
        "wires": [
            [
                "8b48317c8a468dcc"
            ]
        ]
    },
    {
        "id": "04f5d150ea9c1ddc",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1640,
        "wires": [
            [
                "4c08e5ea1363485a",
                "6822182767447edc"
            ]
        ]
    },
    {
        "id": "756eb2521d0b2c2e",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 1580,
        "wires": [
            [
                "e4e7e0376ac9c0af"
            ]
        ]
    },
    {
        "id": "8b48317c8a468dcc",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1640,
        "wires": [
            [
                "cb627d7721d6c8ef",
                "326dc1cbba4de540"
            ]
        ]
    },
    {
        "id": "cb627d7721d6c8ef",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1640,
        "wires": [
            [
                "0820f73ea45c569f"
            ]
        ]
    },
    {
        "id": "0820f73ea45c569f",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1640,
        "wires": [
            [
                "6f612e8514deb9fb",
                "2198e5297ea54bee"
            ]
        ]
    },
    {
        "id": "326dc1cbba4de540",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "name": "debug 2481",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1680,
        "wires": []
    },
    {
        "id": "e4e7e0376ac9c0af",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1580,
        "wires": [
            [
                "0820f73ea45c569f",
                "d9ab2058fcb2794a"
            ]
        ]
    },
    {
        "id": "d9ab2058fcb2794a",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "name": "debug 2482",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 1580,
        "wires": []
    },
    {
        "id": "9e6ef1cd245900b0",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 1580,
        "wires": [
            [
                "756eb2521d0b2c2e"
            ]
        ]
    },
    {
        "id": "4c08e5ea1363485a",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 1640,
        "wires": []
    },
    {
        "id": "6822182767447edc",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "name": "debug 2483",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 1680,
        "wires": []
    },
    {
        "id": "6f612e8514deb9fb",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 1640,
        "wires": [
            [
                "04f5d150ea9c1ddc"
            ]
        ]
    },
    {
        "id": "2198e5297ea54bee",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "3a1d6e612c7a6e21",
        "name": "debug 2484",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1680,
        "wires": []
    },
    {
        "id": "9ed26046060c30d3",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "name": "function 20",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1840,
        "wires": [
            [
                "909370aaf40601ed"
            ]
        ]
    },
    {
        "id": "1813bc082fe9aae5",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 1840,
        "wires": [
            [
                "e04802ea36f7e778"
            ]
        ]
    },
    {
        "id": "0a27c59201595d11",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 1840,
        "wires": [
            [
                "9ed26046060c30d3",
                "bd0feb3982cb510f"
            ]
        ]
    },
    {
        "id": "e04802ea36f7e778",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B07,B07_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B07,B07_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B07,B07_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B07,B07_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B07,B07_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B07,B07_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B07,B07_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B07,B07_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B07,B07_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B07,B07_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B07,B07_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B07,B07_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B07,B07_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B07,B07_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 1840,
        "wires": [
            [
                "0a27c59201595d11"
            ]
        ]
    },
    {
        "id": "bd0feb3982cb510f",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 1900,
        "wires": [
            [
                "baf06a9966ddd87c"
            ]
        ]
    },
    {
        "id": "fccfd3a3f1afdab7",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1900,
        "wires": [
            [
                "6cd7782a5dc40b6d",
                "bc444c9a2a6403c6"
            ]
        ]
    },
    {
        "id": "012a018bd31caaa1",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 1840,
        "wires": [
            [
                "a8921d19ba46694e"
            ]
        ]
    },
    {
        "id": "baf06a9966ddd87c",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1900,
        "wires": [
            [
                "481b3b333c3a641d",
                "da72964645983cbd"
            ]
        ]
    },
    {
        "id": "481b3b333c3a641d",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1900,
        "wires": [
            [
                "d9806b94d27dc237"
            ]
        ]
    },
    {
        "id": "d9806b94d27dc237",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1900,
        "wires": [
            [
                "882776f0f937db29",
                "2c32c32966ca9422"
            ]
        ]
    },
    {
        "id": "da72964645983cbd",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "name": "debug 2485",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1940,
        "wires": []
    },
    {
        "id": "a8921d19ba46694e",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1840,
        "wires": [
            [
                "d9806b94d27dc237",
                "62a3003bcc2b8a0c"
            ]
        ]
    },
    {
        "id": "62a3003bcc2b8a0c",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "name": "debug 2486",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 1840,
        "wires": []
    },
    {
        "id": "909370aaf40601ed",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 1840,
        "wires": [
            [
                "012a018bd31caaa1"
            ]
        ]
    },
    {
        "id": "6cd7782a5dc40b6d",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 1900,
        "wires": []
    },
    {
        "id": "bc444c9a2a6403c6",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "name": "debug 2487",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 1940,
        "wires": []
    },
    {
        "id": "882776f0f937db29",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 1900,
        "wires": [
            [
                "fccfd3a3f1afdab7"
            ]
        ]
    },
    {
        "id": "2c32c32966ca9422",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "73f3b667d8900621",
        "name": "debug 2488",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1940,
        "wires": []
    },
    {
        "id": "b7ccd2f155460db3",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "name": "function 21",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 1580,
        "wires": [
            [
                "a02bcdcd68083822"
            ]
        ]
    },
    {
        "id": "0a4594cfca2118be",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 1580,
        "wires": [
            [
                "3dce431f49a1eec9"
            ]
        ]
    },
    {
        "id": "db0595d03a3f2f28",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 1580,
        "wires": [
            [
                "b7ccd2f155460db3",
                "184a26c858a75624"
            ]
        ]
    },
    {
        "id": "3dce431f49a1eec9",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B06,B06_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B06,B06_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B06,B06_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B06,B06_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B06,B06_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B06,B06_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B06,B06_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B06,B06_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B06,B06_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B06,B06_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B06,B06_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B06,B06_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B06,B06_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B06,B06_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 1580,
        "wires": [
            [
                "db0595d03a3f2f28"
            ]
        ]
    },
    {
        "id": "184a26c858a75624",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 1640,
        "wires": [
            [
                "d2391fe37bcc0b17"
            ]
        ]
    },
    {
        "id": "88a593f013f6af67",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1640,
        "wires": [
            [
                "101958ea1f411948",
                "93b88dbdd3f1620e"
            ]
        ]
    },
    {
        "id": "cc724ca53994a08b",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 1580,
        "wires": [
            [
                "129ef1ee51889630"
            ]
        ]
    },
    {
        "id": "d2391fe37bcc0b17",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 1640,
        "wires": [
            [
                "e5585ca073817c7a",
                "2a8fceb67cbae578"
            ]
        ]
    },
    {
        "id": "e5585ca073817c7a",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 1640,
        "wires": [
            [
                "8916789fdf4af413"
            ]
        ]
    },
    {
        "id": "8916789fdf4af413",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 1640,
        "wires": [
            [
                "c1fb6fe96a313967",
                "7de23cd1ead958a7"
            ]
        ]
    },
    {
        "id": "2a8fceb67cbae578",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "name": "debug 2489",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 1680,
        "wires": []
    },
    {
        "id": "129ef1ee51889630",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 1580,
        "wires": [
            [
                "8916789fdf4af413",
                "19e5df24d5c3f3bb"
            ]
        ]
    },
    {
        "id": "19e5df24d5c3f3bb",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "name": "debug 2490",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 1580,
        "wires": []
    },
    {
        "id": "a02bcdcd68083822",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 1580,
        "wires": [
            [
                "cc724ca53994a08b"
            ]
        ]
    },
    {
        "id": "101958ea1f411948",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 1640,
        "wires": []
    },
    {
        "id": "93b88dbdd3f1620e",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "name": "debug 2491",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 1680,
        "wires": []
    },
    {
        "id": "c1fb6fe96a313967",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 1640,
        "wires": [
            [
                "88a593f013f6af67"
            ]
        ]
    },
    {
        "id": "7de23cd1ead958a7",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "8ac8a2d9666a1663",
        "name": "debug 2492",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 1680,
        "wires": []
    },
    {
        "id": "bd047cc1ade2a01e",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "name": "function 22",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 1840,
        "wires": [
            [
                "dbe1d0c821b8b4b7"
            ]
        ]
    },
    {
        "id": "0d4e08635d400ce8",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 1840,
        "wires": [
            [
                "f72b1b2ac664edce"
            ]
        ]
    },
    {
        "id": "7a53c746c5ca0f29",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 1840,
        "wires": [
            [
                "bd047cc1ade2a01e",
                "f4b83de50f633429"
            ]
        ]
    },
    {
        "id": "f72b1b2ac664edce",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B07,B07_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B07,B07_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B07,B07_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B07,B07_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B07,B07_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B07,B07_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B07,B07_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B07,B07_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B07,B07_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B07,B07_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B07,B07_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B07,B07_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B07,B07_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B07,B07_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 1840,
        "wires": [
            [
                "7a53c746c5ca0f29"
            ]
        ]
    },
    {
        "id": "f4b83de50f633429",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 1900,
        "wires": [
            [
                "861c8b038a660a31"
            ]
        ]
    },
    {
        "id": "7d8d712b38775fa4",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1900,
        "wires": [
            [
                "2ad427d0abbac4ea",
                "acafaa0a4eb41897"
            ]
        ]
    },
    {
        "id": "7b644381f3ccb9d4",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 1840,
        "wires": [
            [
                "378f65d1db6494cf"
            ]
        ]
    },
    {
        "id": "861c8b038a660a31",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 1900,
        "wires": [
            [
                "6ecec77f4824bc59",
                "20e9300afb6e0f89"
            ]
        ]
    },
    {
        "id": "6ecec77f4824bc59",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 1900,
        "wires": [
            [
                "6020c7739c7b1fa6"
            ]
        ]
    },
    {
        "id": "6020c7739c7b1fa6",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 1900,
        "wires": [
            [
                "fa88837ace21dd88",
                "7f06612f4b7eda5b"
            ]
        ]
    },
    {
        "id": "20e9300afb6e0f89",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "name": "debug 2493",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 1940,
        "wires": []
    },
    {
        "id": "378f65d1db6494cf",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 1840,
        "wires": [
            [
                "6020c7739c7b1fa6",
                "06666396545f395d"
            ]
        ]
    },
    {
        "id": "06666396545f395d",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "name": "debug 2494",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 1840,
        "wires": []
    },
    {
        "id": "dbe1d0c821b8b4b7",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 1840,
        "wires": [
            [
                "7b644381f3ccb9d4"
            ]
        ]
    },
    {
        "id": "2ad427d0abbac4ea",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 1900,
        "wires": []
    },
    {
        "id": "acafaa0a4eb41897",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "name": "debug 2495",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 1940,
        "wires": []
    },
    {
        "id": "fa88837ace21dd88",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 1900,
        "wires": [
            [
                "7d8d712b38775fa4"
            ]
        ]
    },
    {
        "id": "7f06612f4b7eda5b",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "5b9ba306a94729a6",
        "name": "debug 2496",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 1940,
        "wires": []
    },
    {
        "id": "c7f74f526df12eff",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "name": "function 23",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2120,
        "wires": [
            [
                "83a740bc132428ef"
            ]
        ]
    },
    {
        "id": "ea0f5a3f21320de3",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 2120,
        "wires": [
            [
                "c636b7daa4f979c2"
            ]
        ]
    },
    {
        "id": "c6523ea601f5ce6d",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 2120,
        "wires": [
            [
                "c7f74f526df12eff",
                "fc4213ad9721526c"
            ]
        ]
    },
    {
        "id": "c636b7daa4f979c2",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B08,B08_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B08,B08_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B08,B08_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B08,B08_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B08,B08_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B08,B08_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B08,B08_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B08,B08_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B08,B08_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B08,B08_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B08,B08_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B08,B08_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B08,B08_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B08,B08_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 2120,
        "wires": [
            [
                "c6523ea601f5ce6d"
            ]
        ]
    },
    {
        "id": "fc4213ad9721526c",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 2180,
        "wires": [
            [
                "db1972400988dc1f"
            ]
        ]
    },
    {
        "id": "fd5ad8d017b567e8",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 2180,
        "wires": [
            [
                "131fa6782f98d395",
                "2cc4ec6ae958096a"
            ]
        ]
    },
    {
        "id": "f02f549d3b1b6f2c",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 2120,
        "wires": [
            [
                "fcd8625b71094a6a"
            ]
        ]
    },
    {
        "id": "db1972400988dc1f",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2180,
        "wires": [
            [
                "333766481fe88586",
                "ea14fac4eebfdcf5"
            ]
        ]
    },
    {
        "id": "333766481fe88586",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 2180,
        "wires": [
            [
                "11d9d6f2eff8ad04"
            ]
        ]
    },
    {
        "id": "11d9d6f2eff8ad04",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2180,
        "wires": [
            [
                "51c6698a7e9e3056",
                "2350debf349ffd91"
            ]
        ]
    },
    {
        "id": "ea14fac4eebfdcf5",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "name": "debug 2497",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 2220,
        "wires": []
    },
    {
        "id": "fcd8625b71094a6a",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2120,
        "wires": [
            [
                "11d9d6f2eff8ad04",
                "8cf48a7c839abf87"
            ]
        ]
    },
    {
        "id": "8cf48a7c839abf87",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "name": "debug 2498",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 2120,
        "wires": []
    },
    {
        "id": "83a740bc132428ef",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 2120,
        "wires": [
            [
                "f02f549d3b1b6f2c"
            ]
        ]
    },
    {
        "id": "131fa6782f98d395",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 2180,
        "wires": []
    },
    {
        "id": "2cc4ec6ae958096a",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "name": "debug 2499",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 2220,
        "wires": []
    },
    {
        "id": "51c6698a7e9e3056",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 2180,
        "wires": [
            [
                "fd5ad8d017b567e8"
            ]
        ]
    },
    {
        "id": "2350debf349ffd91",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "01a8c5ecc3f69454",
        "name": "debug 2500",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 2220,
        "wires": []
    },
    {
        "id": "04f821df58fb4b97",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "name": "function 24",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2400,
        "wires": [
            [
                "8f86b51f1c94b4a2"
            ]
        ]
    },
    {
        "id": "8f6d95f376d7c39b",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 2400,
        "wires": [
            [
                "685afef51d080ef6"
            ]
        ]
    },
    {
        "id": "56e6ab52ab1d07f0",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 2400,
        "wires": [
            [
                "04f821df58fb4b97",
                "b9d43dda13bd2e6c"
            ]
        ]
    },
    {
        "id": "685afef51d080ef6",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B09,B09_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B09,B09_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B09,B09_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B09,B09_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B09,B09_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B09,B09_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B09,B09_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B09,B09_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B09,B09_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B09,B09_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B09,B09_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B09,B09_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B09,B09_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B09,B09_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 2400,
        "wires": [
            [
                "56e6ab52ab1d07f0"
            ]
        ]
    },
    {
        "id": "b9d43dda13bd2e6c",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 2460,
        "wires": [
            [
                "589ec4e98b4f2e7b"
            ]
        ]
    },
    {
        "id": "0d112481f32ce893",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 2460,
        "wires": [
            [
                "c32ad74e2c0ffa8f",
                "39962b02bb2353d8"
            ]
        ]
    },
    {
        "id": "37747cc47e38ed84",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 2400,
        "wires": [
            [
                "493b36cf23ba00a9"
            ]
        ]
    },
    {
        "id": "589ec4e98b4f2e7b",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2460,
        "wires": [
            [
                "62d920f3ab1f03fb",
                "6029b915863260fa"
            ]
        ]
    },
    {
        "id": "62d920f3ab1f03fb",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 2460,
        "wires": [
            [
                "e2654a2161038136"
            ]
        ]
    },
    {
        "id": "e2654a2161038136",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2460,
        "wires": [
            [
                "ab39930e284802b7",
                "badbfc42ce5d0606"
            ]
        ]
    },
    {
        "id": "6029b915863260fa",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "name": "debug 2501",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 2500,
        "wires": []
    },
    {
        "id": "493b36cf23ba00a9",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2400,
        "wires": [
            [
                "e2654a2161038136",
                "f1f614f2a1982cfe"
            ]
        ]
    },
    {
        "id": "f1f614f2a1982cfe",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "name": "debug 2502",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 2400,
        "wires": []
    },
    {
        "id": "8f86b51f1c94b4a2",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 2400,
        "wires": [
            [
                "37747cc47e38ed84"
            ]
        ]
    },
    {
        "id": "c32ad74e2c0ffa8f",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 2460,
        "wires": []
    },
    {
        "id": "39962b02bb2353d8",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "name": "debug 2503",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 2500,
        "wires": []
    },
    {
        "id": "ab39930e284802b7",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 2460,
        "wires": [
            [
                "0d112481f32ce893"
            ]
        ]
    },
    {
        "id": "badbfc42ce5d0606",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "83c8dd0d554cbfa3",
        "name": "debug 2504",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 2500,
        "wires": []
    },
    {
        "id": "ba77e5a4a8d11473",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "name": "function 25",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2660,
        "wires": [
            [
                "2fe09bfd8cae48cc"
            ]
        ]
    },
    {
        "id": "e89d1c241b29c441",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 2660,
        "wires": [
            [
                "d01e2c299e21309c"
            ]
        ]
    },
    {
        "id": "736a44af70531efa",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 2660,
        "wires": [
            [
                "ba77e5a4a8d11473",
                "52dc55f809fee3ea"
            ]
        ]
    },
    {
        "id": "d01e2c299e21309c",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B10,B10_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B10,B10_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B10,B10_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B10,B10_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B10,B10_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B10,B10_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B10,B10_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B10,B10_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B10,B10_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B10,B10_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B10,B10_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B10,B10_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B10,B10_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B10,B10_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 2660,
        "wires": [
            [
                "736a44af70531efa"
            ]
        ]
    },
    {
        "id": "52dc55f809fee3ea",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 2720,
        "wires": [
            [
                "dd4ee79480daeda4"
            ]
        ]
    },
    {
        "id": "0aef205083f16992",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 2720,
        "wires": [
            [
                "5040bfc2b429dd77",
                "75978bad1c3d5a40"
            ]
        ]
    },
    {
        "id": "0f2c4187b56cb9fd",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 2660,
        "wires": [
            [
                "ce18e41bc827dc09"
            ]
        ]
    },
    {
        "id": "dd4ee79480daeda4",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2720,
        "wires": [
            [
                "74e009a22dc2da22",
                "2d4e65788e2fb71c"
            ]
        ]
    },
    {
        "id": "74e009a22dc2da22",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 2720,
        "wires": [
            [
                "83a9d6bc033bbaa5"
            ]
        ]
    },
    {
        "id": "83a9d6bc033bbaa5",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2720,
        "wires": [
            [
                "e3b2e329644f36c0",
                "5dca67b848a17ed7"
            ]
        ]
    },
    {
        "id": "2d4e65788e2fb71c",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "name": "debug 2505",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 2760,
        "wires": []
    },
    {
        "id": "ce18e41bc827dc09",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2660,
        "wires": [
            [
                "83a9d6bc033bbaa5",
                "d5113be061e46c08"
            ]
        ]
    },
    {
        "id": "d5113be061e46c08",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "name": "debug 2506",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 2660,
        "wires": []
    },
    {
        "id": "2fe09bfd8cae48cc",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 2660,
        "wires": [
            [
                "0f2c4187b56cb9fd"
            ]
        ]
    },
    {
        "id": "5040bfc2b429dd77",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 2720,
        "wires": []
    },
    {
        "id": "75978bad1c3d5a40",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "name": "debug 2507",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 2760,
        "wires": []
    },
    {
        "id": "e3b2e329644f36c0",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 2720,
        "wires": [
            [
                "0aef205083f16992"
            ]
        ]
    },
    {
        "id": "5dca67b848a17ed7",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "2cd1ad89dd0bb077",
        "name": "debug 2508",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 2760,
        "wires": []
    },
    {
        "id": "93f7fa1bc5b37f6a",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "name": "function 26",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 2120,
        "wires": [
            [
                "07591cc453d27506"
            ]
        ]
    },
    {
        "id": "167e6e04d35d6d1e",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 2120,
        "wires": [
            [
                "80944a5e0bb1a81d"
            ]
        ]
    },
    {
        "id": "cece9bc87406f95b",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 2120,
        "wires": [
            [
                "93f7fa1bc5b37f6a",
                "dcb0adab6cb69fa1"
            ]
        ]
    },
    {
        "id": "80944a5e0bb1a81d",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B08,B08_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B08,B08_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B08,B08_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B08,B08_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B08,B08_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B08,B08_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B08,B08_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B08,B08_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B08,B08_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B08,B08_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B08,B08_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B08,B08_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B08,B08_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B08,B08_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 2120,
        "wires": [
            [
                "cece9bc87406f95b"
            ]
        ]
    },
    {
        "id": "dcb0adab6cb69fa1",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 2180,
        "wires": [
            [
                "e9b4602475a881ab"
            ]
        ]
    },
    {
        "id": "366b87a9f5e2cbbe",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 2180,
        "wires": [
            [
                "17a0f41a61d290d7",
                "a13053d328937814"
            ]
        ]
    },
    {
        "id": "fa8668e9f6875db6",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 2120,
        "wires": [
            [
                "8e110f16f36de8ed"
            ]
        ]
    },
    {
        "id": "e9b4602475a881ab",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 2180,
        "wires": [
            [
                "3756736f8819bf68",
                "d32be14e443cc8f6"
            ]
        ]
    },
    {
        "id": "3756736f8819bf68",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 2180,
        "wires": [
            [
                "121cabd784edd888"
            ]
        ]
    },
    {
        "id": "121cabd784edd888",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 2180,
        "wires": [
            [
                "6178a406edc072f9",
                "64a0725681f8cf11"
            ]
        ]
    },
    {
        "id": "d32be14e443cc8f6",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "name": "debug 2509",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 2220,
        "wires": []
    },
    {
        "id": "8e110f16f36de8ed",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 2120,
        "wires": [
            [
                "121cabd784edd888",
                "afd9cf5ad2a42d3e"
            ]
        ]
    },
    {
        "id": "afd9cf5ad2a42d3e",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "name": "debug 2510",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 2120,
        "wires": []
    },
    {
        "id": "07591cc453d27506",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 2120,
        "wires": [
            [
                "fa8668e9f6875db6"
            ]
        ]
    },
    {
        "id": "17a0f41a61d290d7",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 2180,
        "wires": []
    },
    {
        "id": "a13053d328937814",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "name": "debug 2511",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 2220,
        "wires": []
    },
    {
        "id": "6178a406edc072f9",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 2180,
        "wires": [
            [
                "366b87a9f5e2cbbe"
            ]
        ]
    },
    {
        "id": "64a0725681f8cf11",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "7ce4ec8e25c2e692",
        "name": "debug 2512",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 2220,
        "wires": []
    },
    {
        "id": "d2532f553e791e49",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "name": "function 27",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 2400,
        "wires": [
            [
                "827e85ce303438e1"
            ]
        ]
    },
    {
        "id": "0f355e056ea79869",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 2400,
        "wires": [
            [
                "98270aa0e9285ae6"
            ]
        ]
    },
    {
        "id": "1cc0d7f8f1e1ef0f",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 2400,
        "wires": [
            [
                "d2532f553e791e49",
                "95de3935b157c9f3"
            ]
        ]
    },
    {
        "id": "98270aa0e9285ae6",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B09,B09_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B09,B09_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B09,B09_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B09,B09_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B09,B09_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B09,B09_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B09,B09_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B09,B09_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B09,B09_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B09,B09_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B09,B09_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B09,B09_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B09,B09_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B09,B09_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 2400,
        "wires": [
            [
                "1cc0d7f8f1e1ef0f"
            ]
        ]
    },
    {
        "id": "95de3935b157c9f3",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 2460,
        "wires": [
            [
                "13c10db811be34cf"
            ]
        ]
    },
    {
        "id": "d6f709ed9af6a8c6",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 2460,
        "wires": [
            [
                "925419eb644e9fe3",
                "1e1bbbf17f24394e"
            ]
        ]
    },
    {
        "id": "9e1c058410bed4eb",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 2400,
        "wires": [
            [
                "5d2749a536dfb3eb"
            ]
        ]
    },
    {
        "id": "13c10db811be34cf",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 2460,
        "wires": [
            [
                "5590ba28fd314ecb",
                "a1d423baa49fabcc"
            ]
        ]
    },
    {
        "id": "5590ba28fd314ecb",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 2460,
        "wires": [
            [
                "a6164ec0a0626401"
            ]
        ]
    },
    {
        "id": "a6164ec0a0626401",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 2460,
        "wires": [
            [
                "83bc4b1b790585df",
                "f047c34dd4214995"
            ]
        ]
    },
    {
        "id": "a1d423baa49fabcc",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "name": "debug 2513",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 2500,
        "wires": []
    },
    {
        "id": "5d2749a536dfb3eb",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 2400,
        "wires": [
            [
                "a6164ec0a0626401",
                "464ebd10968da40c"
            ]
        ]
    },
    {
        "id": "464ebd10968da40c",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "name": "debug 2514",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 2400,
        "wires": []
    },
    {
        "id": "827e85ce303438e1",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 2400,
        "wires": [
            [
                "9e1c058410bed4eb"
            ]
        ]
    },
    {
        "id": "925419eb644e9fe3",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 2460,
        "wires": []
    },
    {
        "id": "1e1bbbf17f24394e",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "name": "debug 2515",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 2500,
        "wires": []
    },
    {
        "id": "83bc4b1b790585df",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 2460,
        "wires": [
            [
                "d6f709ed9af6a8c6"
            ]
        ]
    },
    {
        "id": "f047c34dd4214995",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "eb615727977e94bc",
        "name": "debug 2516",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 2500,
        "wires": []
    },
    {
        "id": "5196d91cb742616c",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "name": "function 28",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 2660,
        "wires": [
            [
                "13e5c569d8dfbabc"
            ]
        ]
    },
    {
        "id": "1fb244791e4f7c18",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 2660,
        "wires": [
            [
                "9caf1b62bce6a88a"
            ]
        ]
    },
    {
        "id": "5fd93f7ded5e3d0c",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 2660,
        "wires": [
            [
                "5196d91cb742616c",
                "5fd5b13ab347cd48"
            ]
        ]
    },
    {
        "id": "9caf1b62bce6a88a",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B10,B10_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B10,B10_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B10,B10_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B10,B10_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B10,B10_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B10,B10_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B10,B10_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B10,B10_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B10,B10_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B10,B10_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B10,B10_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B10,B10_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B10,B10_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B10,B10_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 2660,
        "wires": [
            [
                "5fd93f7ded5e3d0c"
            ]
        ]
    },
    {
        "id": "5fd5b13ab347cd48",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 2720,
        "wires": [
            [
                "296fe9d230071584"
            ]
        ]
    },
    {
        "id": "384b0551d76bad9d",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 2720,
        "wires": [
            [
                "12020b270bfe5e12",
                "b48d7e018f9fbf65"
            ]
        ]
    },
    {
        "id": "9d1d5809031bf05e",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 2660,
        "wires": [
            [
                "dc4fb6f74fd7d916"
            ]
        ]
    },
    {
        "id": "296fe9d230071584",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 2720,
        "wires": [
            [
                "9a16fd7927442c24",
                "3357d32a96b51464"
            ]
        ]
    },
    {
        "id": "9a16fd7927442c24",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 2720,
        "wires": [
            [
                "1c93f7c6e7c00612"
            ]
        ]
    },
    {
        "id": "1c93f7c6e7c00612",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 2720,
        "wires": [
            [
                "c145e7da1be57c01",
                "0a6fba2751137e96"
            ]
        ]
    },
    {
        "id": "3357d32a96b51464",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "name": "debug 2517",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 2760,
        "wires": []
    },
    {
        "id": "dc4fb6f74fd7d916",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 2660,
        "wires": [
            [
                "1c93f7c6e7c00612",
                "a0f02b8e8126b850"
            ]
        ]
    },
    {
        "id": "a0f02b8e8126b850",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "name": "debug 2518",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 2660,
        "wires": []
    },
    {
        "id": "13e5c569d8dfbabc",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 2660,
        "wires": [
            [
                "9d1d5809031bf05e"
            ]
        ]
    },
    {
        "id": "12020b270bfe5e12",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 2720,
        "wires": []
    },
    {
        "id": "b48d7e018f9fbf65",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "name": "debug 2519",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 2760,
        "wires": []
    },
    {
        "id": "c145e7da1be57c01",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 2720,
        "wires": [
            [
                "384b0551d76bad9d"
            ]
        ]
    },
    {
        "id": "0a6fba2751137e96",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "1c4f18f0cc60db76",
        "name": "debug 2520",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 2760,
        "wires": []
    },
    {
        "id": "2d030e5070ee7042",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "name": "function 29",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2920,
        "wires": [
            [
                "1233561228891b30"
            ]
        ]
    },
    {
        "id": "b828e02a294bebb4",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 2920,
        "wires": [
            [
                "b6a6aadc84f02441"
            ]
        ]
    },
    {
        "id": "e33feee819b4c5b4",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 2920,
        "wires": [
            [
                "2d030e5070ee7042",
                "d15afc614d40d166"
            ]
        ]
    },
    {
        "id": "b6a6aadc84f02441",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B11,B11_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B11,B11_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B11,B11_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B11,B11_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B11,B11_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B11,B11_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B11,B11_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B11,B11_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B11,B11_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B11,B11_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B11,B11_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B11,B11_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B11,B11_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B11,B11_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 2920,
        "wires": [
            [
                "e33feee819b4c5b4"
            ]
        ]
    },
    {
        "id": "d15afc614d40d166",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 2980,
        "wires": [
            [
                "edf8a3522ac78768"
            ]
        ]
    },
    {
        "id": "8776da04e844a84b",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 2980,
        "wires": [
            [
                "38ece06d48c5ff26",
                "b665e60e743b990f"
            ]
        ]
    },
    {
        "id": "c8ba776c78604979",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 2920,
        "wires": [
            [
                "c2ce9d8ed10acb63"
            ]
        ]
    },
    {
        "id": "edf8a3522ac78768",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2980,
        "wires": [
            [
                "f687db1db0d00b7c",
                "d658a089bed10698"
            ]
        ]
    },
    {
        "id": "f687db1db0d00b7c",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 2980,
        "wires": [
            [
                "0e15fc81f4306d89"
            ]
        ]
    },
    {
        "id": "0e15fc81f4306d89",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2980,
        "wires": [
            [
                "9905cd1f7b6382a0",
                "1979687533d5df32"
            ]
        ]
    },
    {
        "id": "d658a089bed10698",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "name": "debug 2521",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 3020,
        "wires": []
    },
    {
        "id": "c2ce9d8ed10acb63",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2920,
        "wires": [
            [
                "0e15fc81f4306d89",
                "19cef9b62bc303bd"
            ]
        ]
    },
    {
        "id": "19cef9b62bc303bd",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "name": "debug 2522",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 2920,
        "wires": []
    },
    {
        "id": "1233561228891b30",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 2920,
        "wires": [
            [
                "c8ba776c78604979"
            ]
        ]
    },
    {
        "id": "38ece06d48c5ff26",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 2980,
        "wires": []
    },
    {
        "id": "b665e60e743b990f",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "name": "debug 2523",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 3020,
        "wires": []
    },
    {
        "id": "9905cd1f7b6382a0",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 2980,
        "wires": [
            [
                "8776da04e844a84b"
            ]
        ]
    },
    {
        "id": "1979687533d5df32",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "b309e545f1b0665e",
        "name": "debug 2524",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 3020,
        "wires": []
    },
    {
        "id": "2b273da9ec61fc4c",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "name": "function 30",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3180,
        "wires": [
            [
                "4f1a66833a5a1cdd"
            ]
        ]
    },
    {
        "id": "fadaf3de5a4f6da9",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 3180,
        "wires": [
            [
                "dfe6edaaacd8d35d"
            ]
        ]
    },
    {
        "id": "df566932110fb184",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 3180,
        "wires": [
            [
                "2b273da9ec61fc4c",
                "47b16082be70f6a9"
            ]
        ]
    },
    {
        "id": "dfe6edaaacd8d35d",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B12,B12_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B12,B12_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B12,B12_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B12,B12_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B12,B12_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B12,B12_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B12,B12_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B12,B12_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B12,B12_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B12,B12_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B12,B12_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B12,B12_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B12,B12_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B12,B12_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 3180,
        "wires": [
            [
                "df566932110fb184"
            ]
        ]
    },
    {
        "id": "47b16082be70f6a9",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 3240,
        "wires": [
            [
                "24cbbba86634b019"
            ]
        ]
    },
    {
        "id": "42224733723521cc",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 3240,
        "wires": [
            [
                "83dfaea6644e0c85",
                "8d2b9d7a1d37c469"
            ]
        ]
    },
    {
        "id": "739e94c03115454d",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 3180,
        "wires": [
            [
                "69a5ef58686162ab"
            ]
        ]
    },
    {
        "id": "24cbbba86634b019",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 3240,
        "wires": [
            [
                "7b15b8c0df4234a0",
                "f9512b00b2b5274f"
            ]
        ]
    },
    {
        "id": "7b15b8c0df4234a0",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 3240,
        "wires": [
            [
                "449d621330c4b8ee"
            ]
        ]
    },
    {
        "id": "449d621330c4b8ee",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 3240,
        "wires": [
            [
                "f057791f1e11d05c",
                "74b3892b10bc5197"
            ]
        ]
    },
    {
        "id": "f9512b00b2b5274f",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "name": "debug 2525",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 3280,
        "wires": []
    },
    {
        "id": "69a5ef58686162ab",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 3180,
        "wires": [
            [
                "449d621330c4b8ee",
                "7e2dbcfdc1a1a0a7"
            ]
        ]
    },
    {
        "id": "7e2dbcfdc1a1a0a7",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "name": "debug 2526",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 3180,
        "wires": []
    },
    {
        "id": "4f1a66833a5a1cdd",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 3180,
        "wires": [
            [
                "739e94c03115454d"
            ]
        ]
    },
    {
        "id": "83dfaea6644e0c85",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 3240,
        "wires": []
    },
    {
        "id": "8d2b9d7a1d37c469",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "name": "debug 2527",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 3280,
        "wires": []
    },
    {
        "id": "f057791f1e11d05c",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 3240,
        "wires": [
            [
                "42224733723521cc"
            ]
        ]
    },
    {
        "id": "74b3892b10bc5197",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "251b597c536fecbf",
        "name": "debug 2528",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 3280,
        "wires": []
    },
    {
        "id": "55b9d639d2018f53",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "name": "function 31",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3440,
        "wires": [
            [
                "d7f59c7d975bdba6"
            ]
        ]
    },
    {
        "id": "ebbc412301eab999",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 3440,
        "wires": [
            [
                "04db09391290a64c"
            ]
        ]
    },
    {
        "id": "7855bcb8e4b68283",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 3440,
        "wires": [
            [
                "55b9d639d2018f53",
                "97ce6c29b8c77f34"
            ]
        ]
    },
    {
        "id": "04db09391290a64c",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B13,B13_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B13,B13_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B13,B13_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B13,B13_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B13,B13_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B13,B13_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B13,B13_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B13,B13_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B13,B13_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B13,B13_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B13,B13_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B13,B13_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B13,B13_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B13,B13_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 3440,
        "wires": [
            [
                "7855bcb8e4b68283"
            ]
        ]
    },
    {
        "id": "97ce6c29b8c77f34",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 3500,
        "wires": [
            [
                "573a46bbdbb1af22"
            ]
        ]
    },
    {
        "id": "c29d4015187ad907",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 3500,
        "wires": [
            [
                "aff7e6c0a0ab11f5",
                "78b3be087c62dca3"
            ]
        ]
    },
    {
        "id": "3d8fce1220439932",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 3440,
        "wires": [
            [
                "6913cd91a2375689"
            ]
        ]
    },
    {
        "id": "573a46bbdbb1af22",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 3500,
        "wires": [
            [
                "ccf8b35d3dfba7a6",
                "719bed06eb3b3a24"
            ]
        ]
    },
    {
        "id": "ccf8b35d3dfba7a6",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 3500,
        "wires": [
            [
                "21e6fe18a8dba89b"
            ]
        ]
    },
    {
        "id": "21e6fe18a8dba89b",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 3500,
        "wires": [
            [
                "8110f1adf9f18134",
                "42ecec766a24f749"
            ]
        ]
    },
    {
        "id": "719bed06eb3b3a24",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "name": "debug 2529",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 3540,
        "wires": []
    },
    {
        "id": "6913cd91a2375689",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 3440,
        "wires": [
            [
                "21e6fe18a8dba89b",
                "36c5e018ccc8f413"
            ]
        ]
    },
    {
        "id": "36c5e018ccc8f413",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "name": "debug 2530",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 3440,
        "wires": []
    },
    {
        "id": "d7f59c7d975bdba6",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 3440,
        "wires": [
            [
                "3d8fce1220439932"
            ]
        ]
    },
    {
        "id": "aff7e6c0a0ab11f5",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 3500,
        "wires": []
    },
    {
        "id": "78b3be087c62dca3",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "name": "debug 2531",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 3540,
        "wires": []
    },
    {
        "id": "8110f1adf9f18134",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 3500,
        "wires": [
            [
                "c29d4015187ad907"
            ]
        ]
    },
    {
        "id": "42ecec766a24f749",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "8cc88c548dc0ef0c",
        "name": "debug 2532",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 3540,
        "wires": []
    },
    {
        "id": "f3421da7e2e22cf0",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "name": "function 32",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3700,
        "wires": [
            [
                "41877984d151c136"
            ]
        ]
    },
    {
        "id": "1d142d9509e349b9",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 3700,
        "wires": [
            [
                "dda9ac4aca3da7af"
            ]
        ]
    },
    {
        "id": "595d1d0d54edc239",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 3700,
        "wires": [
            [
                "f3421da7e2e22cf0",
                "4d7848bebc4fe130"
            ]
        ]
    },
    {
        "id": "dda9ac4aca3da7af",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B14,B14_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B14,B14_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B14,B14_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B14,B14_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B14,B14_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B14,B14_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B14,B14_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B14,B14_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B14,B14_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B14,B14_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B14,B14_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B14,B14_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B14,B14_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B14,B14_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 3700,
        "wires": [
            [
                "595d1d0d54edc239"
            ]
        ]
    },
    {
        "id": "4d7848bebc4fe130",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 3760,
        "wires": [
            [
                "f38ec58c41533c62"
            ]
        ]
    },
    {
        "id": "1ba07cba7b74cefd",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 3760,
        "wires": [
            [
                "41b04304c6cede79",
                "a11ece3484e0ac96"
            ]
        ]
    },
    {
        "id": "61900172e0eb9871",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 3700,
        "wires": [
            [
                "f6eeea30dacfd450"
            ]
        ]
    },
    {
        "id": "f38ec58c41533c62",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 3760,
        "wires": [
            [
                "da123e45a77344bb",
                "57bd2d4b2e7e3d67"
            ]
        ]
    },
    {
        "id": "da123e45a77344bb",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 3760,
        "wires": [
            [
                "19771ecef5378c93"
            ]
        ]
    },
    {
        "id": "19771ecef5378c93",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 3760,
        "wires": [
            [
                "15ba865590e47f7f",
                "398fc2893044bf9e"
            ]
        ]
    },
    {
        "id": "57bd2d4b2e7e3d67",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "name": "debug 2533",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 3800,
        "wires": []
    },
    {
        "id": "f6eeea30dacfd450",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 3700,
        "wires": [
            [
                "19771ecef5378c93",
                "acdee29c47b65039"
            ]
        ]
    },
    {
        "id": "acdee29c47b65039",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "name": "debug 2534",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 3700,
        "wires": []
    },
    {
        "id": "41877984d151c136",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 3700,
        "wires": [
            [
                "61900172e0eb9871"
            ]
        ]
    },
    {
        "id": "41b04304c6cede79",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 3760,
        "wires": []
    },
    {
        "id": "a11ece3484e0ac96",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "name": "debug 2535",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 3800,
        "wires": []
    },
    {
        "id": "15ba865590e47f7f",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 3760,
        "wires": [
            [
                "1ba07cba7b74cefd"
            ]
        ]
    },
    {
        "id": "398fc2893044bf9e",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "2902cf6a43a23eb5",
        "name": "debug 2536",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 3800,
        "wires": []
    },
    {
        "id": "c6ede6ac01df3401",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "name": "function 33",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 2920,
        "wires": [
            [
                "4ce79766f72ac11d"
            ]
        ]
    },
    {
        "id": "5b6486fbd4a22c5a",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 2920,
        "wires": [
            [
                "c4086795a6c08cfa"
            ]
        ]
    },
    {
        "id": "20cc8b75a51f1008",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 2920,
        "wires": [
            [
                "c6ede6ac01df3401",
                "1b241ce5cd2275cf"
            ]
        ]
    },
    {
        "id": "c4086795a6c08cfa",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B11,B11_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B11,B11_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B11,B11_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B11,B11_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B11,B11_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B11,B11_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B11,B11_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B11,B11_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B11,B11_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B11,B11_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B11,B11_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B11,B11_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B11,B11_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B11,B11_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 2920,
        "wires": [
            [
                "20cc8b75a51f1008"
            ]
        ]
    },
    {
        "id": "1b241ce5cd2275cf",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 2980,
        "wires": [
            [
                "57c03c08dc36510c"
            ]
        ]
    },
    {
        "id": "be554fcb31c82e99",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 2980,
        "wires": [
            [
                "c967c70e85e5c8ec",
                "cb88124fd6ef0dac"
            ]
        ]
    },
    {
        "id": "3426e77b4334316f",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 2920,
        "wires": [
            [
                "7acdc6bbd4db4b99"
            ]
        ]
    },
    {
        "id": "57c03c08dc36510c",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 2980,
        "wires": [
            [
                "1010923c6d727ba0",
                "920b077c5db2d9d6"
            ]
        ]
    },
    {
        "id": "1010923c6d727ba0",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 2980,
        "wires": [
            [
                "80deff43d2867c1c"
            ]
        ]
    },
    {
        "id": "80deff43d2867c1c",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 2980,
        "wires": [
            [
                "faa67365af17034c",
                "4641daeba99bba29"
            ]
        ]
    },
    {
        "id": "920b077c5db2d9d6",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "name": "debug 2537",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 3020,
        "wires": []
    },
    {
        "id": "7acdc6bbd4db4b99",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 2920,
        "wires": [
            [
                "80deff43d2867c1c",
                "ebc29ae7a9898db5"
            ]
        ]
    },
    {
        "id": "ebc29ae7a9898db5",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "name": "debug 2538",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 2920,
        "wires": []
    },
    {
        "id": "4ce79766f72ac11d",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 2920,
        "wires": [
            [
                "3426e77b4334316f"
            ]
        ]
    },
    {
        "id": "c967c70e85e5c8ec",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 2980,
        "wires": []
    },
    {
        "id": "cb88124fd6ef0dac",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "name": "debug 2539",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 3020,
        "wires": []
    },
    {
        "id": "faa67365af17034c",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 2980,
        "wires": [
            [
                "be554fcb31c82e99"
            ]
        ]
    },
    {
        "id": "4641daeba99bba29",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "b6e586115dab6ac8",
        "name": "debug 2540",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 3020,
        "wires": []
    },
    {
        "id": "792e295a737d62c3",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "name": "function 34",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 3180,
        "wires": [
            [
                "381ff485e8878663"
            ]
        ]
    },
    {
        "id": "8e9cdc54a6dea09c",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 3180,
        "wires": [
            [
                "a72c42e8de6514aa"
            ]
        ]
    },
    {
        "id": "1bcf17622142349d",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 3180,
        "wires": [
            [
                "792e295a737d62c3",
                "37830b7186df3c87"
            ]
        ]
    },
    {
        "id": "a72c42e8de6514aa",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B12,B12_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B12,B12_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B12,B12_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B12,B12_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B12,B12_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B12,B12_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B12,B12_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B12,B12_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B12,B12_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B12,B12_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B12,B12_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B12,B12_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B12,B12_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B12,B12_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 3180,
        "wires": [
            [
                "1bcf17622142349d"
            ]
        ]
    },
    {
        "id": "37830b7186df3c87",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 3240,
        "wires": [
            [
                "eb3d985d8c5f6253"
            ]
        ]
    },
    {
        "id": "60fe33f254b70e44",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 3240,
        "wires": [
            [
                "0cb6b3f85f07446f",
                "97a4b8cd50e818bd"
            ]
        ]
    },
    {
        "id": "85127280ad5e7be6",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 3180,
        "wires": [
            [
                "c73b891e7f61b43a"
            ]
        ]
    },
    {
        "id": "eb3d985d8c5f6253",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 3240,
        "wires": [
            [
                "efb5010e6e897ade",
                "4a8114af375535b2"
            ]
        ]
    },
    {
        "id": "efb5010e6e897ade",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 3240,
        "wires": [
            [
                "34187721e218daa4"
            ]
        ]
    },
    {
        "id": "34187721e218daa4",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 3240,
        "wires": [
            [
                "26451aad6e03cc06",
                "1a21c18845bb4d39"
            ]
        ]
    },
    {
        "id": "4a8114af375535b2",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "name": "debug 2541",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 3280,
        "wires": []
    },
    {
        "id": "c73b891e7f61b43a",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 3180,
        "wires": [
            [
                "34187721e218daa4",
                "c0b6863642e1a2c1"
            ]
        ]
    },
    {
        "id": "c0b6863642e1a2c1",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "name": "debug 2542",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 3180,
        "wires": []
    },
    {
        "id": "381ff485e8878663",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 3180,
        "wires": [
            [
                "85127280ad5e7be6"
            ]
        ]
    },
    {
        "id": "0cb6b3f85f07446f",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 3240,
        "wires": []
    },
    {
        "id": "97a4b8cd50e818bd",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "name": "debug 2543",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 3280,
        "wires": []
    },
    {
        "id": "26451aad6e03cc06",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 3240,
        "wires": [
            [
                "60fe33f254b70e44"
            ]
        ]
    },
    {
        "id": "1a21c18845bb4d39",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "1779146863e5e870",
        "name": "debug 2544",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 3280,
        "wires": []
    },
    {
        "id": "4b34faf7af1aa9c1",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "name": "function 35",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 3440,
        "wires": [
            [
                "d063a1970b855e90"
            ]
        ]
    },
    {
        "id": "dcc5f66b08f25597",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 3440,
        "wires": [
            [
                "be285964159c3aea"
            ]
        ]
    },
    {
        "id": "93f25e0e3d4c1dda",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 3440,
        "wires": [
            [
                "4b34faf7af1aa9c1",
                "29091654843ffc30"
            ]
        ]
    },
    {
        "id": "be285964159c3aea",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B13,B13_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B13,B13_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B13,B13_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B13,B13_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B13,B13_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B13,B13_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B13,B13_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B13,B13_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B13,B13_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B13,B13_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B13,B13_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B13,B13_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B13,B13_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B13,B13_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 3440,
        "wires": [
            [
                "93f25e0e3d4c1dda"
            ]
        ]
    },
    {
        "id": "29091654843ffc30",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 3500,
        "wires": [
            [
                "bb8cc69ac38cb146"
            ]
        ]
    },
    {
        "id": "b13d22cfae2aefe4",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 3500,
        "wires": [
            [
                "6d1ff6b713dda002",
                "b5c0cc9b653f1ec5"
            ]
        ]
    },
    {
        "id": "e3892ac2c245bec6",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 3440,
        "wires": [
            [
                "99c48ecf0b94b9cd"
            ]
        ]
    },
    {
        "id": "bb8cc69ac38cb146",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 3500,
        "wires": [
            [
                "297465d88d859656",
                "b204a8bd7fde5682"
            ]
        ]
    },
    {
        "id": "297465d88d859656",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 3500,
        "wires": [
            [
                "73c2482a76967aef"
            ]
        ]
    },
    {
        "id": "73c2482a76967aef",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 3500,
        "wires": [
            [
                "ad62f299555b88d0",
                "51b2588ad88b5a5b"
            ]
        ]
    },
    {
        "id": "b204a8bd7fde5682",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "name": "debug 2545",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 3540,
        "wires": []
    },
    {
        "id": "99c48ecf0b94b9cd",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 3440,
        "wires": [
            [
                "73c2482a76967aef",
                "68b24706976a77e7"
            ]
        ]
    },
    {
        "id": "68b24706976a77e7",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "name": "debug 2546",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 3440,
        "wires": []
    },
    {
        "id": "d063a1970b855e90",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 3440,
        "wires": [
            [
                "e3892ac2c245bec6"
            ]
        ]
    },
    {
        "id": "6d1ff6b713dda002",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 3500,
        "wires": []
    },
    {
        "id": "b5c0cc9b653f1ec5",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "name": "debug 2547",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 3540,
        "wires": []
    },
    {
        "id": "ad62f299555b88d0",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 3500,
        "wires": [
            [
                "b13d22cfae2aefe4"
            ]
        ]
    },
    {
        "id": "51b2588ad88b5a5b",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "398635643efa7b42",
        "name": "debug 2548",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 3540,
        "wires": []
    },
    {
        "id": "2977a2254415558e",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "name": "function 36",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-1m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \\\"'+block+'\\\")|>filter(fn:(r)=>r[\"d\"]== \\\"'+device+'\\\")|>filter(fn:(r)=>r[\"f\"]== \\\"'+field+'\\\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>yield(name:\"last\")'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 3700,
        "wires": [
            [
                "f561aa06163516b4"
            ]
        ]
    },
    {
        "id": "3db6e7cb23a55678",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 3700,
        "wires": [
            [
                "97b196834f7a20e2"
            ]
        ]
    },
    {
        "id": "8b5a7bb4c688f167",
        "type": "csv",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 3700,
        "wires": [
            [
                "2977a2254415558e",
                "019824c50d1c2cab"
            ]
        ]
    },
    {
        "id": "97b196834f7a20e2",
        "type": "template",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B14,B14_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B14,B14_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B14,B14_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B14,B14_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B14,B14_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B14,B14_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B14,B14_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B14,B14_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B14,B14_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B14,B14_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B14,B14_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B14,B14_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B14,B14_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B14,B14_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 3700,
        "wires": [
            [
                "8b5a7bb4c688f167"
            ]
        ]
    },
    {
        "id": "019824c50d1c2cab",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 3760,
        "wires": [
            [
                "cd285eb3d216439f"
            ]
        ]
    },
    {
        "id": "7719f81750340840",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 3760,
        "wires": [
            [
                "224f404fe04a09cb",
                "6aa7d26c651febcc"
            ]
        ]
    },
    {
        "id": "b255efb04b65a00d",
        "type": "join",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 3700,
        "wires": [
            [
                "a932c0fc8c57e00f"
            ]
        ]
    },
    {
        "id": "cd285eb3d216439f",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 3760,
        "wires": [
            [
                "a85e89abd1e36b5d",
                "9f9d07daf3105e03"
            ]
        ]
    },
    {
        "id": "a85e89abd1e36b5d",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 3760,
        "wires": [
            [
                "06ecbacebca00096"
            ]
        ]
    },
    {
        "id": "06ecbacebca00096",
        "type": "function",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 3760,
        "wires": [
            [
                "28c228906cdf667e",
                "8b233734d13715c7"
            ]
        ]
    },
    {
        "id": "9f9d07daf3105e03",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "name": "debug 2549",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 3800,
        "wires": []
    },
    {
        "id": "a932c0fc8c57e00f",
        "type": "change",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 3700,
        "wires": [
            [
                "06ecbacebca00096",
                "eec960963d4bced5"
            ]
        ]
    },
    {
        "id": "eec960963d4bced5",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "name": "debug 2550",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 3700,
        "wires": []
    },
    {
        "id": "f561aa06163516b4",
        "type": "influxdb in",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 3700,
        "wires": [
            [
                "b255efb04b65a00d"
            ]
        ]
    },
    {
        "id": "224f404fe04a09cb",
        "type": "influxdb batch",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 3760,
        "wires": []
    },
    {
        "id": "6aa7d26c651febcc",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "name": "debug 2551",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 3800,
        "wires": []
    },
    {
        "id": "28c228906cdf667e",
        "type": "delay",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 3760,
        "wires": [
            [
                "7719f81750340840"
            ]
        ]
    },
    {
        "id": "8b233734d13715c7",
        "type": "debug",
        "z": "289f75d22904c270",
        "g": "e1b698cedf15233f",
        "name": "debug 2552",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 3800,
        "wires": []
    },
    {
        "id": "54db520610340f4a",
        "type": "debug",
        "z": "289f75d22904c270",
        "name": "debug 2557",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 100,
        "wires": []
    },
    {
        "id": "3a37e5521b89ca21",
        "type": "inject",
        "z": "289f75d22904c270",
        "g": "86416c6eee9a17b3",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 250,
        "y": 240,
        "wires": [
            [
                "663522c9b11a5aa9"
            ]
        ]
    },
    {
        "id": "e45e7ff7976df1d6",
        "type": "function",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "name": "function 37",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 240,
        "wires": [
            [
                "667d3c6325c45351"
            ]
        ]
    },
    {
        "id": "4059e1b6aad3e1f0",
        "type": "inject",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 200,
        "y": 240,
        "wires": [
            [
                "e662771e5c28fd5b"
            ]
        ]
    },
    {
        "id": "4be09d1b2306aa46",
        "type": "csv",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 540,
        "y": 240,
        "wires": [
            [
                "e45e7ff7976df1d6",
                "a5e5818770f72a1c"
            ]
        ]
    },
    {
        "id": "e662771e5c28fd5b",
        "type": "template",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u,mf\n1,CR,CR_EM01,EM01,EM01,EM,PAC,PAC,Server8882,8882,1,iplon_test,0,new,MW,0.001\n2,CR,CR_EM01,EM01,EM01,EM,QAC,QAC,Server8882,8882,1,iplon_test,,,MVAr,0.00001\n3,CR,CR_EM01,EM01,EM01,EM,PF,PF,Server8882,8882,1,iplon_test,,,,0.001\n4,CR,CR_EM01,EM01,EM01,EM,UAC12,UAC12,Server8882,8882,1,iplon_test,,,kV,0.001\n5,CR,CR_EM01,EM01,EM01,EM,UAC23,UAC23,Server8882,8882,1,iplon_test,,,kV,0.001\n6,CR,CR_EM01,EM01,EM01,EM,UAC31,UAC31,Server8882,8882,1,iplon_test,,,kV,0.001\n7,CR,CR_EM01,EM01,EM01,EM,FAC,FAC,Server8882,8882,1,iplon_test,,,Hz,0.01\n8,CR,CR_EM01,EM01,EM01,EM,IAC1,IAC1,Server8882,8882,1,iplon_test,,,A,1\n9,CR,CR_EM01,EM01,EM01,EM,IAC2,IAC2,Server8882,8882,1,iplon_test,,,A,1\n10,CR,CR_EM01,EM01,EM01,EM,IAC3,IAC3,Server8882,8882,1,iplon_test,,,A,1",
        "output": "str",
        "x": 390,
        "y": 240,
        "wires": [
            [
                "4be09d1b2306aa46"
            ]
        ]
    },
    {
        "id": "a5e5818770f72a1c",
        "type": "join",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "10",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 660,
        "y": 300,
        "wires": [
            [
                "d4c17d1fcd991109"
            ]
        ]
    },
    {
        "id": "6b49464bb670f241",
        "type": "function",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 300,
        "wires": [
            [
                "430086946f54239a",
                "81fec1626bdad468"
            ]
        ]
    },
    {
        "id": "0cd8da4173f68b13",
        "type": "join",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "10",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1080,
        "y": 240,
        "wires": [
            [
                "880ff98a7698fb85"
            ]
        ]
    },
    {
        "id": "d4c17d1fcd991109",
        "type": "function",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 300,
        "wires": [
            [
                "30b27fa4e79b6a6c",
                "519a2663273b400e"
            ]
        ]
    },
    {
        "id": "30b27fa4e79b6a6c",
        "type": "change",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 300,
        "wires": [
            [
                "04368354e7908190"
            ]
        ]
    },
    {
        "id": "04368354e7908190",
        "type": "function",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 300,
        "wires": [
            [
                "4ac35fc64e122951",
                "4666dd0d7df91edc"
            ]
        ]
    },
    {
        "id": "519a2663273b400e",
        "type": "debug",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "name": "debug 2553",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 340,
        "wires": []
    },
    {
        "id": "880ff98a7698fb85",
        "type": "change",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 240,
        "wires": [
            [
                "04368354e7908190",
                "969254ad191890bd"
            ]
        ]
    },
    {
        "id": "969254ad191890bd",
        "type": "debug",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "name": "debug 2554",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 240,
        "wires": []
    },
    {
        "id": "667d3c6325c45351",
        "type": "influxdb in",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 900,
        "y": 240,
        "wires": [
            [
                "0cd8da4173f68b13"
            ]
        ]
    },
    {
        "id": "430086946f54239a",
        "type": "influxdb batch",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1770,
        "y": 300,
        "wires": []
    },
    {
        "id": "81fec1626bdad468",
        "type": "debug",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "name": "debug 2555",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 340,
        "wires": []
    },
    {
        "id": "4ac35fc64e122951",
        "type": "delay",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1430,
        "y": 300,
        "wires": [
            [
                "6b49464bb670f241"
            ]
        ]
    },
    {
        "id": "4666dd0d7df91edc",
        "type": "debug",
        "z": "083ef892380dfa86",
        "g": "c8286b87f807512d",
        "name": "debug 2556",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 340,
        "wires": []
    },
    {
        "id": "c53eddc0180ffccd",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "name": "function 8",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 240,
        "wires": [
            [
                "55a223fbc981d9cf"
            ]
        ]
    },
    {
        "id": "47a0362a87a7e98c",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 550,
        "y": 240,
        "wires": [
            [
                "c53eddc0180ffccd",
                "43762f7e9248cfc6"
            ]
        ]
    },
    {
        "id": "bf3b03fa1efcaf54",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B01,B01_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B01,B01_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B01,B01_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B01,B01_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B01,B01_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B01,B01_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B01,B01_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B01,B01_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B01,B01_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B01,B01_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B01,B01_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B01,B01_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B01,B01_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B01,B01_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 400,
        "y": 240,
        "wires": [
            [
                "47a0362a87a7e98c"
            ]
        ]
    },
    {
        "id": "43762f7e9248cfc6",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 670,
        "y": 300,
        "wires": [
            [
                "212b076681213d32"
            ]
        ]
    },
    {
        "id": "56e25cdc3f3c2637",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1170,
        "y": 240,
        "wires": [
            [
                "9057ca438977e6b8"
            ]
        ]
    },
    {
        "id": "212b076681213d32",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 300,
        "wires": [
            [
                "8345fee165ae85fe",
                "fec4080ec6ba377a"
            ]
        ]
    },
    {
        "id": "8345fee165ae85fe",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 300,
        "wires": [
            [
                "fa12ba5e8c6e9171"
            ]
        ]
    },
    {
        "id": "fa12ba5e8c6e9171",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 300,
        "wires": [
            [
                "912ab04701cc8429",
                "66102ca0abe6fadd"
            ]
        ]
    },
    {
        "id": "fec4080ec6ba377a",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "name": "debug 2437",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 340,
        "wires": []
    },
    {
        "id": "9057ca438977e6b8",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 240,
        "wires": [
            [
                "fa12ba5e8c6e9171",
                "7a6f7bb927c98396"
            ]
        ]
    },
    {
        "id": "7a6f7bb927c98396",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "name": "debug 2438",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1690,
        "y": 240,
        "wires": []
    },
    {
        "id": "55a223fbc981d9cf",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 910,
        "y": 240,
        "wires": [
            [
                "56e25cdc3f3c2637",
                "df8e7d73fb906c64"
            ]
        ]
    },
    {
        "id": "230e9a6b46e6f9b9",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1780,
        "y": 300,
        "wires": []
    },
    {
        "id": "335e4cac628f56f7",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "name": "debug 2439",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 340,
        "wires": []
    },
    {
        "id": "912ab04701cc8429",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1440,
        "y": 300,
        "wires": [
            [
                "ad4f543892f8753e"
            ]
        ]
    },
    {
        "id": "66102ca0abe6fadd",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "name": "debug 2440",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 340,
        "wires": []
    },
    {
        "id": "ad4f543892f8753e",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length; i++) {\n    for (var j = 0; j < msg.payload.client.length; j++) {\n\n        for (var k = 0; k < msg.payload.client[j].length - 1; k++) {\n\n            var field = msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f\n\n            if (field == client) {\n                var time = msg.payload.client[j][k]._time\n                time = new Date(time).getTime();\n                var val = msg.payload.client[j][k]._value\n\n                if (!isNaN(val)) {\n                    var obj = {\n                        \"measurement\": \"v\",\n                        \"fields\": {\n                            \"qu\": 0,\n                            \"text\": \"\",\n                            \"value\": val\n                        },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                    }\n\n                    array.push(obj)\n                }\n            }\n        }\n\n    }\n}\nif (array.length != 0) {\n    msg.payload = array\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 300,
        "wires": [
            [
                "230e9a6b46e6f9b9",
                "335e4cac628f56f7"
            ]
        ]
    },
    {
        "id": "6a7c05f7a0ab2f42",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "name": "function 9",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2640,
        "y": 200,
        "wires": [
            [
                "456ba412490113c1"
            ]
        ]
    },
    {
        "id": "525b5f296e84b597",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2150,
        "y": 200,
        "wires": [
            [
                "074af537df189ee1"
            ]
        ]
    },
    {
        "id": "ece2105cac7dd3a7",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2490,
        "y": 200,
        "wires": [
            [
                "6a7c05f7a0ab2f42",
                "f212f964c72abc75"
            ]
        ]
    },
    {
        "id": "074af537df189ee1",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B01,B01_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B01,B01_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B01,B01_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B01,B01_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B01,B01_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B01,B01_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B01,B01_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B01,B01_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B01,B01_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B01,B01_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B01,B01_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B01,B01_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B01,B01_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B01,B01_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2340,
        "y": 200,
        "wires": [
            [
                "ece2105cac7dd3a7"
            ]
        ]
    },
    {
        "id": "f212f964c72abc75",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2610,
        "y": 260,
        "wires": [
            [
                "33c1fbf5b4ddb7d7"
            ]
        ]
    },
    {
        "id": "dec8c9432a10e60a",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 260,
        "wires": [
            [
                "46d05ffcf0910c57",
                "8825b4315cb10f03"
            ]
        ]
    },
    {
        "id": "ace9efd01ad52765",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3030,
        "y": 200,
        "wires": [
            [
                "e9f1429211640c4c"
            ]
        ]
    },
    {
        "id": "33c1fbf5b4ddb7d7",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2810,
        "y": 260,
        "wires": [
            [
                "b8d1a7e2a271db9b",
                "3d0168addc534bb3"
            ]
        ]
    },
    {
        "id": "b8d1a7e2a271db9b",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3010,
        "y": 260,
        "wires": [
            [
                "f19d1b5b2bdded4e"
            ]
        ]
    },
    {
        "id": "f19d1b5b2bdded4e",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3200,
        "y": 260,
        "wires": [
            [
                "9d9df4e2c593e8ad",
                "65c8e3d43f66e86c"
            ]
        ]
    },
    {
        "id": "3d0168addc534bb3",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "name": "debug 2441",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3030,
        "y": 300,
        "wires": []
    },
    {
        "id": "e9f1429211640c4c",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 200,
        "wires": [
            [
                "f19d1b5b2bdded4e",
                "beeddfbfa9e94371"
            ]
        ]
    },
    {
        "id": "beeddfbfa9e94371",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "name": "debug 2442",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3630,
        "y": 200,
        "wires": []
    },
    {
        "id": "456ba412490113c1",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2850,
        "y": 200,
        "wires": [
            [
                "ace9efd01ad52765"
            ]
        ]
    },
    {
        "id": "46d05ffcf0910c57",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3720,
        "y": 260,
        "wires": []
    },
    {
        "id": "8825b4315cb10f03",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "name": "debug 2443",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3590,
        "y": 300,
        "wires": []
    },
    {
        "id": "9d9df4e2c593e8ad",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3380,
        "y": 260,
        "wires": [
            [
                "dec8c9432a10e60a"
            ]
        ]
    },
    {
        "id": "65c8e3d43f66e86c",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "29b9dd85ba1c5c7c",
        "name": "debug 2444",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3270,
        "y": 300,
        "wires": []
    },
    {
        "id": "7e640368f4e7ca00",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "name": "function 11",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 500,
        "wires": [
            [
                "965e2aaad6cdb8e7"
            ]
        ]
    },
    {
        "id": "1328b7793296b134",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 500,
        "wires": [
            [
                "02991445204ac01c"
            ]
        ]
    },
    {
        "id": "7d2411d16164fede",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 500,
        "wires": [
            [
                "7e640368f4e7ca00",
                "471ec289b77e2524"
            ]
        ]
    },
    {
        "id": "02991445204ac01c",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B02,B02_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B02,B02_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B02,B02_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B02,B02_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B02,B02_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B02,B02_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B02,B02_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B02,B02_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B02,B02_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B02,B02_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B02,B02_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B02,B02_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B02,B02_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B02,B02_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 500,
        "wires": [
            [
                "7d2411d16164fede"
            ]
        ]
    },
    {
        "id": "471ec289b77e2524",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 560,
        "wires": [
            [
                "c4b7ea22171ce872"
            ]
        ]
    },
    {
        "id": "161ab226f47f876f",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 560,
        "wires": [
            [
                "1bde784161a63291",
                "a19037f73279e9b6"
            ]
        ]
    },
    {
        "id": "c61f0d82a1f69220",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 500,
        "wires": [
            [
                "f59e1c20fe004568"
            ]
        ]
    },
    {
        "id": "c4b7ea22171ce872",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 560,
        "wires": [
            [
                "a9a4636af7164e0f",
                "db3caf3c26eca37e"
            ]
        ]
    },
    {
        "id": "a9a4636af7164e0f",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 560,
        "wires": [
            [
                "a586e2a8f477211a"
            ]
        ]
    },
    {
        "id": "a586e2a8f477211a",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 560,
        "wires": [
            [
                "28f05bfc6d2a0aad",
                "254a23aa58c1a6fa"
            ]
        ]
    },
    {
        "id": "db3caf3c26eca37e",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "name": "debug 2449",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 600,
        "wires": []
    },
    {
        "id": "f59e1c20fe004568",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 500,
        "wires": [
            [
                "a586e2a8f477211a",
                "436cb609509903e1"
            ]
        ]
    },
    {
        "id": "436cb609509903e1",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "name": "debug 2450",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 500,
        "wires": []
    },
    {
        "id": "965e2aaad6cdb8e7",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 500,
        "wires": [
            [
                "c61f0d82a1f69220"
            ]
        ]
    },
    {
        "id": "1bde784161a63291",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 560,
        "wires": []
    },
    {
        "id": "a19037f73279e9b6",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "name": "debug 2451",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 600,
        "wires": []
    },
    {
        "id": "28f05bfc6d2a0aad",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 560,
        "wires": [
            [
                "161ab226f47f876f"
            ]
        ]
    },
    {
        "id": "254a23aa58c1a6fa",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "e4b73ec7fe4b2715",
        "name": "debug 2452",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 600,
        "wires": []
    },
    {
        "id": "0b3285a55b4d9edc",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "name": "function 12",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 500,
        "wires": [
            [
                "5ebcf09ab7552e21"
            ]
        ]
    },
    {
        "id": "1876e46d1b6b8297",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 500,
        "wires": [
            [
                "bd6f3f08b7c66749"
            ]
        ]
    },
    {
        "id": "7c291b68ddd0b130",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 500,
        "wires": [
            [
                "0b3285a55b4d9edc",
                "eaef0538ebdb24a8"
            ]
        ]
    },
    {
        "id": "bd6f3f08b7c66749",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B02,B02_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B02,B02_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B02,B02_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B02,B02_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B02,B02_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B02,B02_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B02,B02_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B02,B02_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B02,B02_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B02,B02_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B02,B02_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B02,B02_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B02,B02_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B02,B02_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 500,
        "wires": [
            [
                "7c291b68ddd0b130"
            ]
        ]
    },
    {
        "id": "eaef0538ebdb24a8",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 560,
        "wires": [
            [
                "78eb7d617306917e"
            ]
        ]
    },
    {
        "id": "24ff2d9e0899b3af",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 560,
        "wires": [
            [
                "c07083f0fc28f113",
                "fca4d95b32959e19"
            ]
        ]
    },
    {
        "id": "18298042ad9ca546",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 500,
        "wires": [
            [
                "6adc9461db8122cf"
            ]
        ]
    },
    {
        "id": "78eb7d617306917e",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 560,
        "wires": [
            [
                "d7f35e6e8ecd0534",
                "c6f6707efcef3df1"
            ]
        ]
    },
    {
        "id": "d7f35e6e8ecd0534",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 560,
        "wires": [
            [
                "57f4caced6b925d0"
            ]
        ]
    },
    {
        "id": "57f4caced6b925d0",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 560,
        "wires": [
            [
                "c7762fc6f9285a86",
                "7b674c4e025a92bc"
            ]
        ]
    },
    {
        "id": "c6f6707efcef3df1",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "name": "debug 2453",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 600,
        "wires": []
    },
    {
        "id": "6adc9461db8122cf",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 500,
        "wires": [
            [
                "57f4caced6b925d0",
                "9660103f113555aa"
            ]
        ]
    },
    {
        "id": "9660103f113555aa",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "name": "debug 2454",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 500,
        "wires": []
    },
    {
        "id": "5ebcf09ab7552e21",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 500,
        "wires": [
            [
                "18298042ad9ca546"
            ]
        ]
    },
    {
        "id": "c07083f0fc28f113",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 560,
        "wires": []
    },
    {
        "id": "fca4d95b32959e19",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "name": "debug 2455",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 600,
        "wires": []
    },
    {
        "id": "c7762fc6f9285a86",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 560,
        "wires": [
            [
                "24ff2d9e0899b3af"
            ]
        ]
    },
    {
        "id": "7b674c4e025a92bc",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "2694b9b19f707930",
        "name": "debug 2456",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 600,
        "wires": []
    },
    {
        "id": "51d02bfb3b796e71",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "name": "function 13",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 780,
        "wires": [
            [
                "7e280a4af0f5c287"
            ]
        ]
    },
    {
        "id": "461083e4b98a0fee",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 780,
        "wires": [
            [
                "f8a0199fc4d66012"
            ]
        ]
    },
    {
        "id": "32d333d0f827ea71",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 780,
        "wires": [
            [
                "51d02bfb3b796e71",
                "f52e4f2a27c6274c"
            ]
        ]
    },
    {
        "id": "f8a0199fc4d66012",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B03,B03_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B03,B03_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B03,B03_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B03,B03_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B03,B03_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B03,B03_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B03,B03_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B03,B03_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B03,B03_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B03,B03_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B03,B03_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B03,B03_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B03,B03_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B03,B03_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 780,
        "wires": [
            [
                "32d333d0f827ea71"
            ]
        ]
    },
    {
        "id": "f52e4f2a27c6274c",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 840,
        "wires": [
            [
                "ce2823f70626ad69"
            ]
        ]
    },
    {
        "id": "f538e17fe1e313b7",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 840,
        "wires": [
            [
                "6843b4aaba1f0dd9",
                "b22f722a8710a3fd"
            ]
        ]
    },
    {
        "id": "258439a3ab087066",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 780,
        "wires": [
            [
                "1b7af73404b3fbc9"
            ]
        ]
    },
    {
        "id": "ce2823f70626ad69",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 840,
        "wires": [
            [
                "20e00d5344ff85b3",
                "de887157b6c1771a"
            ]
        ]
    },
    {
        "id": "20e00d5344ff85b3",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 840,
        "wires": [
            [
                "610fa6c0f47240e4"
            ]
        ]
    },
    {
        "id": "610fa6c0f47240e4",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 840,
        "wires": [
            [
                "b2a0295a58e7933f",
                "93354b8a38a2e3ea"
            ]
        ]
    },
    {
        "id": "de887157b6c1771a",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "name": "debug 2457",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 880,
        "wires": []
    },
    {
        "id": "1b7af73404b3fbc9",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 780,
        "wires": [
            [
                "610fa6c0f47240e4",
                "b2e85c659199806d"
            ]
        ]
    },
    {
        "id": "b2e85c659199806d",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "name": "debug 2458",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 780,
        "wires": []
    },
    {
        "id": "7e280a4af0f5c287",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 780,
        "wires": [
            [
                "258439a3ab087066"
            ]
        ]
    },
    {
        "id": "6843b4aaba1f0dd9",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 840,
        "wires": []
    },
    {
        "id": "b22f722a8710a3fd",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "name": "debug 2459",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 880,
        "wires": []
    },
    {
        "id": "b2a0295a58e7933f",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 840,
        "wires": [
            [
                "f538e17fe1e313b7"
            ]
        ]
    },
    {
        "id": "93354b8a38a2e3ea",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "2c2f3612f1dd190a",
        "name": "debug 2460",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 880,
        "wires": []
    },
    {
        "id": "11edf91376937f20",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "name": "function 14",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 780,
        "wires": [
            [
                "88d6e33a258535ba"
            ]
        ]
    },
    {
        "id": "cb483d5c4aaac286",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 780,
        "wires": [
            [
                "1711f998e24dfe7b"
            ]
        ]
    },
    {
        "id": "fa2b2568ec86a96f",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 780,
        "wires": [
            [
                "11edf91376937f20",
                "1d2720aedee9a1a3"
            ]
        ]
    },
    {
        "id": "1711f998e24dfe7b",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B03,B03_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B03,B03_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B03,B03_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B03,B03_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B03,B03_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B03,B03_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B03,B03_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B03,B03_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B03,B03_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B03,B03_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B03,B03_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B03,B03_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B03,B03_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B03,B03_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 780,
        "wires": [
            [
                "fa2b2568ec86a96f"
            ]
        ]
    },
    {
        "id": "1d2720aedee9a1a3",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 840,
        "wires": [
            [
                "93c2934ec32e5ebc"
            ]
        ]
    },
    {
        "id": "ed25fb12cfb9acfe",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 840,
        "wires": [
            [
                "94d0ea3a5ba62f5c",
                "0674e8643f04eb7a"
            ]
        ]
    },
    {
        "id": "df41923a67b24452",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 780,
        "wires": [
            [
                "1bce7ef3a77625e9"
            ]
        ]
    },
    {
        "id": "93c2934ec32e5ebc",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 840,
        "wires": [
            [
                "a95f4b560a536432",
                "f29b51d4e8956865"
            ]
        ]
    },
    {
        "id": "a95f4b560a536432",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 840,
        "wires": [
            [
                "b51ad9456126d306"
            ]
        ]
    },
    {
        "id": "b51ad9456126d306",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 840,
        "wires": [
            [
                "fbcac71f0c457234",
                "914583796d628a11"
            ]
        ]
    },
    {
        "id": "f29b51d4e8956865",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "name": "debug 2461",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 880,
        "wires": []
    },
    {
        "id": "1bce7ef3a77625e9",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 780,
        "wires": [
            [
                "b51ad9456126d306",
                "97eab1db7da6e7eb"
            ]
        ]
    },
    {
        "id": "97eab1db7da6e7eb",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "name": "debug 2462",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 780,
        "wires": []
    },
    {
        "id": "88d6e33a258535ba",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 780,
        "wires": [
            [
                "df41923a67b24452"
            ]
        ]
    },
    {
        "id": "94d0ea3a5ba62f5c",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 840,
        "wires": []
    },
    {
        "id": "0674e8643f04eb7a",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "name": "debug 2463",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 880,
        "wires": []
    },
    {
        "id": "fbcac71f0c457234",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 840,
        "wires": [
            [
                "ed25fb12cfb9acfe"
            ]
        ]
    },
    {
        "id": "914583796d628a11",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "905835c414715862",
        "name": "debug 2464",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 880,
        "wires": []
    },
    {
        "id": "4d7a387f097a42d2",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "name": "function 15",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1060,
        "wires": [
            [
                "8f90979b2bc92577"
            ]
        ]
    },
    {
        "id": "a6601bfe9b098bb1",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 1060,
        "wires": [
            [
                "a9d21b5634b57f0f"
            ]
        ]
    },
    {
        "id": "9c90aa1ee8de4ebd",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 1060,
        "wires": [
            [
                "4d7a387f097a42d2",
                "bf8ce05b7faaf9e9"
            ]
        ]
    },
    {
        "id": "a9d21b5634b57f0f",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B04,B04_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B04,B04_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B04,B04_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B04,B04_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B04,B04_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B04,B04_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B04,B04_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B04,B04_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B04,B04_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B04,B04_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B04,B04_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B04,B04_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B04,B04_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B04,B04_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 1060,
        "wires": [
            [
                "9c90aa1ee8de4ebd"
            ]
        ]
    },
    {
        "id": "bf8ce05b7faaf9e9",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 1120,
        "wires": [
            [
                "06c421d49d72ef34"
            ]
        ]
    },
    {
        "id": "79ecbc807d476d14",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1120,
        "wires": [
            [
                "9928a5cec8123a62",
                "183d135d367f5395"
            ]
        ]
    },
    {
        "id": "eda27881e168b7d4",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 1060,
        "wires": [
            [
                "1e0865e5282f2781"
            ]
        ]
    },
    {
        "id": "06c421d49d72ef34",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1120,
        "wires": [
            [
                "b70a77e297d6654f",
                "65edd3b5e223579c"
            ]
        ]
    },
    {
        "id": "b70a77e297d6654f",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1120,
        "wires": [
            [
                "0d251572e94a30f5"
            ]
        ]
    },
    {
        "id": "0d251572e94a30f5",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1120,
        "wires": [
            [
                "cfefa743f0c898c8",
                "8177b293b0f3663e"
            ]
        ]
    },
    {
        "id": "65edd3b5e223579c",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "name": "debug 2465",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1160,
        "wires": []
    },
    {
        "id": "1e0865e5282f2781",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1060,
        "wires": [
            [
                "0d251572e94a30f5",
                "07ef396c6f6f3f86"
            ]
        ]
    },
    {
        "id": "07ef396c6f6f3f86",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "name": "debug 2466",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 1060,
        "wires": []
    },
    {
        "id": "8f90979b2bc92577",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 1060,
        "wires": [
            [
                "eda27881e168b7d4"
            ]
        ]
    },
    {
        "id": "9928a5cec8123a62",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 1120,
        "wires": []
    },
    {
        "id": "183d135d367f5395",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "name": "debug 2467",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 1160,
        "wires": []
    },
    {
        "id": "cfefa743f0c898c8",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 1120,
        "wires": [
            [
                "79ecbc807d476d14"
            ]
        ]
    },
    {
        "id": "8177b293b0f3663e",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "0a3c10ba1b70cefe",
        "name": "debug 2468",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1160,
        "wires": []
    },
    {
        "id": "fbe0489ccee98f21",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "name": "function 16",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 1060,
        "wires": [
            [
                "f8a7373ed005c0c1"
            ]
        ]
    },
    {
        "id": "1de7994c42909792",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 1060,
        "wires": [
            [
                "0c4c8d9cf4196f5b"
            ]
        ]
    },
    {
        "id": "3952e8024eb198da",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 1060,
        "wires": [
            [
                "fbe0489ccee98f21",
                "1885368f8f02f154"
            ]
        ]
    },
    {
        "id": "0c4c8d9cf4196f5b",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B04,B04_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B04,B04_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B04,B04_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B04,B04_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B04,B04_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B04,B04_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B04,B04_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B04,B04_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B04,B04_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B04,B04_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B04,B04_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B04,B04_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B04,B04_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B04,B04_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 1060,
        "wires": [
            [
                "3952e8024eb198da"
            ]
        ]
    },
    {
        "id": "1885368f8f02f154",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 1120,
        "wires": [
            [
                "bf0c4f4eff8ea2fd"
            ]
        ]
    },
    {
        "id": "0df73b040d180f6b",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1120,
        "wires": [
            [
                "11391eac344137b0",
                "57868cafdf16d380"
            ]
        ]
    },
    {
        "id": "cd99b2cca3822690",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 1060,
        "wires": [
            [
                "ddc8449a36df726d"
            ]
        ]
    },
    {
        "id": "bf0c4f4eff8ea2fd",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 1120,
        "wires": [
            [
                "b15104aaa671598c",
                "8d6cd6eb8452f4f7"
            ]
        ]
    },
    {
        "id": "b15104aaa671598c",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 1120,
        "wires": [
            [
                "3d62a6fc103ff83b"
            ]
        ]
    },
    {
        "id": "3d62a6fc103ff83b",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 1120,
        "wires": [
            [
                "60d97915f65660a6",
                "f65abd77c466b628"
            ]
        ]
    },
    {
        "id": "8d6cd6eb8452f4f7",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "name": "debug 2469",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 1160,
        "wires": []
    },
    {
        "id": "ddc8449a36df726d",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 1060,
        "wires": [
            [
                "3d62a6fc103ff83b",
                "a62778f28673d111"
            ]
        ]
    },
    {
        "id": "a62778f28673d111",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "name": "debug 2470",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 1060,
        "wires": []
    },
    {
        "id": "f8a7373ed005c0c1",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 1060,
        "wires": [
            [
                "cd99b2cca3822690"
            ]
        ]
    },
    {
        "id": "11391eac344137b0",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 1120,
        "wires": []
    },
    {
        "id": "57868cafdf16d380",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "name": "debug 2471",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 1160,
        "wires": []
    },
    {
        "id": "60d97915f65660a6",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 1120,
        "wires": [
            [
                "0df73b040d180f6b"
            ]
        ]
    },
    {
        "id": "f65abd77c466b628",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "fef319342109c4af",
        "name": "debug 2472",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f5d1200273821a74",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "name": "function 17",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1300,
        "wires": [
            [
                "d78c822f0af83e9a"
            ]
        ]
    },
    {
        "id": "45e651cebde690f2",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 1300,
        "wires": [
            [
                "f8412949758f562b"
            ]
        ]
    },
    {
        "id": "f6e09623b6043212",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 1300,
        "wires": [
            [
                "f5d1200273821a74",
                "ccc4dceeb76c8ed8"
            ]
        ]
    },
    {
        "id": "f8412949758f562b",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B05,B05_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B05,B05_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B05,B05_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B05,B05_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B05,B05_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B05,B05_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B05,B05_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B05,B05_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B05,B05_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B05,B05_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B05,B05_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B05,B05_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B05,B05_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B05,B05_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 1300,
        "wires": [
            [
                "f6e09623b6043212"
            ]
        ]
    },
    {
        "id": "ccc4dceeb76c8ed8",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 1360,
        "wires": [
            [
                "1f536786daf01f98"
            ]
        ]
    },
    {
        "id": "1e64cc5fbdb44dd9",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1360,
        "wires": [
            [
                "aa1c3bcc483eef1a",
                "85553ab902d523c5"
            ]
        ]
    },
    {
        "id": "79a93bb64b38a06f",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 1300,
        "wires": [
            [
                "ad44885459d5d460"
            ]
        ]
    },
    {
        "id": "1f536786daf01f98",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1360,
        "wires": [
            [
                "8ed56f2abb6ff367",
                "8aada38f764f6a50"
            ]
        ]
    },
    {
        "id": "8ed56f2abb6ff367",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1360,
        "wires": [
            [
                "b8ce7e047befebee"
            ]
        ]
    },
    {
        "id": "b8ce7e047befebee",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1360,
        "wires": [
            [
                "0231d9688d3c52d9",
                "5d1dec6d0835fe35"
            ]
        ]
    },
    {
        "id": "8aada38f764f6a50",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "name": "debug 2473",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1400,
        "wires": []
    },
    {
        "id": "ad44885459d5d460",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1300,
        "wires": [
            [
                "b8ce7e047befebee",
                "b2e2e7f0ce6ae65e"
            ]
        ]
    },
    {
        "id": "b2e2e7f0ce6ae65e",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "name": "debug 2474",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 1300,
        "wires": []
    },
    {
        "id": "d78c822f0af83e9a",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 1300,
        "wires": [
            [
                "79a93bb64b38a06f"
            ]
        ]
    },
    {
        "id": "aa1c3bcc483eef1a",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 1360,
        "wires": []
    },
    {
        "id": "85553ab902d523c5",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "name": "debug 2475",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 1400,
        "wires": []
    },
    {
        "id": "0231d9688d3c52d9",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 1360,
        "wires": [
            [
                "1e64cc5fbdb44dd9"
            ]
        ]
    },
    {
        "id": "5d1dec6d0835fe35",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "7abf5f544fdc8dcf",
        "name": "debug 2476",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1400,
        "wires": []
    },
    {
        "id": "336e10a91ee5ebf9",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "name": "function 18",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 1320,
        "wires": [
            [
                "da749119c6556d64"
            ]
        ]
    },
    {
        "id": "b8aec4395d459ebd",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 1320,
        "wires": [
            [
                "47b3de71e7188b20"
            ]
        ]
    },
    {
        "id": "8e7422c9ce57175b",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 1320,
        "wires": [
            [
                "336e10a91ee5ebf9",
                "c29b5722c3cbcef3"
            ]
        ]
    },
    {
        "id": "47b3de71e7188b20",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B05,B05_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B05,B05_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B05,B05_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B05,B05_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B05,B05_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B05,B05_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B05,B05_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B05,B05_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B05,B05_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B05,B05_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B05,B05_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B05,B05_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B05,B05_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B05,B05_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 1320,
        "wires": [
            [
                "8e7422c9ce57175b"
            ]
        ]
    },
    {
        "id": "c29b5722c3cbcef3",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 1380,
        "wires": [
            [
                "f6c626e1982fdff0"
            ]
        ]
    },
    {
        "id": "f33fbc0790f8d72b",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1380,
        "wires": [
            [
                "a887565950b77df1",
                "c35fc88b81741bbc"
            ]
        ]
    },
    {
        "id": "7bfde72897716cd3",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 1320,
        "wires": [
            [
                "f7421f0bcf58f61d"
            ]
        ]
    },
    {
        "id": "f6c626e1982fdff0",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 1380,
        "wires": [
            [
                "54f4bcb31aa09890",
                "0a24a9c8ac3351cc"
            ]
        ]
    },
    {
        "id": "54f4bcb31aa09890",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 1380,
        "wires": [
            [
                "a9c2dc806195784c"
            ]
        ]
    },
    {
        "id": "a9c2dc806195784c",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 1380,
        "wires": [
            [
                "4ae5cd7f75e03b9f",
                "f92df9e0d8dc7123"
            ]
        ]
    },
    {
        "id": "0a24a9c8ac3351cc",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "name": "debug 2477",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 1420,
        "wires": []
    },
    {
        "id": "f7421f0bcf58f61d",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 1320,
        "wires": [
            [
                "a9c2dc806195784c",
                "9c4a56dc9d71952d"
            ]
        ]
    },
    {
        "id": "9c4a56dc9d71952d",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "name": "debug 2478",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 1320,
        "wires": []
    },
    {
        "id": "da749119c6556d64",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 1320,
        "wires": [
            [
                "7bfde72897716cd3"
            ]
        ]
    },
    {
        "id": "a887565950b77df1",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 1380,
        "wires": []
    },
    {
        "id": "c35fc88b81741bbc",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "name": "debug 2479",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 1420,
        "wires": []
    },
    {
        "id": "4ae5cd7f75e03b9f",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 1380,
        "wires": [
            [
                "f33fbc0790f8d72b"
            ]
        ]
    },
    {
        "id": "f92df9e0d8dc7123",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "017f95d1bbe133a2",
        "name": "debug 2480",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 1420,
        "wires": []
    },
    {
        "id": "deb47e9c85da8973",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "name": "function 19",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1580,
        "wires": [
            [
                "10066210709e2916"
            ]
        ]
    },
    {
        "id": "8f25700f0685948e",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 1580,
        "wires": [
            [
                "0b8299abcb8b18e0"
            ]
        ]
    },
    {
        "id": "696085092efe97a1",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 1580,
        "wires": [
            [
                "deb47e9c85da8973",
                "8e4d4ad0d50ffd26"
            ]
        ]
    },
    {
        "id": "0b8299abcb8b18e0",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B06,B06_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B06,B06_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B06,B06_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B06,B06_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B06,B06_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B06,B06_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B06,B06_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B06,B06_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B06,B06_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B06,B06_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B06,B06_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B06,B06_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B06,B06_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B06,B06_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 1580,
        "wires": [
            [
                "696085092efe97a1"
            ]
        ]
    },
    {
        "id": "8e4d4ad0d50ffd26",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 1640,
        "wires": [
            [
                "e92fe109864ccf9f"
            ]
        ]
    },
    {
        "id": "aae40d2a3e360afd",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1640,
        "wires": [
            [
                "652d2088670e05a1",
                "5fdfa73a364f3ae3"
            ]
        ]
    },
    {
        "id": "8d14e482e0bda1a8",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 1580,
        "wires": [
            [
                "951e7ffc53388083"
            ]
        ]
    },
    {
        "id": "e92fe109864ccf9f",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1640,
        "wires": [
            [
                "70c28ed5ea013e46",
                "7eda0887957f452c"
            ]
        ]
    },
    {
        "id": "70c28ed5ea013e46",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1640,
        "wires": [
            [
                "2498b04960d87fe1"
            ]
        ]
    },
    {
        "id": "2498b04960d87fe1",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1640,
        "wires": [
            [
                "d4b20107ca46dcc0",
                "115a93f567342908"
            ]
        ]
    },
    {
        "id": "7eda0887957f452c",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "name": "debug 2481",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1680,
        "wires": []
    },
    {
        "id": "951e7ffc53388083",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1580,
        "wires": [
            [
                "2498b04960d87fe1",
                "e2bd7d7a9e9ed8ab"
            ]
        ]
    },
    {
        "id": "e2bd7d7a9e9ed8ab",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "name": "debug 2482",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 1580,
        "wires": []
    },
    {
        "id": "10066210709e2916",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 1580,
        "wires": [
            [
                "8d14e482e0bda1a8"
            ]
        ]
    },
    {
        "id": "652d2088670e05a1",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 1640,
        "wires": []
    },
    {
        "id": "5fdfa73a364f3ae3",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "name": "debug 2483",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 1680,
        "wires": []
    },
    {
        "id": "d4b20107ca46dcc0",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 1640,
        "wires": [
            [
                "aae40d2a3e360afd"
            ]
        ]
    },
    {
        "id": "115a93f567342908",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "e27f7c649b3997ad",
        "name": "debug 2484",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1680,
        "wires": []
    },
    {
        "id": "82be2ac5ca9a6e45",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "name": "function 20",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1840,
        "wires": [
            [
                "2ca073b082409bdc"
            ]
        ]
    },
    {
        "id": "bd9cbadbd5b20792",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 1840,
        "wires": [
            [
                "b3057f5565e13447"
            ]
        ]
    },
    {
        "id": "49fed0ebc7e42a89",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 1840,
        "wires": [
            [
                "82be2ac5ca9a6e45",
                "4a2e25b49628efab"
            ]
        ]
    },
    {
        "id": "b3057f5565e13447",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B07,B07_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B07,B07_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B07,B07_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B07,B07_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B07,B07_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B07,B07_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B07,B07_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B07,B07_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B07,B07_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B07,B07_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B07,B07_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B07,B07_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B07,B07_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B07,B07_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 1840,
        "wires": [
            [
                "49fed0ebc7e42a89"
            ]
        ]
    },
    {
        "id": "4a2e25b49628efab",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 1900,
        "wires": [
            [
                "528e3018cff2528b"
            ]
        ]
    },
    {
        "id": "7f4ba06881d00b3b",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1900,
        "wires": [
            [
                "37b26f2a1d232e13",
                "9e80756220dbb29f"
            ]
        ]
    },
    {
        "id": "a6d15e729a96c539",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 1840,
        "wires": [
            [
                "3459cad05c685f8b"
            ]
        ]
    },
    {
        "id": "528e3018cff2528b",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1900,
        "wires": [
            [
                "e80f614194de664d",
                "e044ac79f637a7ad"
            ]
        ]
    },
    {
        "id": "e80f614194de664d",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1900,
        "wires": [
            [
                "219d0de782b684d4"
            ]
        ]
    },
    {
        "id": "219d0de782b684d4",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1900,
        "wires": [
            [
                "911ee122590839aa",
                "17e54136194ca770"
            ]
        ]
    },
    {
        "id": "e044ac79f637a7ad",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "name": "debug 2485",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1940,
        "wires": []
    },
    {
        "id": "3459cad05c685f8b",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1840,
        "wires": [
            [
                "219d0de782b684d4",
                "62262c01b1113f9a"
            ]
        ]
    },
    {
        "id": "62262c01b1113f9a",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "name": "debug 2486",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 1840,
        "wires": []
    },
    {
        "id": "2ca073b082409bdc",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 1840,
        "wires": [
            [
                "a6d15e729a96c539"
            ]
        ]
    },
    {
        "id": "37b26f2a1d232e13",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 1900,
        "wires": []
    },
    {
        "id": "9e80756220dbb29f",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "name": "debug 2487",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 1940,
        "wires": []
    },
    {
        "id": "911ee122590839aa",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 1900,
        "wires": [
            [
                "7f4ba06881d00b3b"
            ]
        ]
    },
    {
        "id": "17e54136194ca770",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "2677d83cef7780ae",
        "name": "debug 2488",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1940,
        "wires": []
    },
    {
        "id": "72cc3528d4f620e0",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "name": "function 21",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 1580,
        "wires": [
            [
                "7d5f7d757569e31e"
            ]
        ]
    },
    {
        "id": "519f066b435ab0b1",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 1580,
        "wires": [
            [
                "f186e37f66d1217c"
            ]
        ]
    },
    {
        "id": "044aa5413a04f7c9",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 1580,
        "wires": [
            [
                "72cc3528d4f620e0",
                "656abd104653c00e"
            ]
        ]
    },
    {
        "id": "f186e37f66d1217c",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B06,B06_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B06,B06_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B06,B06_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B06,B06_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B06,B06_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B06,B06_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B06,B06_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B06,B06_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B06,B06_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B06,B06_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B06,B06_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B06,B06_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B06,B06_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B06,B06_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 1580,
        "wires": [
            [
                "044aa5413a04f7c9"
            ]
        ]
    },
    {
        "id": "656abd104653c00e",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 1640,
        "wires": [
            [
                "f8459c82d205ac6f"
            ]
        ]
    },
    {
        "id": "32726f5f6d5f5aa6",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1640,
        "wires": [
            [
                "2903b3b096601c9c",
                "2cd82e06d121e805"
            ]
        ]
    },
    {
        "id": "d51334a0ed0fae91",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 1580,
        "wires": [
            [
                "160fdd6794fc741d"
            ]
        ]
    },
    {
        "id": "f8459c82d205ac6f",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 1640,
        "wires": [
            [
                "96e4c553373beeea",
                "f525be14684562e1"
            ]
        ]
    },
    {
        "id": "96e4c553373beeea",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 1640,
        "wires": [
            [
                "a8cfa06f41cbcd3b"
            ]
        ]
    },
    {
        "id": "a8cfa06f41cbcd3b",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 1640,
        "wires": [
            [
                "247be10f755644ff",
                "15cbbfa8fb6b7cf0"
            ]
        ]
    },
    {
        "id": "f525be14684562e1",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "name": "debug 2489",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 1680,
        "wires": []
    },
    {
        "id": "160fdd6794fc741d",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 1580,
        "wires": [
            [
                "a8cfa06f41cbcd3b",
                "37b2a57c8ad50507"
            ]
        ]
    },
    {
        "id": "37b2a57c8ad50507",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "name": "debug 2490",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 1580,
        "wires": []
    },
    {
        "id": "7d5f7d757569e31e",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 1580,
        "wires": [
            [
                "d51334a0ed0fae91"
            ]
        ]
    },
    {
        "id": "2903b3b096601c9c",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 1640,
        "wires": []
    },
    {
        "id": "2cd82e06d121e805",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "name": "debug 2491",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 1680,
        "wires": []
    },
    {
        "id": "247be10f755644ff",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 1640,
        "wires": [
            [
                "32726f5f6d5f5aa6"
            ]
        ]
    },
    {
        "id": "15cbbfa8fb6b7cf0",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "6ba15adf5b216135",
        "name": "debug 2492",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 1680,
        "wires": []
    },
    {
        "id": "f0f4f5ffd36e3281",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "name": "function 22",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 1840,
        "wires": [
            [
                "64d42dfc6e941963"
            ]
        ]
    },
    {
        "id": "072693aef0603598",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 1840,
        "wires": [
            [
                "26f13a2ffe7a1634"
            ]
        ]
    },
    {
        "id": "43898db883dff027",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 1840,
        "wires": [
            [
                "f0f4f5ffd36e3281",
                "ce06ad95c28e1793"
            ]
        ]
    },
    {
        "id": "26f13a2ffe7a1634",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B07,B07_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B07,B07_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B07,B07_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B07,B07_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B07,B07_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B07,B07_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B07,B07_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B07,B07_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B07,B07_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B07,B07_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B07,B07_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B07,B07_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B07,B07_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B07,B07_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 1840,
        "wires": [
            [
                "43898db883dff027"
            ]
        ]
    },
    {
        "id": "ce06ad95c28e1793",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 1900,
        "wires": [
            [
                "c6a822fbe7613634"
            ]
        ]
    },
    {
        "id": "1fb237ec6a58eb4f",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1900,
        "wires": [
            [
                "a046fec323061c52",
                "539822eab91abfc7"
            ]
        ]
    },
    {
        "id": "11c86ee9c495502d",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 1840,
        "wires": [
            [
                "55784be2f824b9e8"
            ]
        ]
    },
    {
        "id": "c6a822fbe7613634",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 1900,
        "wires": [
            [
                "526f0c45afb5e465",
                "b705338c383fefe6"
            ]
        ]
    },
    {
        "id": "526f0c45afb5e465",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 1900,
        "wires": [
            [
                "ce80ee2725f16121"
            ]
        ]
    },
    {
        "id": "ce80ee2725f16121",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 1900,
        "wires": [
            [
                "c80a294655dc71fd",
                "546a73ba1804a68c"
            ]
        ]
    },
    {
        "id": "b705338c383fefe6",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "name": "debug 2493",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 1940,
        "wires": []
    },
    {
        "id": "55784be2f824b9e8",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 1840,
        "wires": [
            [
                "ce80ee2725f16121",
                "ef88cbcf4c5f0e18"
            ]
        ]
    },
    {
        "id": "ef88cbcf4c5f0e18",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "name": "debug 2494",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 1840,
        "wires": []
    },
    {
        "id": "64d42dfc6e941963",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 1840,
        "wires": [
            [
                "11c86ee9c495502d"
            ]
        ]
    },
    {
        "id": "a046fec323061c52",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 1900,
        "wires": []
    },
    {
        "id": "539822eab91abfc7",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "name": "debug 2495",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 1940,
        "wires": []
    },
    {
        "id": "c80a294655dc71fd",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 1900,
        "wires": [
            [
                "1fb237ec6a58eb4f"
            ]
        ]
    },
    {
        "id": "546a73ba1804a68c",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "a4c4dfbfcb048e32",
        "name": "debug 2496",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 1940,
        "wires": []
    },
    {
        "id": "96ece2a762611f9f",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "name": "function 23",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2120,
        "wires": [
            [
                "6858e4b21fd6dd19"
            ]
        ]
    },
    {
        "id": "62f12d9a2ee12977",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 2120,
        "wires": [
            [
                "ae424a22ddabbba5"
            ]
        ]
    },
    {
        "id": "31fa47cfed0295b6",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 2120,
        "wires": [
            [
                "96ece2a762611f9f",
                "7ae3ffb9ed634387"
            ]
        ]
    },
    {
        "id": "ae424a22ddabbba5",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B08,B08_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B08,B08_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B08,B08_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B08,B08_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B08,B08_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B08,B08_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B08,B08_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B08,B08_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B08,B08_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B08,B08_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B08,B08_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B08,B08_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B08,B08_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B08,B08_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 2120,
        "wires": [
            [
                "31fa47cfed0295b6"
            ]
        ]
    },
    {
        "id": "7ae3ffb9ed634387",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 2180,
        "wires": [
            [
                "ccba58e84e468be3"
            ]
        ]
    },
    {
        "id": "eb881ab24a2ffea8",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 2180,
        "wires": [
            [
                "480405eeeeb8a6d3",
                "4075c19e52981575"
            ]
        ]
    },
    {
        "id": "0c7b3007972cd2dc",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 2120,
        "wires": [
            [
                "3eb16c48762de84f"
            ]
        ]
    },
    {
        "id": "ccba58e84e468be3",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2180,
        "wires": [
            [
                "0a1baa06ec912d7b",
                "d578796d43644375"
            ]
        ]
    },
    {
        "id": "0a1baa06ec912d7b",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 2180,
        "wires": [
            [
                "a7f7f3e294d474dc"
            ]
        ]
    },
    {
        "id": "a7f7f3e294d474dc",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2180,
        "wires": [
            [
                "2da51c91ab374fa3",
                "25618c367135a7a0"
            ]
        ]
    },
    {
        "id": "d578796d43644375",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "name": "debug 2497",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 2220,
        "wires": []
    },
    {
        "id": "3eb16c48762de84f",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2120,
        "wires": [
            [
                "a7f7f3e294d474dc",
                "0dfe168a03fd906e"
            ]
        ]
    },
    {
        "id": "0dfe168a03fd906e",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "name": "debug 2498",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 2120,
        "wires": []
    },
    {
        "id": "6858e4b21fd6dd19",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 2120,
        "wires": [
            [
                "0c7b3007972cd2dc"
            ]
        ]
    },
    {
        "id": "480405eeeeb8a6d3",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 2180,
        "wires": []
    },
    {
        "id": "4075c19e52981575",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "name": "debug 2499",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 2220,
        "wires": []
    },
    {
        "id": "2da51c91ab374fa3",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 2180,
        "wires": [
            [
                "eb881ab24a2ffea8"
            ]
        ]
    },
    {
        "id": "25618c367135a7a0",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "c3e5bda187368712",
        "name": "debug 2500",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 2220,
        "wires": []
    },
    {
        "id": "f1770f79cec11369",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "name": "function 24",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2400,
        "wires": [
            [
                "d23582f31f652551"
            ]
        ]
    },
    {
        "id": "8e5a07f962d7ac8c",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 2400,
        "wires": [
            [
                "5f7ec6a6fd2e5b5d"
            ]
        ]
    },
    {
        "id": "3ed265d215c7f4cc",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 2400,
        "wires": [
            [
                "f1770f79cec11369",
                "8127995eb5020426"
            ]
        ]
    },
    {
        "id": "5f7ec6a6fd2e5b5d",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B09,B09_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B09,B09_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B09,B09_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B09,B09_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B09,B09_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B09,B09_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B09,B09_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B09,B09_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B09,B09_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B09,B09_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B09,B09_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B09,B09_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B09,B09_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B09,B09_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 2400,
        "wires": [
            [
                "3ed265d215c7f4cc"
            ]
        ]
    },
    {
        "id": "8127995eb5020426",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 2460,
        "wires": [
            [
                "f6072c8e5766a5c6"
            ]
        ]
    },
    {
        "id": "72601310b7341f42",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 2460,
        "wires": [
            [
                "7587faf6f0e19a57",
                "de88480f4c9ee54a"
            ]
        ]
    },
    {
        "id": "281ee9f452aed59c",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 2400,
        "wires": [
            [
                "24f8be4ff26a15ee"
            ]
        ]
    },
    {
        "id": "f6072c8e5766a5c6",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2460,
        "wires": [
            [
                "5556da9d885a98c6",
                "2c8e20532548a576"
            ]
        ]
    },
    {
        "id": "5556da9d885a98c6",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 2460,
        "wires": [
            [
                "3b54a80f96e8dd94"
            ]
        ]
    },
    {
        "id": "3b54a80f96e8dd94",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2460,
        "wires": [
            [
                "55d63a154d59e4d1",
                "b6d80790f0a46f01"
            ]
        ]
    },
    {
        "id": "2c8e20532548a576",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "name": "debug 2501",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 2500,
        "wires": []
    },
    {
        "id": "24f8be4ff26a15ee",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2400,
        "wires": [
            [
                "3b54a80f96e8dd94",
                "55c363fdbed542e6"
            ]
        ]
    },
    {
        "id": "55c363fdbed542e6",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "name": "debug 2502",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 2400,
        "wires": []
    },
    {
        "id": "d23582f31f652551",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 2400,
        "wires": [
            [
                "281ee9f452aed59c"
            ]
        ]
    },
    {
        "id": "7587faf6f0e19a57",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 2460,
        "wires": []
    },
    {
        "id": "de88480f4c9ee54a",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "name": "debug 2503",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 2500,
        "wires": []
    },
    {
        "id": "55d63a154d59e4d1",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 2460,
        "wires": [
            [
                "72601310b7341f42"
            ]
        ]
    },
    {
        "id": "b6d80790f0a46f01",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "8763dc98577cbe6f",
        "name": "debug 2504",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 2500,
        "wires": []
    },
    {
        "id": "51fe9a4e933e75ec",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "name": "function 25",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2660,
        "wires": [
            [
                "34bc8be8ad3f1f27"
            ]
        ]
    },
    {
        "id": "d18c71bf3dd7f77f",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 2660,
        "wires": [
            [
                "608be71a5e851e89"
            ]
        ]
    },
    {
        "id": "fd463177f63fef6e",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 2660,
        "wires": [
            [
                "51fe9a4e933e75ec",
                "65c9f892ea58f690"
            ]
        ]
    },
    {
        "id": "608be71a5e851e89",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B10,B10_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B10,B10_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B10,B10_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B10,B10_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B10,B10_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B10,B10_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B10,B10_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B10,B10_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B10,B10_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B10,B10_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B10,B10_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B10,B10_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B10,B10_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B10,B10_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 2660,
        "wires": [
            [
                "fd463177f63fef6e"
            ]
        ]
    },
    {
        "id": "65c9f892ea58f690",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 2720,
        "wires": [
            [
                "af3e0910c5d68ed8"
            ]
        ]
    },
    {
        "id": "38869970e28972db",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 2720,
        "wires": [
            [
                "164605bb290818ea",
                "7a9bb30281b4e8d3"
            ]
        ]
    },
    {
        "id": "478288df55465803",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 2660,
        "wires": [
            [
                "4cf20448473cbada"
            ]
        ]
    },
    {
        "id": "af3e0910c5d68ed8",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2720,
        "wires": [
            [
                "61bd13d6c676a006",
                "92fa99039455fee6"
            ]
        ]
    },
    {
        "id": "61bd13d6c676a006",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 2720,
        "wires": [
            [
                "1906aab191795180"
            ]
        ]
    },
    {
        "id": "1906aab191795180",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2720,
        "wires": [
            [
                "d5fd1b100dce5d0d",
                "01e22be31f834506"
            ]
        ]
    },
    {
        "id": "92fa99039455fee6",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "name": "debug 2505",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 2760,
        "wires": []
    },
    {
        "id": "4cf20448473cbada",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2660,
        "wires": [
            [
                "1906aab191795180",
                "8ef343b2d2eb8d4d"
            ]
        ]
    },
    {
        "id": "8ef343b2d2eb8d4d",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "name": "debug 2506",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 2660,
        "wires": []
    },
    {
        "id": "34bc8be8ad3f1f27",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 2660,
        "wires": [
            [
                "478288df55465803"
            ]
        ]
    },
    {
        "id": "164605bb290818ea",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 2720,
        "wires": []
    },
    {
        "id": "7a9bb30281b4e8d3",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "name": "debug 2507",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 2760,
        "wires": []
    },
    {
        "id": "d5fd1b100dce5d0d",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 2720,
        "wires": [
            [
                "38869970e28972db"
            ]
        ]
    },
    {
        "id": "01e22be31f834506",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "8a3086e5865552d3",
        "name": "debug 2508",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 2760,
        "wires": []
    },
    {
        "id": "81123f8eecaa7931",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "name": "function 26",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 2120,
        "wires": [
            [
                "7b144e8af9e76b98"
            ]
        ]
    },
    {
        "id": "7c5c4a8dbf7a3a01",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 2120,
        "wires": [
            [
                "e6b2ce92227d578d"
            ]
        ]
    },
    {
        "id": "5a5c05215c7cf746",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 2120,
        "wires": [
            [
                "81123f8eecaa7931",
                "a35816484e815a2b"
            ]
        ]
    },
    {
        "id": "e6b2ce92227d578d",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B08,B08_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B08,B08_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B08,B08_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B08,B08_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B08,B08_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B08,B08_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B08,B08_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B08,B08_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B08,B08_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B08,B08_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B08,B08_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B08,B08_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B08,B08_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B08,B08_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 2120,
        "wires": [
            [
                "5a5c05215c7cf746"
            ]
        ]
    },
    {
        "id": "a35816484e815a2b",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 2180,
        "wires": [
            [
                "e1d5c2e782885c18"
            ]
        ]
    },
    {
        "id": "b8a518b7f98b7037",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 2180,
        "wires": [
            [
                "4b7b0af4703aac44",
                "80f32774a8b913e0"
            ]
        ]
    },
    {
        "id": "5867432f18b55d01",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 2120,
        "wires": [
            [
                "2385f599174530b2"
            ]
        ]
    },
    {
        "id": "e1d5c2e782885c18",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 2180,
        "wires": [
            [
                "59086ea07a4cc7e1",
                "1b2d741a2661d8c6"
            ]
        ]
    },
    {
        "id": "59086ea07a4cc7e1",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 2180,
        "wires": [
            [
                "f372b35bb7fe5fe3"
            ]
        ]
    },
    {
        "id": "f372b35bb7fe5fe3",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 2180,
        "wires": [
            [
                "acb010922867f772",
                "d3c9b654aa2239eb"
            ]
        ]
    },
    {
        "id": "1b2d741a2661d8c6",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "name": "debug 2509",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 2220,
        "wires": []
    },
    {
        "id": "2385f599174530b2",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 2120,
        "wires": [
            [
                "f372b35bb7fe5fe3",
                "52eff12db8f61758"
            ]
        ]
    },
    {
        "id": "52eff12db8f61758",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "name": "debug 2510",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 2120,
        "wires": []
    },
    {
        "id": "7b144e8af9e76b98",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 2120,
        "wires": [
            [
                "5867432f18b55d01"
            ]
        ]
    },
    {
        "id": "4b7b0af4703aac44",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 2180,
        "wires": []
    },
    {
        "id": "80f32774a8b913e0",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "name": "debug 2511",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 2220,
        "wires": []
    },
    {
        "id": "acb010922867f772",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 2180,
        "wires": [
            [
                "b8a518b7f98b7037"
            ]
        ]
    },
    {
        "id": "d3c9b654aa2239eb",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "5ad83fd57591cc2e",
        "name": "debug 2512",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 2220,
        "wires": []
    },
    {
        "id": "054f97f3e6d79571",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "name": "function 27",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 2400,
        "wires": [
            [
                "436d168bf1989658"
            ]
        ]
    },
    {
        "id": "464b30136f8cea4b",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 2400,
        "wires": [
            [
                "503359a651d9d1c1"
            ]
        ]
    },
    {
        "id": "88c1df5340f582d9",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 2400,
        "wires": [
            [
                "054f97f3e6d79571",
                "b82ad122e3fe5b51"
            ]
        ]
    },
    {
        "id": "503359a651d9d1c1",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B09,B09_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B09,B09_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B09,B09_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B09,B09_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B09,B09_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B09,B09_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B09,B09_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B09,B09_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B09,B09_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B09,B09_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B09,B09_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B09,B09_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B09,B09_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B09,B09_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 2400,
        "wires": [
            [
                "88c1df5340f582d9"
            ]
        ]
    },
    {
        "id": "b82ad122e3fe5b51",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 2460,
        "wires": [
            [
                "1e5fa87e38594357"
            ]
        ]
    },
    {
        "id": "930d0160ee6ef374",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 2460,
        "wires": [
            [
                "5ffb2c91a9329d72",
                "4ed7992161d80d14"
            ]
        ]
    },
    {
        "id": "867d895fe54fb4eb",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 2400,
        "wires": [
            [
                "7c8deff9c11a1824"
            ]
        ]
    },
    {
        "id": "1e5fa87e38594357",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 2460,
        "wires": [
            [
                "e99fafead3480ddd",
                "2159b4975add0b9d"
            ]
        ]
    },
    {
        "id": "e99fafead3480ddd",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 2460,
        "wires": [
            [
                "46f2ce9ce8cb1056"
            ]
        ]
    },
    {
        "id": "46f2ce9ce8cb1056",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 2460,
        "wires": [
            [
                "0e88b9af3528f2b4",
                "c96e3ea7727fe46d"
            ]
        ]
    },
    {
        "id": "2159b4975add0b9d",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "name": "debug 2513",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 2500,
        "wires": []
    },
    {
        "id": "7c8deff9c11a1824",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 2400,
        "wires": [
            [
                "46f2ce9ce8cb1056",
                "e94f36a2b4c19aef"
            ]
        ]
    },
    {
        "id": "e94f36a2b4c19aef",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "name": "debug 2514",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 2400,
        "wires": []
    },
    {
        "id": "436d168bf1989658",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 2400,
        "wires": [
            [
                "867d895fe54fb4eb"
            ]
        ]
    },
    {
        "id": "5ffb2c91a9329d72",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 2460,
        "wires": []
    },
    {
        "id": "4ed7992161d80d14",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "name": "debug 2515",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 2500,
        "wires": []
    },
    {
        "id": "0e88b9af3528f2b4",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 2460,
        "wires": [
            [
                "930d0160ee6ef374"
            ]
        ]
    },
    {
        "id": "c96e3ea7727fe46d",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "15532b43432838e1",
        "name": "debug 2516",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 2500,
        "wires": []
    },
    {
        "id": "961a520eed163d36",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "name": "function 28",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 2660,
        "wires": [
            [
                "79fba018f2a11067"
            ]
        ]
    },
    {
        "id": "63410da3e01a49ed",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 2660,
        "wires": [
            [
                "d13e238c7491b6d4"
            ]
        ]
    },
    {
        "id": "6504b60a29150e5e",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 2660,
        "wires": [
            [
                "961a520eed163d36",
                "a93cddadba977dc3"
            ]
        ]
    },
    {
        "id": "d13e238c7491b6d4",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B10,B10_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B10,B10_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B10,B10_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B10,B10_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B10,B10_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B10,B10_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B10,B10_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B10,B10_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B10,B10_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B10,B10_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B10,B10_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B10,B10_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B10,B10_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B10,B10_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 2660,
        "wires": [
            [
                "6504b60a29150e5e"
            ]
        ]
    },
    {
        "id": "a93cddadba977dc3",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 2720,
        "wires": [
            [
                "5df1bade269906fe"
            ]
        ]
    },
    {
        "id": "c164285f38778465",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 2720,
        "wires": [
            [
                "12983f8f93170895",
                "98e2764427f3dece"
            ]
        ]
    },
    {
        "id": "80bc7676d55e621e",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 2660,
        "wires": [
            [
                "6c69752191f3f4e4"
            ]
        ]
    },
    {
        "id": "5df1bade269906fe",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 2720,
        "wires": [
            [
                "6645712de57a470b",
                "de93e9b3eb168796"
            ]
        ]
    },
    {
        "id": "6645712de57a470b",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 2720,
        "wires": [
            [
                "524ea431417ac729"
            ]
        ]
    },
    {
        "id": "524ea431417ac729",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 2720,
        "wires": [
            [
                "6398905e45ac1de1",
                "ee0deb50764d923f"
            ]
        ]
    },
    {
        "id": "de93e9b3eb168796",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "name": "debug 2517",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 2760,
        "wires": []
    },
    {
        "id": "6c69752191f3f4e4",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 2660,
        "wires": [
            [
                "524ea431417ac729",
                "f444c52607ea807a"
            ]
        ]
    },
    {
        "id": "f444c52607ea807a",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "name": "debug 2518",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 2660,
        "wires": []
    },
    {
        "id": "79fba018f2a11067",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 2660,
        "wires": [
            [
                "80bc7676d55e621e"
            ]
        ]
    },
    {
        "id": "12983f8f93170895",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 2720,
        "wires": []
    },
    {
        "id": "98e2764427f3dece",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "name": "debug 2519",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 2760,
        "wires": []
    },
    {
        "id": "6398905e45ac1de1",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 2720,
        "wires": [
            [
                "c164285f38778465"
            ]
        ]
    },
    {
        "id": "ee0deb50764d923f",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "42ca63693e5208b2",
        "name": "debug 2520",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 2760,
        "wires": []
    },
    {
        "id": "04cd33ad8bb29a91",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "name": "function 29",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2920,
        "wires": [
            [
                "d3e89e24f4d8c7fb"
            ]
        ]
    },
    {
        "id": "12143a1d7cb9c37a",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 2920,
        "wires": [
            [
                "a30560f9af82e301"
            ]
        ]
    },
    {
        "id": "e8146d1b63a5ca13",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 2920,
        "wires": [
            [
                "04cd33ad8bb29a91",
                "a91a9e5388da417b"
            ]
        ]
    },
    {
        "id": "a30560f9af82e301",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B11,B11_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B11,B11_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B11,B11_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B11,B11_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B11,B11_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B11,B11_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B11,B11_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B11,B11_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B11,B11_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B11,B11_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B11,B11_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B11,B11_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B11,B11_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B11,B11_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 2920,
        "wires": [
            [
                "e8146d1b63a5ca13"
            ]
        ]
    },
    {
        "id": "a91a9e5388da417b",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 2980,
        "wires": [
            [
                "b4602d19e05839cf"
            ]
        ]
    },
    {
        "id": "5f582c5acb5635ef",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 2980,
        "wires": [
            [
                "351003cfa1027eac",
                "75df5901f3904658"
            ]
        ]
    },
    {
        "id": "659033bf077afb70",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 2920,
        "wires": [
            [
                "f7ec62ea866eac19"
            ]
        ]
    },
    {
        "id": "b4602d19e05839cf",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2980,
        "wires": [
            [
                "cadc971215a7c5f5",
                "763f3ea5d2ecd37c"
            ]
        ]
    },
    {
        "id": "cadc971215a7c5f5",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 2980,
        "wires": [
            [
                "f75463670f1806c1"
            ]
        ]
    },
    {
        "id": "f75463670f1806c1",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2980,
        "wires": [
            [
                "646a38d14f3dbdc9",
                "9f345af6a305b209"
            ]
        ]
    },
    {
        "id": "763f3ea5d2ecd37c",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "name": "debug 2521",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 3020,
        "wires": []
    },
    {
        "id": "f7ec62ea866eac19",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2920,
        "wires": [
            [
                "f75463670f1806c1",
                "ecf82b2978c98832"
            ]
        ]
    },
    {
        "id": "ecf82b2978c98832",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "name": "debug 2522",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 2920,
        "wires": []
    },
    {
        "id": "d3e89e24f4d8c7fb",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 2920,
        "wires": [
            [
                "659033bf077afb70"
            ]
        ]
    },
    {
        "id": "351003cfa1027eac",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 2980,
        "wires": []
    },
    {
        "id": "75df5901f3904658",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "name": "debug 2523",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 3020,
        "wires": []
    },
    {
        "id": "646a38d14f3dbdc9",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 2980,
        "wires": [
            [
                "5f582c5acb5635ef"
            ]
        ]
    },
    {
        "id": "9f345af6a305b209",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "71550c473d207684",
        "name": "debug 2524",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 3020,
        "wires": []
    },
    {
        "id": "9a7b44b5a4a10f2b",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "name": "function 30",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3180,
        "wires": [
            [
                "92b03f6222f04709"
            ]
        ]
    },
    {
        "id": "54e8dba86592a68d",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 3180,
        "wires": [
            [
                "514bdbed1a83e916"
            ]
        ]
    },
    {
        "id": "2fe29784723a0a7c",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 3180,
        "wires": [
            [
                "9a7b44b5a4a10f2b",
                "0a60f0b7322c511c"
            ]
        ]
    },
    {
        "id": "514bdbed1a83e916",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B12,B12_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B12,B12_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B12,B12_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B12,B12_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B12,B12_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B12,B12_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B12,B12_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B12,B12_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B12,B12_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B12,B12_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B12,B12_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B12,B12_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B12,B12_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B12,B12_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 3180,
        "wires": [
            [
                "2fe29784723a0a7c"
            ]
        ]
    },
    {
        "id": "0a60f0b7322c511c",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 3240,
        "wires": [
            [
                "210762c701c69ad9"
            ]
        ]
    },
    {
        "id": "28cea03a502b7933",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 3240,
        "wires": [
            [
                "9d7a75a9399ecbaa",
                "c91c18d77c104213"
            ]
        ]
    },
    {
        "id": "eb1495a1533db244",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 3180,
        "wires": [
            [
                "8cc676cd28fc8e75"
            ]
        ]
    },
    {
        "id": "210762c701c69ad9",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 3240,
        "wires": [
            [
                "72e93f4e153cd884",
                "bec05e42d4ed7830"
            ]
        ]
    },
    {
        "id": "72e93f4e153cd884",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 3240,
        "wires": [
            [
                "373e5a8c1ffe6a39"
            ]
        ]
    },
    {
        "id": "373e5a8c1ffe6a39",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 3240,
        "wires": [
            [
                "1cec903c32f5ce91",
                "f278ec56046e5498"
            ]
        ]
    },
    {
        "id": "bec05e42d4ed7830",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "name": "debug 2525",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 3280,
        "wires": []
    },
    {
        "id": "8cc676cd28fc8e75",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 3180,
        "wires": [
            [
                "373e5a8c1ffe6a39",
                "4fe0c962d1531e2f"
            ]
        ]
    },
    {
        "id": "4fe0c962d1531e2f",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "name": "debug 2526",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 3180,
        "wires": []
    },
    {
        "id": "92b03f6222f04709",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 3180,
        "wires": [
            [
                "eb1495a1533db244"
            ]
        ]
    },
    {
        "id": "9d7a75a9399ecbaa",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 3240,
        "wires": []
    },
    {
        "id": "c91c18d77c104213",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "name": "debug 2527",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 3280,
        "wires": []
    },
    {
        "id": "1cec903c32f5ce91",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 3240,
        "wires": [
            [
                "28cea03a502b7933"
            ]
        ]
    },
    {
        "id": "f278ec56046e5498",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "dc5907cafc30ec22",
        "name": "debug 2528",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 3280,
        "wires": []
    },
    {
        "id": "14d95f5e97050aa4",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "name": "function 31",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3440,
        "wires": [
            [
                "8c2441d8a04c916b"
            ]
        ]
    },
    {
        "id": "066c0b6d4a5bc33a",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 3440,
        "wires": [
            [
                "caac16ecf7fab641"
            ]
        ]
    },
    {
        "id": "47a3e1a074c7c5e4",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 3440,
        "wires": [
            [
                "14d95f5e97050aa4",
                "efc8fc96e8c4c1fa"
            ]
        ]
    },
    {
        "id": "caac16ecf7fab641",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B13,B13_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B13,B13_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B13,B13_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B13,B13_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B13,B13_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B13,B13_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B13,B13_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B13,B13_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B13,B13_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B13,B13_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B13,B13_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B13,B13_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B13,B13_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B13,B13_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 3440,
        "wires": [
            [
                "47a3e1a074c7c5e4"
            ]
        ]
    },
    {
        "id": "efc8fc96e8c4c1fa",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 3500,
        "wires": [
            [
                "a8e7bf2ce7e01344"
            ]
        ]
    },
    {
        "id": "af97db880e9025fe",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 3500,
        "wires": [
            [
                "d56130380abc2105",
                "fb1b2f2ae915fd29"
            ]
        ]
    },
    {
        "id": "4d29336ba0552a7a",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 3440,
        "wires": [
            [
                "8f982a56d3391ddd"
            ]
        ]
    },
    {
        "id": "a8e7bf2ce7e01344",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 3500,
        "wires": [
            [
                "8901b4ec92145cb5",
                "83d00d041fbed1bb"
            ]
        ]
    },
    {
        "id": "8901b4ec92145cb5",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 3500,
        "wires": [
            [
                "ed6d25f9b0a631fb"
            ]
        ]
    },
    {
        "id": "ed6d25f9b0a631fb",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 3500,
        "wires": [
            [
                "39ee8744e99d6ae6",
                "6ff661db9fa2a407"
            ]
        ]
    },
    {
        "id": "83d00d041fbed1bb",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "name": "debug 2529",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 3540,
        "wires": []
    },
    {
        "id": "8f982a56d3391ddd",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 3440,
        "wires": [
            [
                "ed6d25f9b0a631fb",
                "ae1c0ed6848dcaef"
            ]
        ]
    },
    {
        "id": "ae1c0ed6848dcaef",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "name": "debug 2530",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 3440,
        "wires": []
    },
    {
        "id": "8c2441d8a04c916b",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 3440,
        "wires": [
            [
                "4d29336ba0552a7a"
            ]
        ]
    },
    {
        "id": "d56130380abc2105",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 3500,
        "wires": []
    },
    {
        "id": "fb1b2f2ae915fd29",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "name": "debug 2531",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 3540,
        "wires": []
    },
    {
        "id": "39ee8744e99d6ae6",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 3500,
        "wires": [
            [
                "af97db880e9025fe"
            ]
        ]
    },
    {
        "id": "6ff661db9fa2a407",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "f96687c10a5c49a5",
        "name": "debug 2532",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 3540,
        "wires": []
    },
    {
        "id": "582a8c4f48348b98",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "name": "function 32",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3700,
        "wires": [
            [
                "8b05f847458d6a5c"
            ]
        ]
    },
    {
        "id": "19a85a1f2554c7a7",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 240,
        "y": 3700,
        "wires": [
            [
                "3e34785b3617e4a5"
            ]
        ]
    },
    {
        "id": "f0ed311b4641595d",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 580,
        "y": 3700,
        "wires": [
            [
                "582a8c4f48348b98",
                "a537d59c669d34c5"
            ]
        ]
    },
    {
        "id": "3e34785b3617e4a5",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B14,B14_INV01,INV01,INV01,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B14,B14_INV01,INV01,INV01,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B14,B14_INV01,INV01,INV01,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B14,B14_INV01,INV01,INV01,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B14,B14_INV01,INV01,INV01,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B14,B14_INV01,INV01,INV01,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B14,B14_INV01,INV01,INV01,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B14,B14_INV01,INV01,INV01,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B14,B14_INV01,INV01,INV01,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B14,B14_INV01,INV01,INV01,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B14,B14_INV01,INV01,INV01,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B14,B14_INV01,INV01,INV01,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B14,B14_INV01,INV01,INV01,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B14,B14_INV01,INV01,INV01,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 430,
        "y": 3700,
        "wires": [
            [
                "f0ed311b4641595d"
            ]
        ]
    },
    {
        "id": "a537d59c669d34c5",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 3760,
        "wires": [
            [
                "7c7af81ad2b8c957"
            ]
        ]
    },
    {
        "id": "346fa748b0e52b5b",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 3760,
        "wires": [
            [
                "3d4a5f07a879ee44",
                "9a78b5d5e51cc285"
            ]
        ]
    },
    {
        "id": "240aaaa17717737a",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1120,
        "y": 3700,
        "wires": [
            [
                "015e9fc7a419db41"
            ]
        ]
    },
    {
        "id": "7c7af81ad2b8c957",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 3760,
        "wires": [
            [
                "1a2fe10978f23e39",
                "12417ce357a86e4f"
            ]
        ]
    },
    {
        "id": "1a2fe10978f23e39",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 3760,
        "wires": [
            [
                "111bddb00e5c952b"
            ]
        ]
    },
    {
        "id": "111bddb00e5c952b",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 3760,
        "wires": [
            [
                "38c95ce3c179f9b2",
                "b6ef2dcf4a28b778"
            ]
        ]
    },
    {
        "id": "12417ce357a86e4f",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "name": "debug 2533",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 3800,
        "wires": []
    },
    {
        "id": "015e9fc7a419db41",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 3700,
        "wires": [
            [
                "111bddb00e5c952b",
                "b265e75e33620f30"
            ]
        ]
    },
    {
        "id": "b265e75e33620f30",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "name": "debug 2534",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 3700,
        "wires": []
    },
    {
        "id": "8b05f847458d6a5c",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 940,
        "y": 3700,
        "wires": [
            [
                "240aaaa17717737a"
            ]
        ]
    },
    {
        "id": "3d4a5f07a879ee44",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 1810,
        "y": 3760,
        "wires": []
    },
    {
        "id": "9a78b5d5e51cc285",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "name": "debug 2535",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 3800,
        "wires": []
    },
    {
        "id": "38c95ce3c179f9b2",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 3760,
        "wires": [
            [
                "346fa748b0e52b5b"
            ]
        ]
    },
    {
        "id": "b6ef2dcf4a28b778",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "f938beec9c2cab05",
        "name": "debug 2536",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 3800,
        "wires": []
    },
    {
        "id": "92c577d496b23ee1",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "name": "function 33",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 2920,
        "wires": [
            [
                "402d11c9f554a2c7"
            ]
        ]
    },
    {
        "id": "b7da19690ed5a57c",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 2920,
        "wires": [
            [
                "cdb526a2c858c3cb"
            ]
        ]
    },
    {
        "id": "1b0e276c115b4231",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 2920,
        "wires": [
            [
                "92c577d496b23ee1",
                "26d665a57966a69e"
            ]
        ]
    },
    {
        "id": "cdb526a2c858c3cb",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B11,B11_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B11,B11_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B11,B11_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B11,B11_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B11,B11_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B11,B11_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B11,B11_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B11,B11_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B11,B11_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B11,B11_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B11,B11_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B11,B11_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B11,B11_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B11,B11_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 2920,
        "wires": [
            [
                "1b0e276c115b4231"
            ]
        ]
    },
    {
        "id": "26d665a57966a69e",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 2980,
        "wires": [
            [
                "644a527e79724359"
            ]
        ]
    },
    {
        "id": "ccad97d483814b86",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 2980,
        "wires": [
            [
                "7b4c7e57f3c64cbc",
                "f4263c4415843a1e"
            ]
        ]
    },
    {
        "id": "821993edce1f6c3c",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 2920,
        "wires": [
            [
                "cbbdc059d2163bfd"
            ]
        ]
    },
    {
        "id": "644a527e79724359",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 2980,
        "wires": [
            [
                "58a2f1c62a2bb1b0",
                "03fa302f15345eb7"
            ]
        ]
    },
    {
        "id": "58a2f1c62a2bb1b0",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 2980,
        "wires": [
            [
                "7e188b80df59f558"
            ]
        ]
    },
    {
        "id": "7e188b80df59f558",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 2980,
        "wires": [
            [
                "7516962562a46ca0",
                "c56121a70cf3601b"
            ]
        ]
    },
    {
        "id": "03fa302f15345eb7",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "name": "debug 2537",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 3020,
        "wires": []
    },
    {
        "id": "cbbdc059d2163bfd",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 2920,
        "wires": [
            [
                "7e188b80df59f558",
                "d71edf84607aeae3"
            ]
        ]
    },
    {
        "id": "d71edf84607aeae3",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "name": "debug 2538",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 2920,
        "wires": []
    },
    {
        "id": "402d11c9f554a2c7",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 2920,
        "wires": [
            [
                "821993edce1f6c3c"
            ]
        ]
    },
    {
        "id": "7b4c7e57f3c64cbc",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 2980,
        "wires": []
    },
    {
        "id": "f4263c4415843a1e",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "name": "debug 2539",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 3020,
        "wires": []
    },
    {
        "id": "7516962562a46ca0",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 2980,
        "wires": [
            [
                "ccad97d483814b86"
            ]
        ]
    },
    {
        "id": "c56121a70cf3601b",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "3b7111b25a4f9183",
        "name": "debug 2540",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 3020,
        "wires": []
    },
    {
        "id": "f71974ebcf4a8508",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "name": "function 34",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 3180,
        "wires": [
            [
                "1ad62ad8247f9830"
            ]
        ]
    },
    {
        "id": "27e4a1926f68e1e6",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 3180,
        "wires": [
            [
                "2b2c906c862abdf2"
            ]
        ]
    },
    {
        "id": "d50d6a87f835034a",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 3180,
        "wires": [
            [
                "f71974ebcf4a8508",
                "a613b942c227eed4"
            ]
        ]
    },
    {
        "id": "2b2c906c862abdf2",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B12,B12_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B12,B12_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B12,B12_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B12,B12_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B12,B12_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B12,B12_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B12,B12_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B12,B12_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B12,B12_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B12,B12_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B12,B12_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B12,B12_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B12,B12_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B12,B12_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 3180,
        "wires": [
            [
                "d50d6a87f835034a"
            ]
        ]
    },
    {
        "id": "a613b942c227eed4",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 3240,
        "wires": [
            [
                "c5ed590f9dd3274c"
            ]
        ]
    },
    {
        "id": "d4388a2e3d920ed3",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 3240,
        "wires": [
            [
                "5388621900489667",
                "ba125d55bdcf76b2"
            ]
        ]
    },
    {
        "id": "77bf9490eb997a31",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 3180,
        "wires": [
            [
                "2cc10ce732f6dd1e"
            ]
        ]
    },
    {
        "id": "c5ed590f9dd3274c",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 3240,
        "wires": [
            [
                "b2f03a8f52fbd71b",
                "cb665724b16cd06b"
            ]
        ]
    },
    {
        "id": "b2f03a8f52fbd71b",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 3240,
        "wires": [
            [
                "7c3a42379e6d2d99"
            ]
        ]
    },
    {
        "id": "7c3a42379e6d2d99",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 3240,
        "wires": [
            [
                "7eeaf07d8fc7d184",
                "5e5b927fb8d84e7c"
            ]
        ]
    },
    {
        "id": "cb665724b16cd06b",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "name": "debug 2541",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 3280,
        "wires": []
    },
    {
        "id": "2cc10ce732f6dd1e",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 3180,
        "wires": [
            [
                "7c3a42379e6d2d99",
                "56348987186cee4f"
            ]
        ]
    },
    {
        "id": "56348987186cee4f",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "name": "debug 2542",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 3180,
        "wires": []
    },
    {
        "id": "1ad62ad8247f9830",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 3180,
        "wires": [
            [
                "77bf9490eb997a31"
            ]
        ]
    },
    {
        "id": "5388621900489667",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 3240,
        "wires": []
    },
    {
        "id": "ba125d55bdcf76b2",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "name": "debug 2543",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 3280,
        "wires": []
    },
    {
        "id": "7eeaf07d8fc7d184",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 3240,
        "wires": [
            [
                "d4388a2e3d920ed3"
            ]
        ]
    },
    {
        "id": "5e5b927fb8d84e7c",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "028e90abdbdff6ea",
        "name": "debug 2544",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 3280,
        "wires": []
    },
    {
        "id": "4d0383f3070e8158",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "name": "function 35",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 3440,
        "wires": [
            [
                "5a665b8bd2a4c903"
            ]
        ]
    },
    {
        "id": "4eaaca155c9e949d",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 3440,
        "wires": [
            [
                "102756701b7efc6b"
            ]
        ]
    },
    {
        "id": "b61512b7128bb849",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 3440,
        "wires": [
            [
                "4d0383f3070e8158",
                "25a299faf02330b4"
            ]
        ]
    },
    {
        "id": "102756701b7efc6b",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B13,B13_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B13,B13_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B13,B13_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B13,B13_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B13,B13_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B13,B13_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B13,B13_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B13,B13_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B13,B13_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B13,B13_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B13,B13_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B13,B13_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B13,B13_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B13,B13_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 3440,
        "wires": [
            [
                "b61512b7128bb849"
            ]
        ]
    },
    {
        "id": "25a299faf02330b4",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 3500,
        "wires": [
            [
                "765b4996bd90cc05"
            ]
        ]
    },
    {
        "id": "2bde4bd8ac315c44",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 3500,
        "wires": [
            [
                "24ddf82bd6735161",
                "0804dac5d2d89599"
            ]
        ]
    },
    {
        "id": "01b19b7af9a81659",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 3440,
        "wires": [
            [
                "10db0b4a86e5bb04"
            ]
        ]
    },
    {
        "id": "765b4996bd90cc05",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 3500,
        "wires": [
            [
                "0edf7d59a5260313",
                "256b1c5eb1bc52a9"
            ]
        ]
    },
    {
        "id": "0edf7d59a5260313",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 3500,
        "wires": [
            [
                "dffd97d703296faa"
            ]
        ]
    },
    {
        "id": "dffd97d703296faa",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 3500,
        "wires": [
            [
                "ee08b29a5ce9447c",
                "236638a25156c8b4"
            ]
        ]
    },
    {
        "id": "256b1c5eb1bc52a9",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "name": "debug 2545",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 3540,
        "wires": []
    },
    {
        "id": "10db0b4a86e5bb04",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 3440,
        "wires": [
            [
                "dffd97d703296faa",
                "17e60cb2396a1c26"
            ]
        ]
    },
    {
        "id": "17e60cb2396a1c26",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "name": "debug 2546",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 3440,
        "wires": []
    },
    {
        "id": "5a665b8bd2a4c903",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 3440,
        "wires": [
            [
                "01b19b7af9a81659"
            ]
        ]
    },
    {
        "id": "24ddf82bd6735161",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 3500,
        "wires": []
    },
    {
        "id": "0804dac5d2d89599",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "name": "debug 2547",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 3540,
        "wires": []
    },
    {
        "id": "ee08b29a5ce9447c",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 3500,
        "wires": [
            [
                "2bde4bd8ac315c44"
            ]
        ]
    },
    {
        "id": "236638a25156c8b4",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "b41791ebcbbac80d",
        "name": "debug 2548",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 3540,
        "wires": []
    },
    {
        "id": "d6b497d8e1dd595a",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "name": "function 36",
        "func": "\nvar block = msg.payload.b;\nvar device = msg.payload.d;\nvar field = msg.payload.f;\n\n\nvar q = 'from(bucket: \"iGoT\")|>range(start:-5m)|>filter(fn: (r)=>r[\"_measurement\"]==\"v\")|>filter(fn:(r)=>r[\"b\"]== \"' + block + '\")|>filter(fn:(r)=>r[\"d\"]== \"' + device + '\")|>filter(fn:(r)=>r[\"f\"]== \"' + field + '\")|>filter(fn:(r)=>r[\"_field\"]==\"value\")|>window(every: 1m)|>last()'\nmsg.query = q\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 3700,
        "wires": [
            [
                "b66123dea3997a24"
            ]
        ]
    },
    {
        "id": "0d975db1246620f4",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 2160,
        "y": 3700,
        "wires": [
            [
                "1468a5bf37e5d86b"
            ]
        ]
    },
    {
        "id": "c3704648449dcf75",
        "type": "csv",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2500,
        "y": 3700,
        "wires": [
            [
                "d6b497d8e1dd595a",
                "4e630bdfef207da8"
            ]
        ]
    },
    {
        "id": "1468a5bf37e5d86b",
        "type": "template",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "S.No,b,bd,d,dd,dt,f,fd,h,iid,m,p,qu,text,u\n1,B14,B14_INV02,INV02,INV02,INV,PAC,PAC,Server8882,8882,1,Sembcorp,0,new,kW\n2,B14,B14_INV02,INV02,INV02,INV,QAC,QAC,Server8882,8882,1,Sembcorp,,,KVAr\n3,B14,B14_INV02,INV02,INV02,INV,PF,PF,Server8882,8882,1,Sembcorp,,,\n4,B14,B14_INV02,INV02,INV02,INV,FAC,FAC,Server8882,8882,1,Sembcorp,,,Hz\n5,B14,B14_INV02,INV02,INV02,INV,UAC12,UAC12,Server8882,8882,1,Sembcorp,,,kV\n6,B14,B14_INV02,INV02,INV02,INV,UAC23,UAC23,Server8882,8882,1,Sembcorp,,,kV\n7,B14,B14_INV02,INV02,INV02,INV,UAC31,UAC31,Server8882,8882,1,Sembcorp,,,kV\n8,B14,B14_INV02,INV02,INV02,INV,IAC1,IAC1,Server8882,8882,1,Sembcorp,,,A\n9,B14,B14_INV02,INV02,INV02,INV,IAC2,IAC2,Server8882,8882,1,Sembcorp,,,A\n10,B14,B14_INV02,INV02,INV02,INV,IAC3,IAC3,Server8882,8882,1,Sembcorp,,,A\n11,B14,B14_INV02,INV02,INV02,INV,OLD_QAC_REF_SEL,OLD_QAC_REF_SEL,Server8882,8882,1,Sembcorp,,,\n12,B14,B14_INV02,INV02,INV02,INV,OLD_QAC_LIMIT,OLD_QAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n13,B14,B14_INV02,INV02,INV02,INV,OLD_PF_LIMIT,OLD_PF_LIMIT,Server8882,8882,1,Sembcorp,,,\n14,B14,B14_INV02,INV02,INV02,INV,OLD_PAC_LIMIT,OLD_PAC_LIMIT,Server8882,8882,1,Sembcorp,,,\n",
        "output": "str",
        "x": 2350,
        "y": 3700,
        "wires": [
            [
                "c3704648449dcf75"
            ]
        ]
    },
    {
        "id": "4e630bdfef207da8",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2620,
        "y": 3760,
        "wires": [
            [
                "786a785fd6c71f4a"
            ]
        ]
    },
    {
        "id": "cc3c35b897ae9f04",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "name": "to_influx",
        "func": "let value_array = []\nvar array = []\narray.length = 0\n\nfor (var i = 0; i < msg.payload.fields.length ; i++)\n{     \n    for (var j = 0; j < msg.payload.client.length; j++)\n    {\n     \n        for (var k = 0; k < msg.payload.client[j].length - 1; k++)\n        {\n          \n            var field =  msg.payload.fields[i].b + '.' + msg.payload.fields[i].d + '.' + msg.payload.fields[i].f\n            var client = msg.payload.client[j][k].b + '.' + msg.payload.client[j][k].d + '.' + msg.payload.client[j][k].f    \n\n            if(field == client)\n            {\n                    var time = msg.payload.client[j][k]._time\n                    time = new Date(time).getTime();\n                    var val = msg.payload.client[j][k]._value \n\n                    if(!isNaN(val))\n                    { \n                       var obj = {\n                      \"measurement\": \"v\",\n                      \"fields\": {\n                          \"qu\": 0,\n                          \"text\": \"\",\n                          \"value\": val\n                      },\n                        \"tags\": {\n                            \"b\": msg.payload.fields[i].b,\n                            \"bd\": msg.payload.fields[i].bd,\n                            \"d\": msg.payload.fields[i].d,\n                            \"dd\": msg.payload.fields[i].dd,\n                            \"dt\": msg.payload.fields[i].dt,\n                            \"f\": msg.payload.fields[i].f,\n                            \"fd\": msg.payload.fields[i].fd,\n                            \"h\": msg.payload.fields[i].h,\n                            \"iid\": msg.payload.fields[i].iid,\n                            \"m\": msg.payload.fields[i].m,\n                            \"p\": msg.payload.fields[i].p,\n                            \"u\": \"\"\n                        },\n                        \"timestamp\": time,\n                        }       \n\n                    array.push(obj)\n                }\n            }\n        }\n      \n    }\n}\nif(array.length != 0)\n{\n    msg.payload = array\n    return msg;\n}\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 3760,
        "wires": [
            [
                "5fc88996b0ee6f41",
                "6014ccec2fff04c1"
            ]
        ]
    },
    {
        "id": "f6ab9b7af7483cb6",
        "type": "join",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3040,
        "y": 3700,
        "wires": [
            [
                "8ef60a3a475601ca"
            ]
        ]
    },
    {
        "id": "786a785fd6c71f4a",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "name": "fields",
        "func": "var obj = {};\nlet fields_array = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    obj = {   \n        b: msg.payload[i].b,\n        bd: msg.payload[i].bd,\n        d: msg.payload[i].d,\n        dd: msg.payload[i].dd,\n        dt: msg.payload[i].dt,\n        f: msg.payload[i].f,\n        fd: msg.payload[i].fd,\n        h: msg.payload[i].h,\n        iid: msg.payload[i].iid,\n        m: msg.payload[i].m,\n        p: msg.payload[i].p,\n        qu: msg.payload[i].qu,\n        text: msg.payload[i].text,\n        u: msg.payload[i].u,\n        mf: msg.payload[i].mf\n    }\n    fields_array.push(obj)\n\n}\nmsg.payload = fields_array\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 3760,
        "wires": [
            [
                "ca8f5778b4cf86ea",
                "6ee0ca3164e2b4d4"
            ]
        ]
    },
    {
        "id": "ca8f5778b4cf86ea",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fields",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 3760,
        "wires": [
            [
                "d969c34cd2efb6e5"
            ]
        ]
    },
    {
        "id": "d969c34cd2efb6e5",
        "type": "function",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "name": "combine",
        "func": "context.data = context.data || {};\nswitch (msg.topic) {\n    case \"client\":\n        context.data.client = msg.payload;\n        msg = null;\n        break;\n    case \"fields\":\n        context.data.fields = msg.payload;\n        msg = null;\n        break;\n}\nif (context.data.client != null && context.data.fields != null) {\n    var data_combine = {\n        \"client\": context.data.client,\n        \"fields\": context.data.fields\n\n    }\n    context.data = null\n    return { payload: data_combine };\n}  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 3760,
        "wires": [
            [
                "e48b6945c3e17893",
                "c853994043339e37"
            ]
        ]
    },
    {
        "id": "6ee0ca3164e2b4d4",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "name": "debug 2549",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 3800,
        "wires": []
    },
    {
        "id": "8ef60a3a475601ca",
        "type": "change",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 3700,
        "wires": [
            [
                "d969c34cd2efb6e5",
                "927aa72842463b47"
            ]
        ]
    },
    {
        "id": "927aa72842463b47",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "name": "debug 2550",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 3700,
        "wires": []
    },
    {
        "id": "b66123dea3997a24",
        "type": "influxdb in",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "influxdb": "596fb6e3780beca3",
        "name": "query_fr_primary",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iplon",
        "x": 2860,
        "y": 3700,
        "wires": [
            [
                "f6ab9b7af7483cb6"
            ]
        ]
    },
    {
        "id": "5fc88996b0ee6f41",
        "type": "influxdb batch",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "influxdb": "ad8e700af90dda07",
        "precision": "",
        "retentionPolicy": "",
        "name": "influxdb",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iplon",
        "bucket": "iSolar",
        "x": 3730,
        "y": 3760,
        "wires": []
    },
    {
        "id": "6014ccec2fff04c1",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "name": "debug 2551",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 3800,
        "wires": []
    },
    {
        "id": "e48b6945c3e17893",
        "type": "delay",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3390,
        "y": 3760,
        "wires": [
            [
                "cc3c35b897ae9f04"
            ]
        ]
    },
    {
        "id": "c853994043339e37",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "g": "d1160bedd05ea1c1",
        "name": "debug 2552",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 3800,
        "wires": []
    },
    {
        "id": "df8e7d73fb906c64",
        "type": "debug",
        "z": "4171233ca3258c9e",
        "name": "debug 2557",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 100,
        "wires": []
    },
    {
        "id": "dff7f0c45a52553a",
        "type": "inject",
        "z": "4171233ca3258c9e",
        "g": "faf96fddf28ed077",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "0.001",
        "topic": "",
        "x": 250,
        "y": 240,
        "wires": [
            [
                "bf3b03fa1efcaf54"
            ]
        ]
    }
]